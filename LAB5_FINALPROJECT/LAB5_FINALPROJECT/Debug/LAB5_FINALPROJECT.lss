
LAB5_FINALPROJECT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000580  00000614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000580  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800108  00800108  0000061c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001031  00000000  00000000  00000724  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce3  00000000  00000000  00001755  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000617  00000000  00000000  00002438  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e4  00000000  00000000  00002a50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006dd  00000000  00000000  00002c34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000077e  00000000  00000000  00003311  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003a8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	3b c1       	rjmp	.+630    	; 0x27c <__vector_1>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	46 c1       	rjmp	.+652    	; 0x29a <__vector_3>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	57 c1       	rjmp	.+686    	; 0x2cc <__vector_7>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	3a c1       	rjmp	.+628    	; 0x2ea <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e0 e8       	ldi	r30, 0x80	; 128
  ac:	f5 e0       	ldi	r31, 0x05	; 5
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 30       	cpi	r26, 0x08	; 8
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a8 e0       	ldi	r26, 0x08	; 8
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ac 30       	cpi	r26, 0x0C	; 12
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	91 d0       	rcall	.+290    	; 0x1f2 <main>
  d0:	55 c2       	rjmp	.+1194   	; 0x57c <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <initTimer1>:
#include "interrupt.h"
void initTimer1 (void){ //initialize Timer 1 for CTC (Clear Timer on Compare)
	/*set Waveform Generation mode to Clear Timer*/
	/*set WGM bits to 0100*/
	/*note WGM is spread over two registers*/
	TCCR1B |= _BV(WGM12);
  d4:	e1 e8       	ldi	r30, 0x81	; 129
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 60       	ori	r24, 0x08	; 8
  dc:	80 83       	st	Z, r24
	/*set Output Compare Register for 1000 cycles (1ms)*/
	OCR1A = 0x03E8;
  de:	88 ee       	ldi	r24, 0xE8	; 232
  e0:	93 e0       	ldi	r25, 0x03	; 3
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	/*set the initial value of the Timer rCounter to 0x0000*/
	TCNT1 = 0x0000;
  ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f2:	08 95       	ret

000000f4 <mTimer>:
}
void mTimer(int count){ // delay microsecond
  f4:	ac 01       	movw	r20, r24
	int i = 0; //initialize loop counter
	/*Enable the output compare interrupt enable*/
	//TIMSK1 = TIMSK1 | 0b00000010; // --ODA edit
	/*initialize timer with prescalar of 1*/
	TCCR1B |= _BV(CS10);
  f6:	e1 e8       	ldi	r30, 0x81	; 129
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	90 81       	ld	r25, Z
  fc:	91 60       	ori	r25, 0x01	; 1
  fe:	90 83       	st	Z, r25
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
 100:	b1 9a       	sbi	0x16, 1	; 22
	OCR1A = 0x03E8;
	/*set the initial value of the Timer rCounter to 0x0000*/
	TCNT1 = 0x0000;
}
void mTimer(int count){ // delay microsecond
	int i = 0; //initialize loop counter
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
	/*initialize timer with prescalar of 1*/
	TCCR1B |= _BV(CS10);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);

	while (i<count){
 106:	05 c0       	rjmp	.+10     	; 0x112 <mTimer+0x1e>
		if ((TIFR1 & 0x02) == 0x02){
 108:	b1 9b       	sbis	0x16, 1	; 22
 10a:	fe cf       	rjmp	.-4      	; 0x108 <mTimer+0x14>
			//clear interrupt flag by WRITING a ONE to the bit
			TIFR1 |= _BV(OCF1A);
 10c:	b1 9a       	sbi	0x16, 1	; 22
			i++; //increment loop counter
 10e:	2f 5f       	subi	r18, 0xFF	; 255
 110:	3f 4f       	sbci	r19, 0xFF	; 255
	/*initialize timer with prescalar of 1*/
	TCCR1B |= _BV(CS10);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);

	while (i<count){
 112:	24 17       	cp	r18, r20
 114:	35 07       	cpc	r19, r21
 116:	1c f4       	brge	.+6      	; 0x11e <mTimer+0x2a>
		if ((TIFR1 & 0x02) == 0x02){
 118:	b1 9b       	sbis	0x16, 1	; 22
 11a:	f6 cf       	rjmp	.-20     	; 0x108 <mTimer+0x14>
 11c:	f7 cf       	rjmp	.-18     	; 0x10c <mTimer+0x18>
			TIFR1 |= _BV(OCF1A);
			i++; //increment loop counter
			/*Timer resets automatically due to WGM settings*/
		} //if end
	}//while end
	TCCR1B &= 0b11111000; //shut off timer 
 11e:	e1 e8       	ldi	r30, 0x81	; 129
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	88 7f       	andi	r24, 0xF8	; 248
 126:	80 83       	st	Z, r24
 128:	08 95       	ret

0000012a <stepperHome>:
	if(((PINB & 0b00001100) >> 2) != d){ //if current direction doesn't match new direction
		PORTB &= 0b11110000; //apply Vcc Brake
		PORTB |= 0b0011 | ((d & 0b11) << 2); //start motor in specified direction
	}
	dutyCycle = s*2.55;
	OCR0A = dutyCycle;//set duty cycle
 12a:	ef 92       	push	r14
 12c:	ff 92       	push	r15
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	8c 01       	movw	r16, r24
 138:	eb 01       	movw	r28, r22
 13a:	e1 2c       	mov	r14, r1
 13c:	f1 2c       	mov	r15, r1
 13e:	c7 01       	movw	r24, r14
 140:	83 70       	andi	r24, 0x03	; 3
 142:	90 78       	andi	r25, 0x80	; 128
 144:	99 23       	and	r25, r25
 146:	24 f4       	brge	.+8      	; 0x150 <stepperHome+0x26>
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	8c 6f       	ori	r24, 0xFC	; 252
 14c:	9f 6f       	ori	r25, 0xFF	; 255
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	fc 01       	movw	r30, r24
 156:	e0 50       	subi	r30, 0x00	; 0
 158:	ff 4f       	sbci	r31, 0xFF	; 255
 15a:	80 81       	ld	r24, Z
 15c:	88 b9       	out	0x08, r24	; 8
 15e:	88 e2       	ldi	r24, 0x28	; 40
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	c8 df       	rcall	.-112    	; 0xf4 <mTimer>
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	e8 1a       	sub	r14, r24
 168:	f8 0a       	sbc	r15, r24
 16a:	e5 e6       	ldi	r30, 0x65	; 101
 16c:	ee 16       	cp	r14, r30
 16e:	f1 04       	cpc	r15, r1
 170:	31 f7       	brne	.-52     	; 0x13e <stepperHome+0x14>
 172:	f8 01       	movw	r30, r16
 174:	11 82       	std	Z+1, r1	; 0x01
 176:	10 82       	st	Z, r1
 178:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 17c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 180:	99 83       	std	Y+1, r25	; 0x01
 182:	88 83       	st	Y, r24
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	1f 91       	pop	r17
 18a:	0f 91       	pop	r16
 18c:	ff 90       	pop	r15
 18e:	ef 90       	pop	r14
 190:	08 95       	ret

00000192 <setupPWM>:
 192:	bc 01       	movw	r22, r24
 194:	84 b5       	in	r24, 0x24	; 36
 196:	83 68       	ori	r24, 0x83	; 131
 198:	84 bd       	out	0x24, r24	; 36
 19a:	85 b5       	in	r24, 0x25	; 37
 19c:	82 60       	ori	r24, 0x02	; 2
 19e:	85 bd       	out	0x25, r24	; 37
 1a0:	07 2e       	mov	r0, r23
 1a2:	00 0c       	add	r0, r0
 1a4:	88 0b       	sbc	r24, r24
 1a6:	99 0b       	sbc	r25, r25
 1a8:	fa d0       	rcall	.+500    	; 0x39e <__floatsisf>
 1aa:	23 e3       	ldi	r18, 0x33	; 51
 1ac:	33 e3       	ldi	r19, 0x33	; 51
 1ae:	43 e2       	ldi	r20, 0x23	; 35
 1b0:	50 e4       	ldi	r21, 0x40	; 64
 1b2:	59 d1       	rcall	.+690    	; 0x466 <__mulsf3>
 1b4:	c6 d0       	rcall	.+396    	; 0x342 <__fixunssfsi>
 1b6:	67 bd       	out	0x27, r22	; 39
 1b8:	08 95       	ret

000001ba <setupISR>:
 1ba:	8d b3       	in	r24, 0x1d	; 29
 1bc:	85 64       	ori	r24, 0x45	; 69
 1be:	8d bb       	out	0x1d, r24	; 29
 1c0:	e9 e6       	ldi	r30, 0x69	; 105
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	83 63       	ori	r24, 0x33	; 51
 1c8:	80 83       	st	Z, r24
 1ca:	ea e6       	ldi	r30, 0x6A	; 106
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	80 62       	ori	r24, 0x20	; 32
 1d2:	80 83       	st	Z, r24
 1d4:	08 95       	ret

000001d6 <setupADC>:
 1d6:	ea e7       	ldi	r30, 0x7A	; 122
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	8d 68       	ori	r24, 0x8D	; 141
 1de:	80 83       	st	Z, r24
 1e0:	ec e7       	ldi	r30, 0x7C	; 124
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	81 64       	ori	r24, 0x41	; 65
 1e8:	80 83       	st	Z, r24
 1ea:	80 81       	ld	r24, Z
 1ec:	81 7e       	andi	r24, 0xE1	; 225
 1ee:	80 83       	st	Z, r24
 1f0:	08 95       	ret

000001f2 <main>:
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	00 d0       	rcall	.+0      	; 0x1f8 <main+0x6>
 1f8:	00 d0       	rcall	.+0      	; 0x1fa <main+0x8>
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	1a 82       	std	Y+2, r1	; 0x02
 200:	19 82       	std	Y+1, r1	; 0x01
 202:	8d e0       	ldi	r24, 0x0D	; 13
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	9c 83       	std	Y+4, r25	; 0x04
 208:	8b 83       	std	Y+3, r24	; 0x03
 20a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 20e:	f8 94       	cli
 210:	8e e1       	ldi	r24, 0x1E	; 30
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	be df       	rcall	.-132    	; 0x192 <setupPWM>
 216:	d1 df       	rcall	.-94     	; 0x1ba <setupISR>
 218:	de df       	rcall	.-68     	; 0x1d6 <setupADC>
 21a:	5c df       	rcall	.-328    	; 0xd4 <initTimer1>
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	81 b9       	out	0x01, r24	; 1
 220:	84 b9       	out	0x04, r24	; 4
 222:	87 b9       	out	0x07, r24	; 7
 224:	80 ef       	ldi	r24, 0xF0	; 240
 226:	8a b9       	out	0x0a, r24	; 10
 228:	1d b8       	out	0x0d, r1	; 13
 22a:	10 ba       	out	0x10, r1	; 16
 22c:	78 94       	sei
 22e:	e1 e8       	ldi	r30, 0x81	; 129
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	81 60       	ori	r24, 0x01	; 1
 236:	80 83       	st	Z, r24
 238:	ea e7       	ldi	r30, 0x7A	; 122
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	80 64       	ori	r24, 0x40	; 64
 240:	80 83       	st	Z, r24
 242:	be 01       	movw	r22, r28
 244:	6d 5f       	subi	r22, 0xFD	; 253
 246:	7f 4f       	sbci	r23, 0xFF	; 255
 248:	ce 01       	movw	r24, r28
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	6e df       	rcall	.-292    	; 0x12a <stepperHome>
 24e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 252:	ea e7       	ldi	r30, 0x7A	; 122
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 25a:	88 23       	and	r24, r24
 25c:	e1 f3       	breq	.-8      	; 0x256 <main+0x64>
 25e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <ADCResult>
 262:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <ADCResult+0x1>
 266:	96 95       	lsr	r25
 268:	87 95       	ror	r24
 26a:	96 95       	lsr	r25
 26c:	87 95       	ror	r24
 26e:	88 b9       	out	0x08, r24	; 8
 270:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
 274:	80 81       	ld	r24, Z
 276:	80 64       	ori	r24, 0x40	; 64
 278:	80 83       	st	Z, r24
 27a:	ed cf       	rjmp	.-38     	; 0x256 <main+0x64>

0000027c <__vector_1>:
}

/**********INTERRUPT SERVICE ROUTINES**********/
/*Button interrupt for emergency: shut-off dc motor, disable stepper, shut off, ensure nothing can be turned on*/

ISR(INT0_vect){ // on PD0; KILL SWITCH
 27c:	1f 92       	push	r1
 27e:	0f 92       	push	r0
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	0f 92       	push	r0
 284:	11 24       	eor	r1, r1
 286:	8f 93       	push	r24
	PORTB &= 0b11110011; //stop motor
 288:	85 b1       	in	r24, 0x05	; 5
 28a:	83 7f       	andi	r24, 0xF3	; 243
 28c:	85 b9       	out	0x05, r24	; 5
	
}
 28e:	8f 91       	pop	r24
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <__vector_3>:

/*sensor 3: 2nt Optical Inductive, Active HIGH starts AD conversion*/
ISR(INT2_vect){
 29a:	1f 92       	push	r1
 29c:	0f 92       	push	r0
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	0f 92       	push	r0
 2a2:	11 24       	eor	r1, r1
 2a4:	0b b6       	in	r0, 0x3b	; 59
 2a6:	0f 92       	push	r0
 2a8:	8f 93       	push	r24
 2aa:	ef 93       	push	r30
 2ac:	ff 93       	push	r31
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	ADCSRA |= _BV(ADSC);
 2ae:	ea e7       	ldi	r30, 0x7A	; 122
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	80 64       	ori	r24, 0x40	; 64
 2b6:	80 83       	st	Z, r24
}
 2b8:	ff 91       	pop	r31
 2ba:	ef 91       	pop	r30
 2bc:	8f 91       	pop	r24
 2be:	0f 90       	pop	r0
 2c0:	0b be       	out	0x3b, r0	; 59
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <__vector_7>:

ISR(INT6_vect){ //Active low for hall effect sensor on PE4
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	8f 93       	push	r24
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	HallEffect=0x01;
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <HallEffect>
}
 2de:	8f 91       	pop	r24
 2e0:	0f 90       	pop	r0
 2e2:	0f be       	out	0x3f, r0	; 63
 2e4:	0f 90       	pop	r0
 2e6:	1f 90       	pop	r1
 2e8:	18 95       	reti

000002ea <__vector_29>:

/*ADC ISR: triggered when ADC is completed*/
ISR(ADC_vect){
 2ea:	1f 92       	push	r1
 2ec:	0f 92       	push	r0
 2ee:	0f b6       	in	r0, 0x3f	; 63
 2f0:	0f 92       	push	r0
 2f2:	11 24       	eor	r1, r1
 2f4:	2f 93       	push	r18
 2f6:	3f 93       	push	r19
 2f8:	8f 93       	push	r24
 2fa:	9f 93       	push	r25
	ADCResult = ADCL;
 2fc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <ADCResult+0x1>
 306:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <ADCResult>
	ADCResult += ADCH << 8;
 30a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 30e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <ADCResult>
 312:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <ADCResult+0x1>
 316:	89 2f       	mov	r24, r25
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	98 2f       	mov	r25, r24
 31c:	88 27       	eor	r24, r24
 31e:	82 0f       	add	r24, r18
 320:	93 1f       	adc	r25, r19
 322:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <ADCResult+0x1>
 326:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <ADCResult>
	ADCResultFlag = 1;
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
}
 330:	9f 91       	pop	r25
 332:	8f 91       	pop	r24
 334:	3f 91       	pop	r19
 336:	2f 91       	pop	r18
 338:	0f 90       	pop	r0
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	0f 90       	pop	r0
 33e:	1f 90       	pop	r1
 340:	18 95       	reti

00000342 <__fixunssfsi>:
 342:	70 d0       	rcall	.+224    	; 0x424 <__fp_splitA>
 344:	88 f0       	brcs	.+34     	; 0x368 <__fixunssfsi+0x26>
 346:	9f 57       	subi	r25, 0x7F	; 127
 348:	90 f0       	brcs	.+36     	; 0x36e <__fixunssfsi+0x2c>
 34a:	b9 2f       	mov	r27, r25
 34c:	99 27       	eor	r25, r25
 34e:	b7 51       	subi	r27, 0x17	; 23
 350:	a0 f0       	brcs	.+40     	; 0x37a <__fixunssfsi+0x38>
 352:	d1 f0       	breq	.+52     	; 0x388 <__fixunssfsi+0x46>
 354:	66 0f       	add	r22, r22
 356:	77 1f       	adc	r23, r23
 358:	88 1f       	adc	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	1a f0       	brmi	.+6      	; 0x364 <__fixunssfsi+0x22>
 35e:	ba 95       	dec	r27
 360:	c9 f7       	brne	.-14     	; 0x354 <__fixunssfsi+0x12>
 362:	12 c0       	rjmp	.+36     	; 0x388 <__fixunssfsi+0x46>
 364:	b1 30       	cpi	r27, 0x01	; 1
 366:	81 f0       	breq	.+32     	; 0x388 <__fixunssfsi+0x46>
 368:	77 d0       	rcall	.+238    	; 0x458 <__fp_zero>
 36a:	b1 e0       	ldi	r27, 0x01	; 1
 36c:	08 95       	ret
 36e:	74 c0       	rjmp	.+232    	; 0x458 <__fp_zero>
 370:	67 2f       	mov	r22, r23
 372:	78 2f       	mov	r23, r24
 374:	88 27       	eor	r24, r24
 376:	b8 5f       	subi	r27, 0xF8	; 248
 378:	39 f0       	breq	.+14     	; 0x388 <__fixunssfsi+0x46>
 37a:	b9 3f       	cpi	r27, 0xF9	; 249
 37c:	cc f3       	brlt	.-14     	; 0x370 <__fixunssfsi+0x2e>
 37e:	86 95       	lsr	r24
 380:	77 95       	ror	r23
 382:	67 95       	ror	r22
 384:	b3 95       	inc	r27
 386:	d9 f7       	brne	.-10     	; 0x37e <__fixunssfsi+0x3c>
 388:	3e f4       	brtc	.+14     	; 0x398 <__fixunssfsi+0x56>
 38a:	90 95       	com	r25
 38c:	80 95       	com	r24
 38e:	70 95       	com	r23
 390:	61 95       	neg	r22
 392:	7f 4f       	sbci	r23, 0xFF	; 255
 394:	8f 4f       	sbci	r24, 0xFF	; 255
 396:	9f 4f       	sbci	r25, 0xFF	; 255
 398:	08 95       	ret

0000039a <__floatunsisf>:
 39a:	e8 94       	clt
 39c:	09 c0       	rjmp	.+18     	; 0x3b0 <__floatsisf+0x12>

0000039e <__floatsisf>:
 39e:	97 fb       	bst	r25, 7
 3a0:	3e f4       	brtc	.+14     	; 0x3b0 <__floatsisf+0x12>
 3a2:	90 95       	com	r25
 3a4:	80 95       	com	r24
 3a6:	70 95       	com	r23
 3a8:	61 95       	neg	r22
 3aa:	7f 4f       	sbci	r23, 0xFF	; 255
 3ac:	8f 4f       	sbci	r24, 0xFF	; 255
 3ae:	9f 4f       	sbci	r25, 0xFF	; 255
 3b0:	99 23       	and	r25, r25
 3b2:	a9 f0       	breq	.+42     	; 0x3de <__floatsisf+0x40>
 3b4:	f9 2f       	mov	r31, r25
 3b6:	96 e9       	ldi	r25, 0x96	; 150
 3b8:	bb 27       	eor	r27, r27
 3ba:	93 95       	inc	r25
 3bc:	f6 95       	lsr	r31
 3be:	87 95       	ror	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b7 95       	ror	r27
 3c6:	f1 11       	cpse	r31, r1
 3c8:	f8 cf       	rjmp	.-16     	; 0x3ba <__floatsisf+0x1c>
 3ca:	fa f4       	brpl	.+62     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3cc:	bb 0f       	add	r27, r27
 3ce:	11 f4       	brne	.+4      	; 0x3d4 <__floatsisf+0x36>
 3d0:	60 ff       	sbrs	r22, 0
 3d2:	1b c0       	rjmp	.+54     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3d4:	6f 5f       	subi	r22, 0xFF	; 255
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	16 c0       	rjmp	.+44     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3de:	88 23       	and	r24, r24
 3e0:	11 f0       	breq	.+4      	; 0x3e6 <__floatsisf+0x48>
 3e2:	96 e9       	ldi	r25, 0x96	; 150
 3e4:	11 c0       	rjmp	.+34     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3e6:	77 23       	and	r23, r23
 3e8:	21 f0       	breq	.+8      	; 0x3f2 <__floatsisf+0x54>
 3ea:	9e e8       	ldi	r25, 0x8E	; 142
 3ec:	87 2f       	mov	r24, r23
 3ee:	76 2f       	mov	r23, r22
 3f0:	05 c0       	rjmp	.+10     	; 0x3fc <__floatsisf+0x5e>
 3f2:	66 23       	and	r22, r22
 3f4:	71 f0       	breq	.+28     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f6:	96 e8       	ldi	r25, 0x86	; 134
 3f8:	86 2f       	mov	r24, r22
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	2a f0       	brmi	.+10     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 400:	9a 95       	dec	r25
 402:	66 0f       	add	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	88 1f       	adc	r24, r24
 408:	da f7       	brpl	.-10     	; 0x400 <__LOCK_REGION_LENGTH__>
 40a:	88 0f       	add	r24, r24
 40c:	96 95       	lsr	r25
 40e:	87 95       	ror	r24
 410:	97 f9       	bld	r25, 7
 412:	08 95       	ret

00000414 <__fp_split3>:
 414:	57 fd       	sbrc	r21, 7
 416:	90 58       	subi	r25, 0x80	; 128
 418:	44 0f       	add	r20, r20
 41a:	55 1f       	adc	r21, r21
 41c:	59 f0       	breq	.+22     	; 0x434 <__fp_splitA+0x10>
 41e:	5f 3f       	cpi	r21, 0xFF	; 255
 420:	71 f0       	breq	.+28     	; 0x43e <__fp_splitA+0x1a>
 422:	47 95       	ror	r20

00000424 <__fp_splitA>:
 424:	88 0f       	add	r24, r24
 426:	97 fb       	bst	r25, 7
 428:	99 1f       	adc	r25, r25
 42a:	61 f0       	breq	.+24     	; 0x444 <__fp_splitA+0x20>
 42c:	9f 3f       	cpi	r25, 0xFF	; 255
 42e:	79 f0       	breq	.+30     	; 0x44e <__fp_splitA+0x2a>
 430:	87 95       	ror	r24
 432:	08 95       	ret
 434:	12 16       	cp	r1, r18
 436:	13 06       	cpc	r1, r19
 438:	14 06       	cpc	r1, r20
 43a:	55 1f       	adc	r21, r21
 43c:	f2 cf       	rjmp	.-28     	; 0x422 <__fp_split3+0xe>
 43e:	46 95       	lsr	r20
 440:	f1 df       	rcall	.-30     	; 0x424 <__fp_splitA>
 442:	08 c0       	rjmp	.+16     	; 0x454 <__fp_splitA+0x30>
 444:	16 16       	cp	r1, r22
 446:	17 06       	cpc	r1, r23
 448:	18 06       	cpc	r1, r24
 44a:	99 1f       	adc	r25, r25
 44c:	f1 cf       	rjmp	.-30     	; 0x430 <__fp_splitA+0xc>
 44e:	86 95       	lsr	r24
 450:	71 05       	cpc	r23, r1
 452:	61 05       	cpc	r22, r1
 454:	08 94       	sec
 456:	08 95       	ret

00000458 <__fp_zero>:
 458:	e8 94       	clt

0000045a <__fp_szero>:
 45a:	bb 27       	eor	r27, r27
 45c:	66 27       	eor	r22, r22
 45e:	77 27       	eor	r23, r23
 460:	cb 01       	movw	r24, r22
 462:	97 f9       	bld	r25, 7
 464:	08 95       	ret

00000466 <__mulsf3>:
 466:	0b d0       	rcall	.+22     	; 0x47e <__mulsf3x>
 468:	78 c0       	rjmp	.+240    	; 0x55a <__fp_round>
 46a:	69 d0       	rcall	.+210    	; 0x53e <__fp_pscA>
 46c:	28 f0       	brcs	.+10     	; 0x478 <__mulsf3+0x12>
 46e:	6e d0       	rcall	.+220    	; 0x54c <__fp_pscB>
 470:	18 f0       	brcs	.+6      	; 0x478 <__mulsf3+0x12>
 472:	95 23       	and	r25, r21
 474:	09 f0       	breq	.+2      	; 0x478 <__mulsf3+0x12>
 476:	5a c0       	rjmp	.+180    	; 0x52c <__fp_inf>
 478:	5f c0       	rjmp	.+190    	; 0x538 <__fp_nan>
 47a:	11 24       	eor	r1, r1
 47c:	ee cf       	rjmp	.-36     	; 0x45a <__fp_szero>

0000047e <__mulsf3x>:
 47e:	ca df       	rcall	.-108    	; 0x414 <__fp_split3>
 480:	a0 f3       	brcs	.-24     	; 0x46a <__mulsf3+0x4>

00000482 <__mulsf3_pse>:
 482:	95 9f       	mul	r25, r21
 484:	d1 f3       	breq	.-12     	; 0x47a <__mulsf3+0x14>
 486:	95 0f       	add	r25, r21
 488:	50 e0       	ldi	r21, 0x00	; 0
 48a:	55 1f       	adc	r21, r21
 48c:	62 9f       	mul	r22, r18
 48e:	f0 01       	movw	r30, r0
 490:	72 9f       	mul	r23, r18
 492:	bb 27       	eor	r27, r27
 494:	f0 0d       	add	r31, r0
 496:	b1 1d       	adc	r27, r1
 498:	63 9f       	mul	r22, r19
 49a:	aa 27       	eor	r26, r26
 49c:	f0 0d       	add	r31, r0
 49e:	b1 1d       	adc	r27, r1
 4a0:	aa 1f       	adc	r26, r26
 4a2:	64 9f       	mul	r22, r20
 4a4:	66 27       	eor	r22, r22
 4a6:	b0 0d       	add	r27, r0
 4a8:	a1 1d       	adc	r26, r1
 4aa:	66 1f       	adc	r22, r22
 4ac:	82 9f       	mul	r24, r18
 4ae:	22 27       	eor	r18, r18
 4b0:	b0 0d       	add	r27, r0
 4b2:	a1 1d       	adc	r26, r1
 4b4:	62 1f       	adc	r22, r18
 4b6:	73 9f       	mul	r23, r19
 4b8:	b0 0d       	add	r27, r0
 4ba:	a1 1d       	adc	r26, r1
 4bc:	62 1f       	adc	r22, r18
 4be:	83 9f       	mul	r24, r19
 4c0:	a0 0d       	add	r26, r0
 4c2:	61 1d       	adc	r22, r1
 4c4:	22 1f       	adc	r18, r18
 4c6:	74 9f       	mul	r23, r20
 4c8:	33 27       	eor	r19, r19
 4ca:	a0 0d       	add	r26, r0
 4cc:	61 1d       	adc	r22, r1
 4ce:	23 1f       	adc	r18, r19
 4d0:	84 9f       	mul	r24, r20
 4d2:	60 0d       	add	r22, r0
 4d4:	21 1d       	adc	r18, r1
 4d6:	82 2f       	mov	r24, r18
 4d8:	76 2f       	mov	r23, r22
 4da:	6a 2f       	mov	r22, r26
 4dc:	11 24       	eor	r1, r1
 4de:	9f 57       	subi	r25, 0x7F	; 127
 4e0:	50 40       	sbci	r21, 0x00	; 0
 4e2:	8a f0       	brmi	.+34     	; 0x506 <__mulsf3_pse+0x84>
 4e4:	e1 f0       	breq	.+56     	; 0x51e <__mulsf3_pse+0x9c>
 4e6:	88 23       	and	r24, r24
 4e8:	4a f0       	brmi	.+18     	; 0x4fc <__mulsf3_pse+0x7a>
 4ea:	ee 0f       	add	r30, r30
 4ec:	ff 1f       	adc	r31, r31
 4ee:	bb 1f       	adc	r27, r27
 4f0:	66 1f       	adc	r22, r22
 4f2:	77 1f       	adc	r23, r23
 4f4:	88 1f       	adc	r24, r24
 4f6:	91 50       	subi	r25, 0x01	; 1
 4f8:	50 40       	sbci	r21, 0x00	; 0
 4fa:	a9 f7       	brne	.-22     	; 0x4e6 <__mulsf3_pse+0x64>
 4fc:	9e 3f       	cpi	r25, 0xFE	; 254
 4fe:	51 05       	cpc	r21, r1
 500:	70 f0       	brcs	.+28     	; 0x51e <__mulsf3_pse+0x9c>
 502:	14 c0       	rjmp	.+40     	; 0x52c <__fp_inf>
 504:	aa cf       	rjmp	.-172    	; 0x45a <__fp_szero>
 506:	5f 3f       	cpi	r21, 0xFF	; 255
 508:	ec f3       	brlt	.-6      	; 0x504 <__mulsf3_pse+0x82>
 50a:	98 3e       	cpi	r25, 0xE8	; 232
 50c:	dc f3       	brlt	.-10     	; 0x504 <__mulsf3_pse+0x82>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b7 95       	ror	r27
 516:	f7 95       	ror	r31
 518:	e7 95       	ror	r30
 51a:	9f 5f       	subi	r25, 0xFF	; 255
 51c:	c1 f7       	brne	.-16     	; 0x50e <__mulsf3_pse+0x8c>
 51e:	fe 2b       	or	r31, r30
 520:	88 0f       	add	r24, r24
 522:	91 1d       	adc	r25, r1
 524:	96 95       	lsr	r25
 526:	87 95       	ror	r24
 528:	97 f9       	bld	r25, 7
 52a:	08 95       	ret

0000052c <__fp_inf>:
 52c:	97 f9       	bld	r25, 7
 52e:	9f 67       	ori	r25, 0x7F	; 127
 530:	80 e8       	ldi	r24, 0x80	; 128
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	60 e0       	ldi	r22, 0x00	; 0
 536:	08 95       	ret

00000538 <__fp_nan>:
 538:	9f ef       	ldi	r25, 0xFF	; 255
 53a:	80 ec       	ldi	r24, 0xC0	; 192
 53c:	08 95       	ret

0000053e <__fp_pscA>:
 53e:	00 24       	eor	r0, r0
 540:	0a 94       	dec	r0
 542:	16 16       	cp	r1, r22
 544:	17 06       	cpc	r1, r23
 546:	18 06       	cpc	r1, r24
 548:	09 06       	cpc	r0, r25
 54a:	08 95       	ret

0000054c <__fp_pscB>:
 54c:	00 24       	eor	r0, r0
 54e:	0a 94       	dec	r0
 550:	12 16       	cp	r1, r18
 552:	13 06       	cpc	r1, r19
 554:	14 06       	cpc	r1, r20
 556:	05 06       	cpc	r0, r21
 558:	08 95       	ret

0000055a <__fp_round>:
 55a:	09 2e       	mov	r0, r25
 55c:	03 94       	inc	r0
 55e:	00 0c       	add	r0, r0
 560:	11 f4       	brne	.+4      	; 0x566 <__fp_round+0xc>
 562:	88 23       	and	r24, r24
 564:	52 f0       	brmi	.+20     	; 0x57a <__fp_round+0x20>
 566:	bb 0f       	add	r27, r27
 568:	40 f4       	brcc	.+16     	; 0x57a <__fp_round+0x20>
 56a:	bf 2b       	or	r27, r31
 56c:	11 f4       	brne	.+4      	; 0x572 <__fp_round+0x18>
 56e:	60 ff       	sbrs	r22, 0
 570:	04 c0       	rjmp	.+8      	; 0x57a <__fp_round+0x20>
 572:	6f 5f       	subi	r22, 0xFF	; 255
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	08 95       	ret

0000057c <_exit>:
 57c:	f8 94       	cli

0000057e <__stop_program>:
 57e:	ff cf       	rjmp	.-2      	; 0x57e <__stop_program>
