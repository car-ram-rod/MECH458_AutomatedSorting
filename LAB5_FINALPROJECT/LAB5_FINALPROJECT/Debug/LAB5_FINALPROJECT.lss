
LAB5_FINALPROJECT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000007ba  0000084e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800108  00800108  00000856  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000856  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000888  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001065  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce3  00000000  00000000  000019c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000609  00000000  00000000  000026a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00002cb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d3  00000000  00000000  00002e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000075d  00000000  00000000  0000355b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003cb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	4a c2       	rjmp	.+1172   	; 0x49a <__vector_1>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	55 c2       	rjmp	.+1194   	; 0x4b8 <__vector_3>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c2       	rjmp	.+1228   	; 0x4ea <__vector_7>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c2       	rjmp	.+1170   	; 0x508 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	ea eb       	ldi	r30, 0xBA	; 186
  ac:	f7 e0       	ldi	r31, 0x07	; 7
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 30       	cpi	r26, 0x08	; 8
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a8 e0       	ldi	r26, 0x08	; 8
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ab 30       	cpi	r26, 0x0B	; 11
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	a3 d1       	rcall	.+838    	; 0x416 <main>
  d0:	72 c3       	rjmp	.+1764   	; 0x7b6 <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <initTimer1>:
#include "interrupt.h"
void initTimer1 (void){ //initialize Timer 1 for CTC (Clear Timer on Compare)
	/*set Waveform Generation mode to Clear Timer*/
	/*set WGM bits to 0100*/
	/*note WGM is spread over two registers*/
	TCCR1B |= _BV(WGM12);
  d4:	e1 e8       	ldi	r30, 0x81	; 129
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 60       	ori	r24, 0x08	; 8
  dc:	80 83       	st	Z, r24
	/*set Output Compare Register for 1000 cycles (1ms)*/
	OCR1A = 0x03E8;
  de:	88 ee       	ldi	r24, 0xE8	; 232
  e0:	93 e0       	ldi	r25, 0x03	; 3
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	/*set the initial value of the Timer rCounter to 0x0000*/
	TCNT1 = 0x0000;
  ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f2:	08 95       	ret

000000f4 <mTimer>:
}
void mTimer(int count){ // delay microsecond
  f4:	ac 01       	movw	r20, r24
	int i = 0; //initialize loop counter
	/*Enable the output compare interrupt enable*/
	//TIMSK1 = TIMSK1 | 0b00000010; // --ODA edit: becomes
	/*initialize timer 1 with prescalar of 1/8*/
	TCCR1B |= _BV(CS11);
  f6:	e1 e8       	ldi	r30, 0x81	; 129
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	90 81       	ld	r25, Z
  fc:	92 60       	ori	r25, 0x02	; 2
  fe:	90 83       	st	Z, r25
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
 100:	b1 9a       	sbi	0x16, 1	; 22
	OCR1A = 0x03E8;
	/*set the initial value of the Timer rCounter to 0x0000*/
	TCNT1 = 0x0000;
}
void mTimer(int count){ // delay microsecond
	int i = 0; //initialize loop counter
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
	/*initialize timer 1 with prescalar of 1/8*/
	TCCR1B |= _BV(CS11);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);

	while (i<count){
 106:	05 c0       	rjmp	.+10     	; 0x112 <mTimer+0x1e>
		if ((TIFR1 & 0x02) == 0x02){
 108:	b1 9b       	sbis	0x16, 1	; 22
 10a:	fe cf       	rjmp	.-4      	; 0x108 <mTimer+0x14>
			//clear interrupt flag by WRITING a ONE to the bit
			TIFR1 |= _BV(OCF1A);
 10c:	b1 9a       	sbi	0x16, 1	; 22
			i++; //increment loop counter
 10e:	2f 5f       	subi	r18, 0xFF	; 255
 110:	3f 4f       	sbci	r19, 0xFF	; 255
	/*initialize timer 1 with prescalar of 1/8*/
	TCCR1B |= _BV(CS11);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);

	while (i<count){
 112:	24 17       	cp	r18, r20
 114:	35 07       	cpc	r19, r21
 116:	1c f4       	brge	.+6      	; 0x11e <mTimer+0x2a>
		if ((TIFR1 & 0x02) == 0x02){
 118:	b1 9b       	sbis	0x16, 1	; 22
 11a:	f6 cf       	rjmp	.-20     	; 0x108 <mTimer+0x14>
 11c:	f7 cf       	rjmp	.-18     	; 0x10c <mTimer+0x18>
			TIFR1 |= _BV(OCF1A);
			i++; //increment loop counter
			/*Timer resets automatically due to WGM settings*/
		} //if end
	}//while end
	TCCR1B &= 0b11111000; //shut off timer 1
 11e:	e1 e8       	ldi	r30, 0x81	; 129
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	88 7f       	andi	r24, 0xF8	; 248
 126:	80 83       	st	Z, r24
 128:	08 95       	ret

0000012a <stepperControl>:
	if(((PINB & 0b00001100) >> 2) != d){ //if current direction doesn't match new direction
		PORTB &= 0b11110000; //apply Vcc Brake
		PORTB |= ((~d & 0b11) << 2); //start motor in specified direction
	}
	dutyCycle = s*2.55;
	OCR0A = dutyCycle;//set duty cycle
 12a:	2f 92       	push	r2
 12c:	3f 92       	push	r3
 12e:	4f 92       	push	r4
 130:	5f 92       	push	r5
 132:	6f 92       	push	r6
 134:	7f 92       	push	r7
 136:	8f 92       	push	r8
 138:	9f 92       	push	r9
 13a:	af 92       	push	r10
 13c:	bf 92       	push	r11
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	00 d0       	rcall	.+0      	; 0x150 <stepperControl+0x26>
 150:	00 d0       	rcall	.+0      	; 0x152 <stepperControl+0x28>
 152:	00 d0       	rcall	.+0      	; 0x154 <stepperControl+0x2a>
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	6c 01       	movw	r12, r24
 15a:	7a 83       	std	Y+2, r23	; 0x02
 15c:	69 83       	std	Y+1, r22	; 0x01
 15e:	5c 83       	std	Y+4, r21	; 0x04
 160:	4b 83       	std	Y+3, r20	; 0x03
 162:	9e 83       	std	Y+6, r25	; 0x06
 164:	8d 83       	std	Y+5, r24	; 0x05
 166:	99 23       	and	r25, r25
 168:	34 f4       	brge	.+12     	; 0x176 <stepperControl+0x4c>
 16a:	22 27       	eor	r18, r18
 16c:	33 27       	eor	r19, r19
 16e:	28 1b       	sub	r18, r24
 170:	39 0b       	sbc	r19, r25
 172:	3e 83       	std	Y+6, r19	; 0x06
 174:	2d 83       	std	Y+5, r18	; 0x05
 176:	4d 80       	ldd	r4, Y+5	; 0x05
 178:	5e 80       	ldd	r5, Y+6	; 0x06
 17a:	eb 81       	ldd	r30, Y+3	; 0x03
 17c:	fc 81       	ldd	r31, Y+4	; 0x04
 17e:	80 81       	ld	r24, Z
 180:	91 81       	ldd	r25, Z+1	; 0x01
 182:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 186:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 18a:	82 17       	cp	r24, r18
 18c:	93 07       	cpc	r25, r19
 18e:	b9 f0       	breq	.+46     	; 0x1be <stepperControl+0x94>
 190:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__data_start+0x2>
 194:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__data_start+0x3>
 198:	82 17       	cp	r24, r18
 19a:	93 07       	cpc	r25, r19
 19c:	91 f0       	breq	.+36     	; 0x1c2 <stepperControl+0x98>
 19e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_start+0x4>
 1a2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_start+0x5>
 1a6:	82 17       	cp	r24, r18
 1a8:	93 07       	cpc	r25, r19
 1aa:	69 f0       	breq	.+26     	; 0x1c6 <stepperControl+0x9c>
 1ac:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_start+0x6>
 1b0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_start+0x7>
 1b4:	82 17       	cp	r24, r18
 1b6:	93 07       	cpc	r25, r19
 1b8:	41 f4       	brne	.+16     	; 0x1ca <stepperControl+0xa0>
 1ba:	83 e0       	ldi	r24, 0x03	; 3
 1bc:	07 c0       	rjmp	.+14     	; 0x1cc <stepperControl+0xa2>
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	05 c0       	rjmp	.+10     	; 0x1cc <stepperControl+0xa2>
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	03 c0       	rjmp	.+6      	; 0x1cc <stepperControl+0xa2>
 1c6:	82 e0       	ldi	r24, 0x02	; 2
 1c8:	01 c0       	rjmp	.+2      	; 0x1cc <stepperControl+0xa2>
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	2d 81       	ldd	r18, Y+5	; 0x05
 1ce:	3e 81       	ldd	r19, Y+6	; 0x06
 1d0:	24 31       	cpi	r18, 0x14	; 20
 1d2:	31 05       	cpc	r19, r1
 1d4:	38 f4       	brcc	.+14     	; 0x1e4 <stepperControl+0xba>
 1d6:	36 95       	lsr	r19
 1d8:	27 95       	ror	r18
 1da:	92 2f       	mov	r25, r18
 1dc:	34 e1       	ldi	r19, 0x14	; 20
 1de:	23 2e       	mov	r2, r19
 1e0:	22 1a       	sub	r2, r18
 1e2:	05 c0       	rjmp	.+10     	; 0x1ee <stepperControl+0xc4>
 1e4:	9a e0       	ldi	r25, 0x0A	; 10
 1e6:	0f 2e       	mov	r0, r31
 1e8:	fa e0       	ldi	r31, 0x0A	; 10
 1ea:	2f 2e       	mov	r2, r31
 1ec:	f0 2d       	mov	r31, r0
 1ee:	1c 14       	cp	r1, r12
 1f0:	1d 04       	cpc	r1, r13
 1f2:	24 f0       	brlt	.+8      	; 0x1fc <stepperControl+0xd2>
 1f4:	0d 2d       	mov	r16, r13
 1f6:	00 0f       	add	r16, r16
 1f8:	00 0b       	sbc	r16, r16
 1fa:	01 c0       	rjmp	.+2      	; 0x1fe <stepperControl+0xd4>
 1fc:	01 e0       	ldi	r16, 0x01	; 1
 1fe:	a0 2e       	mov	r10, r16
 200:	b1 2c       	mov	r11, r1
 202:	35 01       	movw	r6, r10
 204:	68 0e       	add	r6, r24
 206:	71 1c       	adc	r7, r1
 208:	ed 81       	ldd	r30, Y+5	; 0x05
 20a:	fe 81       	ldd	r31, Y+6	; 0x06
 20c:	ef 2b       	or	r30, r31
 20e:	c9 f1       	breq	.+114    	; 0x282 <stepperControl+0x158>
 210:	85 01       	movw	r16, r10
 212:	43 01       	movw	r8, r6
 214:	0f 2e       	mov	r0, r31
 216:	f4 e1       	ldi	r31, 0x14	; 20
 218:	3f 2e       	mov	r3, r31
 21a:	f0 2d       	mov	r31, r0
 21c:	e9 2e       	mov	r14, r25
 21e:	f1 2c       	mov	r15, r1
 220:	2d 81       	ldd	r18, Y+5	; 0x05
 222:	3e 81       	ldd	r19, Y+6	; 0x06
 224:	e2 16       	cp	r14, r18
 226:	f3 06       	cpc	r15, r19
 228:	20 f4       	brcc	.+8      	; 0x232 <stepperControl+0x108>
 22a:	23 14       	cp	r2, r3
 22c:	38 f4       	brcc	.+14     	; 0x23c <stepperControl+0x112>
 22e:	3a 94       	dec	r3
 230:	0b c0       	rjmp	.+22     	; 0x248 <stepperControl+0x11e>
 232:	33 e1       	ldi	r19, 0x13	; 19
 234:	33 15       	cp	r19, r3
 236:	20 f0       	brcs	.+8      	; 0x240 <stepperControl+0x116>
 238:	33 94       	inc	r3
 23a:	06 c0       	rjmp	.+12     	; 0x248 <stepperControl+0x11e>
 23c:	32 2c       	mov	r3, r2
 23e:	04 c0       	rjmp	.+8      	; 0x248 <stepperControl+0x11e>
 240:	0f 2e       	mov	r0, r31
 242:	f4 e1       	ldi	r31, 0x14	; 20
 244:	3f 2e       	mov	r3, r31
 246:	f0 2d       	mov	r31, r0
 248:	c4 01       	movw	r24, r8
 24a:	83 70       	andi	r24, 0x03	; 3
 24c:	90 78       	andi	r25, 0x80	; 128
 24e:	99 23       	and	r25, r25
 250:	24 f4       	brge	.+8      	; 0x25a <stepperControl+0x130>
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	8c 6f       	ori	r24, 0xFC	; 252
 256:	9f 6f       	ori	r25, 0xFF	; 255
 258:	01 96       	adiw	r24, 0x01	; 1
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	fc 01       	movw	r30, r24
 260:	e0 50       	subi	r30, 0x00	; 0
 262:	ff 4f       	sbci	r31, 0xFF	; 255
 264:	80 81       	ld	r24, Z
 266:	82 b9       	out	0x02, r24	; 2
 268:	83 2d       	mov	r24, r3
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	43 df       	rcall	.-378    	; 0xf4 <mTimer>
 26e:	8d 81       	ldd	r24, Y+5	; 0x05
 270:	9e 81       	ldd	r25, Y+6	; 0x06
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	9e 83       	std	Y+6, r25	; 0x06
 276:	8d 83       	std	Y+5, r24	; 0x05
 278:	80 0e       	add	r8, r16
 27a:	91 1e       	adc	r9, r17
 27c:	89 2b       	or	r24, r25
 27e:	81 f6       	brne	.-96     	; 0x220 <stepperControl+0xf6>
 280:	02 c0       	rjmp	.+4      	; 0x286 <stepperControl+0x15c>
 282:	41 2c       	mov	r4, r1
 284:	51 2c       	mov	r5, r1
 286:	92 01       	movw	r18, r4
 288:	21 50       	subi	r18, 0x01	; 1
 28a:	31 09       	sbc	r19, r1
 28c:	2a 9d       	mul	r18, r10
 28e:	c0 01       	movw	r24, r0
 290:	2b 9d       	mul	r18, r11
 292:	90 0d       	add	r25, r0
 294:	3a 9d       	mul	r19, r10
 296:	90 0d       	add	r25, r0
 298:	11 24       	eor	r1, r1
 29a:	86 0d       	add	r24, r6
 29c:	97 1d       	adc	r25, r7
 29e:	83 70       	andi	r24, 0x03	; 3
 2a0:	90 78       	andi	r25, 0x80	; 128
 2a2:	99 23       	and	r25, r25
 2a4:	24 f4       	brge	.+8      	; 0x2ae <stepperControl+0x184>
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	8c 6f       	ori	r24, 0xFC	; 252
 2aa:	9f 6f       	ori	r25, 0xFF	; 255
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	fc 01       	movw	r30, r24
 2b4:	e0 50       	subi	r30, 0x00	; 0
 2b6:	ff 4f       	sbci	r31, 0xFF	; 255
 2b8:	80 81       	ld	r24, Z
 2ba:	91 81       	ldd	r25, Z+1	; 0x01
 2bc:	eb 81       	ldd	r30, Y+3	; 0x03
 2be:	fc 81       	ldd	r31, Y+4	; 0x04
 2c0:	91 83       	std	Z+1, r25	; 0x01
 2c2:	80 83       	st	Z, r24
 2c4:	e9 81       	ldd	r30, Y+1	; 0x01
 2c6:	fa 81       	ldd	r31, Y+2	; 0x02
 2c8:	80 81       	ld	r24, Z
 2ca:	91 81       	ldd	r25, Z+1	; 0x01
 2cc:	8c 0d       	add	r24, r12
 2ce:	9d 1d       	adc	r25, r13
 2d0:	68 ec       	ldi	r22, 0xC8	; 200
 2d2:	70 e0       	ldi	r23, 0x00	; 0
 2d4:	49 d2       	rcall	.+1170   	; 0x768 <__divmodhi4>
 2d6:	91 83       	std	Z+1, r25	; 0x01
 2d8:	80 83       	st	Z, r24
 2da:	26 96       	adiw	r28, 0x06	; 6
 2dc:	0f b6       	in	r0, 0x3f	; 63
 2de:	f8 94       	cli
 2e0:	de bf       	out	0x3e, r29	; 62
 2e2:	0f be       	out	0x3f, r0	; 63
 2e4:	cd bf       	out	0x3d, r28	; 61
 2e6:	df 91       	pop	r29
 2e8:	cf 91       	pop	r28
 2ea:	1f 91       	pop	r17
 2ec:	0f 91       	pop	r16
 2ee:	ff 90       	pop	r15
 2f0:	ef 90       	pop	r14
 2f2:	df 90       	pop	r13
 2f4:	cf 90       	pop	r12
 2f6:	bf 90       	pop	r11
 2f8:	af 90       	pop	r10
 2fa:	9f 90       	pop	r9
 2fc:	8f 90       	pop	r8
 2fe:	7f 90       	pop	r7
 300:	6f 90       	pop	r6
 302:	5f 90       	pop	r5
 304:	4f 90       	pop	r4
 306:	3f 90       	pop	r3
 308:	2f 90       	pop	r2
 30a:	08 95       	ret

0000030c <stepperHome>:
 30c:	ef 92       	push	r14
 30e:	ff 92       	push	r15
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	8c 01       	movw	r16, r24
 31a:	eb 01       	movw	r28, r22
 31c:	12 b8       	out	0x02, r1	; 2
 31e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <HallEffect>
 322:	81 11       	cpse	r24, r1
 324:	1d c0       	rjmp	.+58     	; 0x360 <stepperHome+0x54>
 326:	e1 2c       	mov	r14, r1
 328:	f1 2c       	mov	r15, r1
 32a:	c7 01       	movw	r24, r14
 32c:	83 70       	andi	r24, 0x03	; 3
 32e:	90 78       	andi	r25, 0x80	; 128
 330:	99 23       	and	r25, r25
 332:	24 f4       	brge	.+8      	; 0x33c <stepperHome+0x30>
 334:	01 97       	sbiw	r24, 0x01	; 1
 336:	8c 6f       	ori	r24, 0xFC	; 252
 338:	9f 6f       	ori	r25, 0xFF	; 255
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	fc 01       	movw	r30, r24
 342:	e0 50       	subi	r30, 0x00	; 0
 344:	ff 4f       	sbci	r31, 0xFF	; 255
 346:	80 81       	ld	r24, Z
 348:	82 b9       	out	0x02, r24	; 2
 34a:	8e e1       	ldi	r24, 0x1E	; 30
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	d2 de       	rcall	.-604    	; 0xf4 <mTimer>
 350:	8f ef       	ldi	r24, 0xFF	; 255
 352:	e8 1a       	sub	r14, r24
 354:	f8 0a       	sbc	r15, r24
 356:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <HallEffect>
 35a:	88 23       	and	r24, r24
 35c:	31 f3       	breq	.-52     	; 0x32a <stepperHome+0x1e>
 35e:	02 c0       	rjmp	.+4      	; 0x364 <stepperHome+0x58>
 360:	e1 2c       	mov	r14, r1
 362:	f1 2c       	mov	r15, r1
 364:	f8 01       	movw	r30, r16
 366:	11 82       	std	Z+1, r1	; 0x01
 368:	10 82       	st	Z, r1
 36a:	f1 e0       	ldi	r31, 0x01	; 1
 36c:	ef 1a       	sub	r14, r31
 36e:	f1 08       	sbc	r15, r1
 370:	83 e0       	ldi	r24, 0x03	; 3
 372:	e8 22       	and	r14, r24
 374:	80 e8       	ldi	r24, 0x80	; 128
 376:	f8 22       	and	r15, r24
 378:	ff 20       	and	r15, r15
 37a:	54 f4       	brge	.+20     	; 0x390 <stepperHome+0x84>
 37c:	e1 e0       	ldi	r30, 0x01	; 1
 37e:	ee 1a       	sub	r14, r30
 380:	f1 08       	sbc	r15, r1
 382:	fc ef       	ldi	r31, 0xFC	; 252
 384:	ef 2a       	or	r14, r31
 386:	ff 24       	eor	r15, r15
 388:	fa 94       	dec	r15
 38a:	8f ef       	ldi	r24, 0xFF	; 255
 38c:	e8 1a       	sub	r14, r24
 38e:	f8 0a       	sbc	r15, r24
 390:	f7 01       	movw	r30, r14
 392:	ee 0f       	add	r30, r30
 394:	ff 1f       	adc	r31, r31
 396:	e0 50       	subi	r30, 0x00	; 0
 398:	ff 4f       	sbci	r31, 0xFF	; 255
 39a:	80 81       	ld	r24, Z
 39c:	91 81       	ldd	r25, Z+1	; 0x01
 39e:	99 83       	std	Y+1, r25	; 0x01
 3a0:	88 83       	st	Y, r24
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	1f 91       	pop	r17
 3a8:	0f 91       	pop	r16
 3aa:	ff 90       	pop	r15
 3ac:	ef 90       	pop	r14
 3ae:	08 95       	ret

000003b0 <setupPWM>:
 3b0:	bc 01       	movw	r22, r24
 3b2:	84 b5       	in	r24, 0x24	; 36
 3b4:	83 68       	ori	r24, 0x83	; 131
 3b6:	84 bd       	out	0x24, r24	; 36
 3b8:	85 b5       	in	r24, 0x25	; 37
 3ba:	83 60       	ori	r24, 0x03	; 3
 3bc:	85 bd       	out	0x25, r24	; 37
 3be:	07 2e       	mov	r0, r23
 3c0:	00 0c       	add	r0, r0
 3c2:	88 0b       	sbc	r24, r24
 3c4:	99 0b       	sbc	r25, r25
 3c6:	e1 d0       	rcall	.+450    	; 0x58a <__floatsisf>
 3c8:	23 e3       	ldi	r18, 0x33	; 51
 3ca:	33 e3       	ldi	r19, 0x33	; 51
 3cc:	43 e2       	ldi	r20, 0x23	; 35
 3ce:	50 e4       	ldi	r21, 0x40	; 64
 3d0:	40 d1       	rcall	.+640    	; 0x652 <__mulsf3>
 3d2:	ad d0       	rcall	.+346    	; 0x52e <__fixunssfsi>
 3d4:	67 bd       	out	0x27, r22	; 39
 3d6:	85 b1       	in	r24, 0x05	; 5
 3d8:	80 7f       	andi	r24, 0xF0	; 240
 3da:	85 b9       	out	0x05, r24	; 5
 3dc:	08 95       	ret

000003de <setupISR>:
 3de:	8d b3       	in	r24, 0x1d	; 29
 3e0:	85 64       	ori	r24, 0x45	; 69
 3e2:	8d bb       	out	0x1d, r24	; 29
 3e4:	e9 e6       	ldi	r30, 0x69	; 105
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	83 63       	ori	r24, 0x33	; 51
 3ec:	80 83       	st	Z, r24
 3ee:	ea e6       	ldi	r30, 0x6A	; 106
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	80 62       	ori	r24, 0x20	; 32
 3f6:	80 83       	st	Z, r24
 3f8:	08 95       	ret

000003fa <setupADC>:
 3fa:	ea e7       	ldi	r30, 0x7A	; 122
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	8d 68       	ori	r24, 0x8D	; 141
 402:	80 83       	st	Z, r24
 404:	ec e7       	ldi	r30, 0x7C	; 124
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	80 81       	ld	r24, Z
 40a:	81 66       	ori	r24, 0x61	; 97
 40c:	80 83       	st	Z, r24
 40e:	80 81       	ld	r24, Z
 410:	81 7e       	andi	r24, 0xE1	; 225
 412:	80 83       	st	Z, r24
 414:	08 95       	ret

00000416 <main>:
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	00 d0       	rcall	.+0      	; 0x41c <main+0x6>
 41c:	00 d0       	rcall	.+0      	; 0x41e <main+0x8>
 41e:	cd b7       	in	r28, 0x3d	; 61
 420:	de b7       	in	r29, 0x3e	; 62
 422:	1a 82       	std	Y+2, r1	; 0x02
 424:	19 82       	std	Y+1, r1	; 0x01
 426:	8d e0       	ldi	r24, 0x0D	; 13
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	9c 83       	std	Y+4, r25	; 0x04
 42c:	8b 83       	std	Y+3, r24	; 0x03
 42e:	f8 94       	cli
 430:	e1 e6       	ldi	r30, 0x61	; 97
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	80 e8       	ldi	r24, 0x80	; 128
 436:	80 83       	st	Z, r24
 438:	10 82       	st	Z, r1
 43a:	8e e1       	ldi	r24, 0x1E	; 30
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	b8 df       	rcall	.-144    	; 0x3b0 <setupPWM>
 440:	ce df       	rcall	.-100    	; 0x3de <setupISR>
 442:	db df       	rcall	.-74     	; 0x3fa <setupADC>
 444:	47 de       	rcall	.-882    	; 0xd4 <initTimer1>
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	81 b9       	out	0x01, r24	; 1
 44a:	84 b9       	out	0x04, r24	; 4
 44c:	87 b9       	out	0x07, r24	; 7
 44e:	80 ef       	ldi	r24, 0xF0	; 240
 450:	8a b9       	out	0x0a, r24	; 10
 452:	1d b8       	out	0x0d, r1	; 13
 454:	10 ba       	out	0x10, r1	; 16
 456:	78 94       	sei
 458:	e1 e8       	ldi	r30, 0x81	; 129
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	80 81       	ld	r24, Z
 45e:	81 60       	ori	r24, 0x01	; 1
 460:	80 83       	st	Z, r24
 462:	ea e7       	ldi	r30, 0x7A	; 122
 464:	f0 e0       	ldi	r31, 0x00	; 0
 466:	80 81       	ld	r24, Z
 468:	80 64       	ori	r24, 0x40	; 64
 46a:	80 83       	st	Z, r24
 46c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 470:	be 01       	movw	r22, r28
 472:	6d 5f       	subi	r22, 0xFD	; 253
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	ce 01       	movw	r24, r28
 478:	01 96       	adiw	r24, 0x01	; 1
 47a:	48 df       	rcall	.-368    	; 0x30c <stepperHome>
 47c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 480:	ae 01       	movw	r20, r28
 482:	4d 5f       	subi	r20, 0xFD	; 253
 484:	5f 4f       	sbci	r21, 0xFF	; 255
 486:	be 01       	movw	r22, r28
 488:	6f 5f       	subi	r22, 0xFF	; 255
 48a:	7f 4f       	sbci	r23, 0xFF	; 255
 48c:	82 e3       	ldi	r24, 0x32	; 50
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	4c de       	rcall	.-872    	; 0x12a <stepperControl>
 492:	88 ee       	ldi	r24, 0xE8	; 232
 494:	93 e0       	ldi	r25, 0x03	; 3
 496:	2e de       	rcall	.-932    	; 0xf4 <mTimer>
 498:	f3 cf       	rjmp	.-26     	; 0x480 <main+0x6a>

0000049a <__vector_1>:
}

/**********INTERRUPT SERVICE ROUTINES**********/
/*Button interrupt for emergency: shut-off dc motor, disable stepper, shut off, ensure nothing can be turned on*/

ISR(INT0_vect){ // on PD0; KILL SWITCH
 49a:	1f 92       	push	r1
 49c:	0f 92       	push	r0
 49e:	0f b6       	in	r0, 0x3f	; 63
 4a0:	0f 92       	push	r0
 4a2:	11 24       	eor	r1, r1
 4a4:	8f 93       	push	r24
	PORTB &= 0b11110011; //stop motor
 4a6:	85 b1       	in	r24, 0x05	; 5
 4a8:	83 7f       	andi	r24, 0xF3	; 243
 4aa:	85 b9       	out	0x05, r24	; 5
	
}
 4ac:	8f 91       	pop	r24
 4ae:	0f 90       	pop	r0
 4b0:	0f be       	out	0x3f, r0	; 63
 4b2:	0f 90       	pop	r0
 4b4:	1f 90       	pop	r1
 4b6:	18 95       	reti

000004b8 <__vector_3>:

/*sensor 3: 2nt Optical Inductive, Active HIGH starts AD conversion*/
ISR(INT2_vect){
 4b8:	1f 92       	push	r1
 4ba:	0f 92       	push	r0
 4bc:	0f b6       	in	r0, 0x3f	; 63
 4be:	0f 92       	push	r0
 4c0:	11 24       	eor	r1, r1
 4c2:	0b b6       	in	r0, 0x3b	; 59
 4c4:	0f 92       	push	r0
 4c6:	8f 93       	push	r24
 4c8:	ef 93       	push	r30
 4ca:	ff 93       	push	r31
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	ADCSRA |= _BV(ADSC);
 4cc:	ea e7       	ldi	r30, 0x7A	; 122
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
 4d2:	80 64       	ori	r24, 0x40	; 64
 4d4:	80 83       	st	Z, r24
}
 4d6:	ff 91       	pop	r31
 4d8:	ef 91       	pop	r30
 4da:	8f 91       	pop	r24
 4dc:	0f 90       	pop	r0
 4de:	0b be       	out	0x3b, r0	; 59
 4e0:	0f 90       	pop	r0
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	0f 90       	pop	r0
 4e6:	1f 90       	pop	r1
 4e8:	18 95       	reti

000004ea <__vector_7>:

ISR(INT6_vect){ //Active low for hall effect sensor on PE6
 4ea:	1f 92       	push	r1
 4ec:	0f 92       	push	r0
 4ee:	0f b6       	in	r0, 0x3f	; 63
 4f0:	0f 92       	push	r0
 4f2:	11 24       	eor	r1, r1
 4f4:	8f 93       	push	r24
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	HallEffect=0x01;
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <HallEffect>
}
 4fc:	8f 91       	pop	r24
 4fe:	0f 90       	pop	r0
 500:	0f be       	out	0x3f, r0	; 63
 502:	0f 90       	pop	r0
 504:	1f 90       	pop	r1
 506:	18 95       	reti

00000508 <__vector_29>:

/*ADC ISR: triggered when ADC is completed*/
ISR(ADC_vect){
 508:	1f 92       	push	r1
 50a:	0f 92       	push	r0
 50c:	0f b6       	in	r0, 0x3f	; 63
 50e:	0f 92       	push	r0
 510:	11 24       	eor	r1, r1
 512:	8f 93       	push	r24
	/*ADLAR not set=0*/
	//ADCResult = ADCL;
	//ADCResult += ADCH << 8;
	/*ADLAR set=1; reduced resolution (lose two least significant bits), but more efficient*/
	ADCResult = ADCH;
 514:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 518:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <ADCResult>
	ADCResultFlag = 1;
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
}
 522:	8f 91       	pop	r24
 524:	0f 90       	pop	r0
 526:	0f be       	out	0x3f, r0	; 63
 528:	0f 90       	pop	r0
 52a:	1f 90       	pop	r1
 52c:	18 95       	reti

0000052e <__fixunssfsi>:
 52e:	70 d0       	rcall	.+224    	; 0x610 <__fp_splitA>
 530:	88 f0       	brcs	.+34     	; 0x554 <__fixunssfsi+0x26>
 532:	9f 57       	subi	r25, 0x7F	; 127
 534:	90 f0       	brcs	.+36     	; 0x55a <__fixunssfsi+0x2c>
 536:	b9 2f       	mov	r27, r25
 538:	99 27       	eor	r25, r25
 53a:	b7 51       	subi	r27, 0x17	; 23
 53c:	a0 f0       	brcs	.+40     	; 0x566 <__fixunssfsi+0x38>
 53e:	d1 f0       	breq	.+52     	; 0x574 <__fixunssfsi+0x46>
 540:	66 0f       	add	r22, r22
 542:	77 1f       	adc	r23, r23
 544:	88 1f       	adc	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	1a f0       	brmi	.+6      	; 0x550 <__fixunssfsi+0x22>
 54a:	ba 95       	dec	r27
 54c:	c9 f7       	brne	.-14     	; 0x540 <__fixunssfsi+0x12>
 54e:	12 c0       	rjmp	.+36     	; 0x574 <__fixunssfsi+0x46>
 550:	b1 30       	cpi	r27, 0x01	; 1
 552:	81 f0       	breq	.+32     	; 0x574 <__fixunssfsi+0x46>
 554:	77 d0       	rcall	.+238    	; 0x644 <__fp_zero>
 556:	b1 e0       	ldi	r27, 0x01	; 1
 558:	08 95       	ret
 55a:	74 c0       	rjmp	.+232    	; 0x644 <__fp_zero>
 55c:	67 2f       	mov	r22, r23
 55e:	78 2f       	mov	r23, r24
 560:	88 27       	eor	r24, r24
 562:	b8 5f       	subi	r27, 0xF8	; 248
 564:	39 f0       	breq	.+14     	; 0x574 <__fixunssfsi+0x46>
 566:	b9 3f       	cpi	r27, 0xF9	; 249
 568:	cc f3       	brlt	.-14     	; 0x55c <__fixunssfsi+0x2e>
 56a:	86 95       	lsr	r24
 56c:	77 95       	ror	r23
 56e:	67 95       	ror	r22
 570:	b3 95       	inc	r27
 572:	d9 f7       	brne	.-10     	; 0x56a <__fixunssfsi+0x3c>
 574:	3e f4       	brtc	.+14     	; 0x584 <__fixunssfsi+0x56>
 576:	90 95       	com	r25
 578:	80 95       	com	r24
 57a:	70 95       	com	r23
 57c:	61 95       	neg	r22
 57e:	7f 4f       	sbci	r23, 0xFF	; 255
 580:	8f 4f       	sbci	r24, 0xFF	; 255
 582:	9f 4f       	sbci	r25, 0xFF	; 255
 584:	08 95       	ret

00000586 <__floatunsisf>:
 586:	e8 94       	clt
 588:	09 c0       	rjmp	.+18     	; 0x59c <__floatsisf+0x12>

0000058a <__floatsisf>:
 58a:	97 fb       	bst	r25, 7
 58c:	3e f4       	brtc	.+14     	; 0x59c <__floatsisf+0x12>
 58e:	90 95       	com	r25
 590:	80 95       	com	r24
 592:	70 95       	com	r23
 594:	61 95       	neg	r22
 596:	7f 4f       	sbci	r23, 0xFF	; 255
 598:	8f 4f       	sbci	r24, 0xFF	; 255
 59a:	9f 4f       	sbci	r25, 0xFF	; 255
 59c:	99 23       	and	r25, r25
 59e:	a9 f0       	breq	.+42     	; 0x5ca <__floatsisf+0x40>
 5a0:	f9 2f       	mov	r31, r25
 5a2:	96 e9       	ldi	r25, 0x96	; 150
 5a4:	bb 27       	eor	r27, r27
 5a6:	93 95       	inc	r25
 5a8:	f6 95       	lsr	r31
 5aa:	87 95       	ror	r24
 5ac:	77 95       	ror	r23
 5ae:	67 95       	ror	r22
 5b0:	b7 95       	ror	r27
 5b2:	f1 11       	cpse	r31, r1
 5b4:	f8 cf       	rjmp	.-16     	; 0x5a6 <__floatsisf+0x1c>
 5b6:	fa f4       	brpl	.+62     	; 0x5f6 <__floatsisf+0x6c>
 5b8:	bb 0f       	add	r27, r27
 5ba:	11 f4       	brne	.+4      	; 0x5c0 <__floatsisf+0x36>
 5bc:	60 ff       	sbrs	r22, 0
 5be:	1b c0       	rjmp	.+54     	; 0x5f6 <__floatsisf+0x6c>
 5c0:	6f 5f       	subi	r22, 0xFF	; 255
 5c2:	7f 4f       	sbci	r23, 0xFF	; 255
 5c4:	8f 4f       	sbci	r24, 0xFF	; 255
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	16 c0       	rjmp	.+44     	; 0x5f6 <__floatsisf+0x6c>
 5ca:	88 23       	and	r24, r24
 5cc:	11 f0       	breq	.+4      	; 0x5d2 <__floatsisf+0x48>
 5ce:	96 e9       	ldi	r25, 0x96	; 150
 5d0:	11 c0       	rjmp	.+34     	; 0x5f4 <__floatsisf+0x6a>
 5d2:	77 23       	and	r23, r23
 5d4:	21 f0       	breq	.+8      	; 0x5de <__floatsisf+0x54>
 5d6:	9e e8       	ldi	r25, 0x8E	; 142
 5d8:	87 2f       	mov	r24, r23
 5da:	76 2f       	mov	r23, r22
 5dc:	05 c0       	rjmp	.+10     	; 0x5e8 <__floatsisf+0x5e>
 5de:	66 23       	and	r22, r22
 5e0:	71 f0       	breq	.+28     	; 0x5fe <__floatsisf+0x74>
 5e2:	96 e8       	ldi	r25, 0x86	; 134
 5e4:	86 2f       	mov	r24, r22
 5e6:	70 e0       	ldi	r23, 0x00	; 0
 5e8:	60 e0       	ldi	r22, 0x00	; 0
 5ea:	2a f0       	brmi	.+10     	; 0x5f6 <__floatsisf+0x6c>
 5ec:	9a 95       	dec	r25
 5ee:	66 0f       	add	r22, r22
 5f0:	77 1f       	adc	r23, r23
 5f2:	88 1f       	adc	r24, r24
 5f4:	da f7       	brpl	.-10     	; 0x5ec <__floatsisf+0x62>
 5f6:	88 0f       	add	r24, r24
 5f8:	96 95       	lsr	r25
 5fa:	87 95       	ror	r24
 5fc:	97 f9       	bld	r25, 7
 5fe:	08 95       	ret

00000600 <__fp_split3>:
 600:	57 fd       	sbrc	r21, 7
 602:	90 58       	subi	r25, 0x80	; 128
 604:	44 0f       	add	r20, r20
 606:	55 1f       	adc	r21, r21
 608:	59 f0       	breq	.+22     	; 0x620 <__fp_splitA+0x10>
 60a:	5f 3f       	cpi	r21, 0xFF	; 255
 60c:	71 f0       	breq	.+28     	; 0x62a <__fp_splitA+0x1a>
 60e:	47 95       	ror	r20

00000610 <__fp_splitA>:
 610:	88 0f       	add	r24, r24
 612:	97 fb       	bst	r25, 7
 614:	99 1f       	adc	r25, r25
 616:	61 f0       	breq	.+24     	; 0x630 <__fp_splitA+0x20>
 618:	9f 3f       	cpi	r25, 0xFF	; 255
 61a:	79 f0       	breq	.+30     	; 0x63a <__fp_splitA+0x2a>
 61c:	87 95       	ror	r24
 61e:	08 95       	ret
 620:	12 16       	cp	r1, r18
 622:	13 06       	cpc	r1, r19
 624:	14 06       	cpc	r1, r20
 626:	55 1f       	adc	r21, r21
 628:	f2 cf       	rjmp	.-28     	; 0x60e <__fp_split3+0xe>
 62a:	46 95       	lsr	r20
 62c:	f1 df       	rcall	.-30     	; 0x610 <__fp_splitA>
 62e:	08 c0       	rjmp	.+16     	; 0x640 <__fp_splitA+0x30>
 630:	16 16       	cp	r1, r22
 632:	17 06       	cpc	r1, r23
 634:	18 06       	cpc	r1, r24
 636:	99 1f       	adc	r25, r25
 638:	f1 cf       	rjmp	.-30     	; 0x61c <__fp_splitA+0xc>
 63a:	86 95       	lsr	r24
 63c:	71 05       	cpc	r23, r1
 63e:	61 05       	cpc	r22, r1
 640:	08 94       	sec
 642:	08 95       	ret

00000644 <__fp_zero>:
 644:	e8 94       	clt

00000646 <__fp_szero>:
 646:	bb 27       	eor	r27, r27
 648:	66 27       	eor	r22, r22
 64a:	77 27       	eor	r23, r23
 64c:	cb 01       	movw	r24, r22
 64e:	97 f9       	bld	r25, 7
 650:	08 95       	ret

00000652 <__mulsf3>:
 652:	0b d0       	rcall	.+22     	; 0x66a <__mulsf3x>
 654:	78 c0       	rjmp	.+240    	; 0x746 <__fp_round>
 656:	69 d0       	rcall	.+210    	; 0x72a <__fp_pscA>
 658:	28 f0       	brcs	.+10     	; 0x664 <__mulsf3+0x12>
 65a:	6e d0       	rcall	.+220    	; 0x738 <__fp_pscB>
 65c:	18 f0       	brcs	.+6      	; 0x664 <__mulsf3+0x12>
 65e:	95 23       	and	r25, r21
 660:	09 f0       	breq	.+2      	; 0x664 <__mulsf3+0x12>
 662:	5a c0       	rjmp	.+180    	; 0x718 <__fp_inf>
 664:	5f c0       	rjmp	.+190    	; 0x724 <__fp_nan>
 666:	11 24       	eor	r1, r1
 668:	ee cf       	rjmp	.-36     	; 0x646 <__fp_szero>

0000066a <__mulsf3x>:
 66a:	ca df       	rcall	.-108    	; 0x600 <__fp_split3>
 66c:	a0 f3       	brcs	.-24     	; 0x656 <__mulsf3+0x4>

0000066e <__mulsf3_pse>:
 66e:	95 9f       	mul	r25, r21
 670:	d1 f3       	breq	.-12     	; 0x666 <__mulsf3+0x14>
 672:	95 0f       	add	r25, r21
 674:	50 e0       	ldi	r21, 0x00	; 0
 676:	55 1f       	adc	r21, r21
 678:	62 9f       	mul	r22, r18
 67a:	f0 01       	movw	r30, r0
 67c:	72 9f       	mul	r23, r18
 67e:	bb 27       	eor	r27, r27
 680:	f0 0d       	add	r31, r0
 682:	b1 1d       	adc	r27, r1
 684:	63 9f       	mul	r22, r19
 686:	aa 27       	eor	r26, r26
 688:	f0 0d       	add	r31, r0
 68a:	b1 1d       	adc	r27, r1
 68c:	aa 1f       	adc	r26, r26
 68e:	64 9f       	mul	r22, r20
 690:	66 27       	eor	r22, r22
 692:	b0 0d       	add	r27, r0
 694:	a1 1d       	adc	r26, r1
 696:	66 1f       	adc	r22, r22
 698:	82 9f       	mul	r24, r18
 69a:	22 27       	eor	r18, r18
 69c:	b0 0d       	add	r27, r0
 69e:	a1 1d       	adc	r26, r1
 6a0:	62 1f       	adc	r22, r18
 6a2:	73 9f       	mul	r23, r19
 6a4:	b0 0d       	add	r27, r0
 6a6:	a1 1d       	adc	r26, r1
 6a8:	62 1f       	adc	r22, r18
 6aa:	83 9f       	mul	r24, r19
 6ac:	a0 0d       	add	r26, r0
 6ae:	61 1d       	adc	r22, r1
 6b0:	22 1f       	adc	r18, r18
 6b2:	74 9f       	mul	r23, r20
 6b4:	33 27       	eor	r19, r19
 6b6:	a0 0d       	add	r26, r0
 6b8:	61 1d       	adc	r22, r1
 6ba:	23 1f       	adc	r18, r19
 6bc:	84 9f       	mul	r24, r20
 6be:	60 0d       	add	r22, r0
 6c0:	21 1d       	adc	r18, r1
 6c2:	82 2f       	mov	r24, r18
 6c4:	76 2f       	mov	r23, r22
 6c6:	6a 2f       	mov	r22, r26
 6c8:	11 24       	eor	r1, r1
 6ca:	9f 57       	subi	r25, 0x7F	; 127
 6cc:	50 40       	sbci	r21, 0x00	; 0
 6ce:	8a f0       	brmi	.+34     	; 0x6f2 <__mulsf3_pse+0x84>
 6d0:	e1 f0       	breq	.+56     	; 0x70a <__mulsf3_pse+0x9c>
 6d2:	88 23       	and	r24, r24
 6d4:	4a f0       	brmi	.+18     	; 0x6e8 <__mulsf3_pse+0x7a>
 6d6:	ee 0f       	add	r30, r30
 6d8:	ff 1f       	adc	r31, r31
 6da:	bb 1f       	adc	r27, r27
 6dc:	66 1f       	adc	r22, r22
 6de:	77 1f       	adc	r23, r23
 6e0:	88 1f       	adc	r24, r24
 6e2:	91 50       	subi	r25, 0x01	; 1
 6e4:	50 40       	sbci	r21, 0x00	; 0
 6e6:	a9 f7       	brne	.-22     	; 0x6d2 <__mulsf3_pse+0x64>
 6e8:	9e 3f       	cpi	r25, 0xFE	; 254
 6ea:	51 05       	cpc	r21, r1
 6ec:	70 f0       	brcs	.+28     	; 0x70a <__mulsf3_pse+0x9c>
 6ee:	14 c0       	rjmp	.+40     	; 0x718 <__fp_inf>
 6f0:	aa cf       	rjmp	.-172    	; 0x646 <__fp_szero>
 6f2:	5f 3f       	cpi	r21, 0xFF	; 255
 6f4:	ec f3       	brlt	.-6      	; 0x6f0 <__mulsf3_pse+0x82>
 6f6:	98 3e       	cpi	r25, 0xE8	; 232
 6f8:	dc f3       	brlt	.-10     	; 0x6f0 <__mulsf3_pse+0x82>
 6fa:	86 95       	lsr	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b7 95       	ror	r27
 702:	f7 95       	ror	r31
 704:	e7 95       	ror	r30
 706:	9f 5f       	subi	r25, 0xFF	; 255
 708:	c1 f7       	brne	.-16     	; 0x6fa <__mulsf3_pse+0x8c>
 70a:	fe 2b       	or	r31, r30
 70c:	88 0f       	add	r24, r24
 70e:	91 1d       	adc	r25, r1
 710:	96 95       	lsr	r25
 712:	87 95       	ror	r24
 714:	97 f9       	bld	r25, 7
 716:	08 95       	ret

00000718 <__fp_inf>:
 718:	97 f9       	bld	r25, 7
 71a:	9f 67       	ori	r25, 0x7F	; 127
 71c:	80 e8       	ldi	r24, 0x80	; 128
 71e:	70 e0       	ldi	r23, 0x00	; 0
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	08 95       	ret

00000724 <__fp_nan>:
 724:	9f ef       	ldi	r25, 0xFF	; 255
 726:	80 ec       	ldi	r24, 0xC0	; 192
 728:	08 95       	ret

0000072a <__fp_pscA>:
 72a:	00 24       	eor	r0, r0
 72c:	0a 94       	dec	r0
 72e:	16 16       	cp	r1, r22
 730:	17 06       	cpc	r1, r23
 732:	18 06       	cpc	r1, r24
 734:	09 06       	cpc	r0, r25
 736:	08 95       	ret

00000738 <__fp_pscB>:
 738:	00 24       	eor	r0, r0
 73a:	0a 94       	dec	r0
 73c:	12 16       	cp	r1, r18
 73e:	13 06       	cpc	r1, r19
 740:	14 06       	cpc	r1, r20
 742:	05 06       	cpc	r0, r21
 744:	08 95       	ret

00000746 <__fp_round>:
 746:	09 2e       	mov	r0, r25
 748:	03 94       	inc	r0
 74a:	00 0c       	add	r0, r0
 74c:	11 f4       	brne	.+4      	; 0x752 <__fp_round+0xc>
 74e:	88 23       	and	r24, r24
 750:	52 f0       	brmi	.+20     	; 0x766 <__fp_round+0x20>
 752:	bb 0f       	add	r27, r27
 754:	40 f4       	brcc	.+16     	; 0x766 <__fp_round+0x20>
 756:	bf 2b       	or	r27, r31
 758:	11 f4       	brne	.+4      	; 0x75e <__fp_round+0x18>
 75a:	60 ff       	sbrs	r22, 0
 75c:	04 c0       	rjmp	.+8      	; 0x766 <__fp_round+0x20>
 75e:	6f 5f       	subi	r22, 0xFF	; 255
 760:	7f 4f       	sbci	r23, 0xFF	; 255
 762:	8f 4f       	sbci	r24, 0xFF	; 255
 764:	9f 4f       	sbci	r25, 0xFF	; 255
 766:	08 95       	ret

00000768 <__divmodhi4>:
 768:	97 fb       	bst	r25, 7
 76a:	07 2e       	mov	r0, r23
 76c:	16 f4       	brtc	.+4      	; 0x772 <__divmodhi4+0xa>
 76e:	00 94       	com	r0
 770:	06 d0       	rcall	.+12     	; 0x77e <__divmodhi4_neg1>
 772:	77 fd       	sbrc	r23, 7
 774:	08 d0       	rcall	.+16     	; 0x786 <__divmodhi4_neg2>
 776:	0b d0       	rcall	.+22     	; 0x78e <__udivmodhi4>
 778:	07 fc       	sbrc	r0, 7
 77a:	05 d0       	rcall	.+10     	; 0x786 <__divmodhi4_neg2>
 77c:	3e f4       	brtc	.+14     	; 0x78c <__divmodhi4_exit>

0000077e <__divmodhi4_neg1>:
 77e:	90 95       	com	r25
 780:	81 95       	neg	r24
 782:	9f 4f       	sbci	r25, 0xFF	; 255
 784:	08 95       	ret

00000786 <__divmodhi4_neg2>:
 786:	70 95       	com	r23
 788:	61 95       	neg	r22
 78a:	7f 4f       	sbci	r23, 0xFF	; 255

0000078c <__divmodhi4_exit>:
 78c:	08 95       	ret

0000078e <__udivmodhi4>:
 78e:	aa 1b       	sub	r26, r26
 790:	bb 1b       	sub	r27, r27
 792:	51 e1       	ldi	r21, 0x11	; 17
 794:	07 c0       	rjmp	.+14     	; 0x7a4 <__udivmodhi4_ep>

00000796 <__udivmodhi4_loop>:
 796:	aa 1f       	adc	r26, r26
 798:	bb 1f       	adc	r27, r27
 79a:	a6 17       	cp	r26, r22
 79c:	b7 07       	cpc	r27, r23
 79e:	10 f0       	brcs	.+4      	; 0x7a4 <__udivmodhi4_ep>
 7a0:	a6 1b       	sub	r26, r22
 7a2:	b7 0b       	sbc	r27, r23

000007a4 <__udivmodhi4_ep>:
 7a4:	88 1f       	adc	r24, r24
 7a6:	99 1f       	adc	r25, r25
 7a8:	5a 95       	dec	r21
 7aa:	a9 f7       	brne	.-22     	; 0x796 <__udivmodhi4_loop>
 7ac:	80 95       	com	r24
 7ae:	90 95       	com	r25
 7b0:	bc 01       	movw	r22, r24
 7b2:	cd 01       	movw	r24, r26
 7b4:	08 95       	ret

000007b6 <_exit>:
 7b6:	f8 94       	cli

000007b8 <__stop_program>:
 7b8:	ff cf       	rjmp	.-2      	; 0x7b8 <__stop_program>
