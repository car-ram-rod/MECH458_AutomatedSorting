
REFLECTIVITY2.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000068e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000061a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800100  00800100  0000068e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000068e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f84  00000000  00000000  00000788  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c8d  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000056f  00000000  00000000  00002399  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002908  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000668  00000000  00000000  00002a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003af  00000000  00000000  000030f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000034a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	59 c0       	rjmp	.+178    	; 0xb8 <__bad_interrupt>
   6:	00 00       	nop
   8:	57 c0       	rjmp	.+174    	; 0xb8 <__bad_interrupt>
   a:	00 00       	nop
   c:	3a c1       	rjmp	.+628    	; 0x282 <__vector_3>
   e:	00 00       	nop
  10:	53 c0       	rjmp	.+166    	; 0xb8 <__bad_interrupt>
  12:	00 00       	nop
  14:	51 c0       	rjmp	.+162    	; 0xb8 <__bad_interrupt>
  16:	00 00       	nop
  18:	4f c0       	rjmp	.+158    	; 0xb8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	ac c1       	rjmp	.+856    	; 0x376 <__vector_7>
  1e:	00 00       	nop
  20:	4b c0       	rjmp	.+150    	; 0xb8 <__bad_interrupt>
  22:	00 00       	nop
  24:	49 c0       	rjmp	.+146    	; 0xb8 <__bad_interrupt>
  26:	00 00       	nop
  28:	47 c0       	rjmp	.+142    	; 0xb8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	45 c0       	rjmp	.+138    	; 0xb8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	43 c0       	rjmp	.+134    	; 0xb8 <__bad_interrupt>
  32:	00 00       	nop
  34:	41 c0       	rjmp	.+130    	; 0xb8 <__bad_interrupt>
  36:	00 00       	nop
  38:	3f c0       	rjmp	.+126    	; 0xb8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3d c0       	rjmp	.+122    	; 0xb8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3b c0       	rjmp	.+118    	; 0xb8 <__bad_interrupt>
  42:	00 00       	nop
  44:	39 c0       	rjmp	.+114    	; 0xb8 <__bad_interrupt>
  46:	00 00       	nop
  48:	37 c0       	rjmp	.+110    	; 0xb8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	35 c0       	rjmp	.+106    	; 0xb8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	33 c0       	rjmp	.+102    	; 0xb8 <__bad_interrupt>
  52:	00 00       	nop
  54:	31 c0       	rjmp	.+98     	; 0xb8 <__bad_interrupt>
  56:	00 00       	nop
  58:	2f c0       	rjmp	.+94     	; 0xb8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2d c0       	rjmp	.+90     	; 0xb8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2b c0       	rjmp	.+86     	; 0xb8 <__bad_interrupt>
  62:	00 00       	nop
  64:	29 c0       	rjmp	.+82     	; 0xb8 <__bad_interrupt>
  66:	00 00       	nop
  68:	27 c0       	rjmp	.+78     	; 0xb8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	25 c0       	rjmp	.+74     	; 0xb8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	23 c0       	rjmp	.+70     	; 0xb8 <__bad_interrupt>
  72:	00 00       	nop
  74:	27 c1       	rjmp	.+590    	; 0x2c4 <__vector_29>
  76:	00 00       	nop
  78:	1f c0       	rjmp	.+62     	; 0xb8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1d c0       	rjmp	.+58     	; 0xb8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1b c0       	rjmp	.+54     	; 0xb8 <__bad_interrupt>
  82:	00 00       	nop
  84:	19 c0       	rjmp	.+50     	; 0xb8 <__bad_interrupt>
  86:	00 00       	nop
  88:	17 c0       	rjmp	.+46     	; 0xb8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	15 c0       	rjmp	.+42     	; 0xb8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	13 c0       	rjmp	.+38     	; 0xb8 <__bad_interrupt>
  92:	00 00       	nop
  94:	11 c0       	rjmp	.+34     	; 0xb8 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_clear_bss>:
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	01 c0       	rjmp	.+2      	; 0xae <.do_clear_bss_start>

000000ac <.do_clear_bss_loop>:
  ac:	1d 92       	st	X+, r1

000000ae <.do_clear_bss_start>:
  ae:	ab 31       	cpi	r26, 0x1B	; 27
  b0:	b2 07       	cpc	r27, r18
  b2:	e1 f7       	brne	.-8      	; 0xac <.do_clear_bss_loop>
  b4:	82 d0       	rcall	.+260    	; 0x1ba <main>
  b6:	af c2       	rjmp	.+1374   	; 0x616 <_exit>

000000b8 <__bad_interrupt>:
  b8:	a3 cf       	rjmp	.-186    	; 0x0 <__vectors>

000000ba <setupPWM>:
			TIFR3|=0x01; //reset overflow flag by writing a 1 to TOV2 bit
			i+=1;
			//equivalent; TIFR2 |= _BV(TOV2)
		}
	}
	TCCR3B&=0b11111000; //disable timer 2
  ba:	bc 01       	movw	r22, r24
  bc:	84 b5       	in	r24, 0x24	; 36
  be:	83 68       	ori	r24, 0x83	; 131
  c0:	84 bd       	out	0x24, r24	; 36
  c2:	85 b5       	in	r24, 0x25	; 37
  c4:	83 60       	ori	r24, 0x03	; 3
  c6:	85 bd       	out	0x25, r24	; 37
  c8:	07 2e       	mov	r0, r23
  ca:	00 0c       	add	r0, r0
  cc:	88 0b       	sbc	r24, r24
  ce:	99 0b       	sbc	r25, r25
  d0:	b3 d1       	rcall	.+870    	; 0x438 <__floatsisf>
  d2:	23 e3       	ldi	r18, 0x33	; 51
  d4:	33 e3       	ldi	r19, 0x33	; 51
  d6:	43 e2       	ldi	r20, 0x23	; 35
  d8:	50 e4       	ldi	r21, 0x40	; 64
  da:	12 d2       	rcall	.+1060   	; 0x500 <__mulsf3>
  dc:	7f d1       	rcall	.+766    	; 0x3dc <__fixunssfsi>
  de:	67 bd       	out	0x27, r22	; 39
  e0:	85 b1       	in	r24, 0x05	; 5
  e2:	80 7f       	andi	r24, 0xF0	; 240
  e4:	85 b9       	out	0x05, r24	; 5
  e6:	08 95       	ret

000000e8 <setupISR>:
  e8:	ea 9a       	sbi	0x1d, 2	; 29
  ea:	e9 e6       	ldi	r30, 0x69	; 105
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 63       	ori	r24, 0x30	; 48
  f2:	80 83       	st	Z, r24
  f4:	08 95       	ret

000000f6 <setupADC>:
  f6:	ea e7       	ldi	r30, 0x7A	; 122
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	8d 68       	ori	r24, 0x8D	; 141
  fe:	80 83       	st	Z, r24
 100:	ec e7       	ldi	r30, 0x7C	; 124
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	81 64       	ori	r24, 0x41	; 65
 108:	80 83       	st	Z, r24
 10a:	80 81       	ld	r24, Z
 10c:	81 7e       	andi	r24, 0xE1	; 225
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <motorControl>:
 112:	26 2f       	mov	r18, r22
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <_edata>
 11a:	43 70       	andi	r20, 0x03	; 3
 11c:	50 e0       	ldi	r21, 0x00	; 0
 11e:	42 17       	cp	r20, r18
 120:	53 07       	cpc	r21, r19
 122:	81 f0       	breq	.+32     	; 0x144 <motorControl+0x32>
 124:	45 b1       	in	r20, 0x05	; 5
 126:	40 7f       	andi	r20, 0xF0	; 240
 128:	45 b9       	out	0x05, r20	; 5
 12a:	45 b1       	in	r20, 0x05	; 5
 12c:	20 95       	com	r18
 12e:	30 95       	com	r19
 130:	23 70       	andi	r18, 0x03	; 3
 132:	33 27       	eor	r19, r19
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	22 0f       	add	r18, r18
 13a:	33 1f       	adc	r19, r19
 13c:	24 2b       	or	r18, r20
 13e:	25 b9       	out	0x05, r18	; 5
 140:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 144:	bc 01       	movw	r22, r24
 146:	99 0f       	add	r25, r25
 148:	88 0b       	sbc	r24, r24
 14a:	99 0b       	sbc	r25, r25
 14c:	75 d1       	rcall	.+746    	; 0x438 <__floatsisf>
 14e:	23 e3       	ldi	r18, 0x33	; 51
 150:	33 e3       	ldi	r19, 0x33	; 51
 152:	43 e2       	ldi	r20, 0x23	; 35
 154:	50 e4       	ldi	r21, 0x40	; 64
 156:	d4 d1       	rcall	.+936    	; 0x500 <__mulsf3>
 158:	41 d1       	rcall	.+642    	; 0x3dc <__fixunssfsi>
 15a:	67 bd       	out	0x27, r22	; 39
 15c:	08 95       	ret

0000015e <initTimer1>:
 15e:	e1 e8       	ldi	r30, 0x81	; 129
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	88 60       	ori	r24, 0x08	; 8
 166:	80 83       	st	Z, r24
 168:	88 ee       	ldi	r24, 0xE8	; 232
 16a:	93 e0       	ldi	r25, 0x03	; 3
 16c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 170:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 174:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 178:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 17c:	08 95       	ret

0000017e <mTimer2>:
 17e:	ac 01       	movw	r20, r24
 180:	e1 eb       	ldi	r30, 0xB1	; 177
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	90 81       	ld	r25, Z
 186:	93 60       	ori	r25, 0x03	; 3
 188:	90 83       	st	Z, r25
 18a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 18e:	b8 99       	sbic	0x17, 0	; 23
 190:	b8 9a       	sbi	0x17, 0	; 23
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	05 c0       	rjmp	.+10     	; 0x1a2 <mTimer2+0x24>
 198:	b8 9b       	sbis	0x17, 0	; 23
 19a:	fe cf       	rjmp	.-4      	; 0x198 <mTimer2+0x1a>
 19c:	b8 9a       	sbi	0x17, 0	; 23
 19e:	2f 5f       	subi	r18, 0xFF	; 255
 1a0:	3f 4f       	sbci	r19, 0xFF	; 255
 1a2:	24 17       	cp	r18, r20
 1a4:	35 07       	cpc	r19, r21
 1a6:	1c f4       	brge	.+6      	; 0x1ae <mTimer2+0x30>
 1a8:	b8 9b       	sbis	0x17, 0	; 23
 1aa:	f6 cf       	rjmp	.-20     	; 0x198 <mTimer2+0x1a>
 1ac:	f7 cf       	rjmp	.-18     	; 0x19c <mTimer2+0x1e>
 1ae:	e1 eb       	ldi	r30, 0xB1	; 177
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	80 81       	ld	r24, Z
 1b4:	88 7f       	andi	r24, 0xF8	; 248
 1b6:	80 83       	st	Z, r24
 1b8:	08 95       	ret

000001ba <main>:
 1ba:	e1 e6       	ldi	r30, 0x61	; 97
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 e8       	ldi	r24, 0x80	; 128
 1c0:	80 83       	st	Z, r24
 1c2:	10 82       	st	Z, r1
 1c4:	f8 94       	cli
 1c6:	cb df       	rcall	.-106    	; 0x15e <initTimer1>
 1c8:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 1cc:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 1d0:	8e e1       	ldi	r24, 0x1E	; 30
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	72 df       	rcall	.-284    	; 0xba <setupPWM>
 1d6:	88 df       	rcall	.-240    	; 0xe8 <setupISR>
 1d8:	8e df       	rcall	.-228    	; 0xf6 <setupADC>
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	84 b9       	out	0x04, r24	; 4
 1de:	87 b9       	out	0x07, r24	; 7
 1e0:	80 ef       	ldi	r24, 0xF0	; 240
 1e2:	8a b9       	out	0x0a, r24	; 10
 1e4:	10 ba       	out	0x10, r1	; 16
 1e6:	78 94       	sei
 1e8:	85 b1       	in	r24, 0x05	; 5
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	85 b9       	out	0x05, r24	; 5
 1ee:	8a ea       	ldi	r24, 0xAA	; 170
 1f0:	88 b9       	out	0x08, r24	; 8
 1f2:	80 ed       	ldi	r24, 0xD0	; 208
 1f4:	97 e0       	ldi	r25, 0x07	; 7
 1f6:	c3 df       	rcall	.-122    	; 0x17e <mTimer2>
 1f8:	18 b8       	out	0x08, r1	; 8
 1fa:	80 ed       	ldi	r24, 0xD0	; 208
 1fc:	97 e0       	ldi	r25, 0x07	; 7
 1fe:	bf df       	rcall	.-130    	; 0x17e <mTimer2>
 200:	62 e0       	ldi	r22, 0x02	; 2
 202:	8e e1       	ldi	r24, 0x1E	; 30
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	85 df       	rcall	.-246    	; 0x112 <motorControl>
 208:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <ADC_RESET>
 20c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ADCResultFlag>
 210:	88 23       	and	r24, r24
 212:	e1 f3       	breq	.-8      	; 0x20c <main+0x52>
 214:	48 e0       	ldi	r20, 0x08	; 8
 216:	50 e0       	ldi	r21, 0x00	; 0
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	e0 91 05 01 	lds	r30, 0x0105	; 0x800105 <ADCFilterCount>
 220:	f0 91 06 01 	lds	r31, 0x0106	; 0x800106 <ADCFilterCount+0x1>
 224:	ee 0f       	add	r30, r30
 226:	ff 1f       	adc	r31, r31
 228:	e9 5f       	subi	r30, 0xF9	; 249
 22a:	fe 4f       	sbci	r31, 0xFE	; 254
 22c:	80 81       	ld	r24, Z
 22e:	91 81       	ldd	r25, Z+1	; 0x01
 230:	28 0f       	add	r18, r24
 232:	39 1f       	adc	r19, r25
 234:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <ADCFilterCount>
 238:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <ADCFilterCount+0x1>
 23c:	01 96       	adiw	r24, 0x01	; 1
 23e:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <ADCFilterCount+0x1>
 242:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <ADCFilterCount>
 246:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <ADCFilterCount>
 24a:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <ADCFilterCount+0x1>
 24e:	87 70       	andi	r24, 0x07	; 7
 250:	99 27       	eor	r25, r25
 252:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <ADCFilterCount+0x1>
 256:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <ADCFilterCount>
 25a:	41 50       	subi	r20, 0x01	; 1
 25c:	51 09       	sbc	r21, r1
 25e:	f1 f6       	brne	.-68     	; 0x21c <main+0x62>
 260:	36 95       	lsr	r19
 262:	27 95       	ror	r18
 264:	36 95       	lsr	r19
 266:	27 95       	ror	r18
 268:	36 95       	lsr	r19
 26a:	27 95       	ror	r18
 26c:	28 b9       	out	0x08, r18	; 8
 26e:	22 27       	eor	r18, r18
 270:	33 70       	andi	r19, 0x03	; 3
 272:	36 95       	lsr	r19
 274:	27 95       	ror	r18
 276:	36 95       	lsr	r19
 278:	27 95       	ror	r18
 27a:	36 95       	lsr	r19
 27c:	27 95       	ror	r18
 27e:	2b b9       	out	0x0b, r18	; 11
 280:	c5 cf       	rjmp	.-118    	; 0x20c <main+0x52>

00000282 <__vector_3>:
}
/**********INTERRUPT SERVICE ROUTINES**********/
/*sensor 3: 2nt Optical Reflective, Active HIGH starts AD conversion*/
ISR(INT2_vect){ //unused --ODA
 282:	1f 92       	push	r1
 284:	0f 92       	push	r0
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	0f 92       	push	r0
 28a:	11 24       	eor	r1, r1
 28c:	0b b6       	in	r0, 0x3b	; 59
 28e:	0f 92       	push	r0
 290:	8f 93       	push	r24
 292:	9f 93       	push	r25
 294:	ef 93       	push	r30
 296:	ff 93       	push	r31
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	lowADC=0xFFFF;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	9f ef       	ldi	r25, 0xFF	; 255
 29c:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <lowADC+0x1>
 2a0:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <lowADC>
	ADCSRA|= _BV(ADSC); //trigger ADC (i.e. begin ADC conversion)
 2a4:	ea e7       	ldi	r30, 0x7A	; 122
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	80 64       	ori	r24, 0x40	; 64
 2ac:	80 83       	st	Z, r24
}
 2ae:	ff 91       	pop	r31
 2b0:	ef 91       	pop	r30
 2b2:	9f 91       	pop	r25
 2b4:	8f 91       	pop	r24
 2b6:	0f 90       	pop	r0
 2b8:	0b be       	out	0x3b, r0	; 59
 2ba:	0f 90       	pop	r0
 2bc:	0f be       	out	0x3f, r0	; 63
 2be:	0f 90       	pop	r0
 2c0:	1f 90       	pop	r1
 2c2:	18 95       	reti

000002c4 <__vector_29>:
ISR(ADC_vect){ //ADCResult is left-adjusted (i.e. the upper most byte is taken; 2 LSB' are discarded)
 2c4:	1f 92       	push	r1
 2c6:	0f 92       	push	r0
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	0f 92       	push	r0
 2cc:	11 24       	eor	r1, r1
 2ce:	0b b6       	in	r0, 0x3b	; 59
 2d0:	0f 92       	push	r0
 2d2:	2f 93       	push	r18
 2d4:	3f 93       	push	r19
 2d6:	8f 93       	push	r24
 2d8:	9f 93       	push	r25
 2da:	ef 93       	push	r30
 2dc:	ff 93       	push	r31
	if (lowADC>ADC){ //if ADC result is still decreasing (i.e. if object's reflectivity is increasing)
 2de:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2e2:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2e6:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <lowADC>
 2ea:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <lowADC+0x1>
 2ee:	28 17       	cp	r18, r24
 2f0:	39 07       	cpc	r19, r25
 2f2:	48 f5       	brcc	.+82     	; 0x346 <__vector_29+0x82>
		lowADC=ADC; //ADC holds the entire 10 bit value in a 16bit variable; lowADC set for future comparison
 2f4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2f8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2fc:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <lowADC+0x1>
 300:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <lowADC>
		lowADCArray[ADCFilterCount]=lowADC;
 304:	e0 91 05 01 	lds	r30, 0x0105	; 0x800105 <ADCFilterCount>
 308:	f0 91 06 01 	lds	r31, 0x0106	; 0x800106 <ADCFilterCount+0x1>
 30c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <lowADC>
 310:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <lowADC+0x1>
 314:	ee 0f       	add	r30, r30
 316:	ff 1f       	adc	r31, r31
 318:	e9 5f       	subi	r30, 0xF9	; 249
 31a:	fe 4f       	sbci	r31, 0xFE	; 254
 31c:	91 83       	std	Z+1, r25	; 0x01
 31e:	80 83       	st	Z, r24
		ADCFilterCount++; //increment array location being set
 320:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <ADCFilterCount>
 324:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <ADCFilterCount+0x1>
 328:	01 96       	adiw	r24, 0x01	; 1
 32a:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <ADCFilterCount+0x1>
 32e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <ADCFilterCount>
		ADCFilterCount&=0b00000111; //modulus of 8
 332:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <ADCFilterCount>
 336:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <ADCFilterCount+0x1>
 33a:	87 70       	andi	r24, 0x07	; 7
 33c:	99 27       	eor	r25, r25
 33e:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <ADCFilterCount+0x1>
 342:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <ADCFilterCount>
		//highByteADC=ADCH;
		//lowByteADC=ADCL;
	}
	if ((PIND&0b00000100)==0b00000100) ADCSRA|= _BV(ADSC); //if there is still an object keep initializing ADC conversions
 346:	4a 9b       	sbis	0x09, 2	; 9
 348:	06 c0       	rjmp	.+12     	; 0x356 <__vector_29+0x92>
 34a:	ea e7       	ldi	r30, 0x7A	; 122
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	80 64       	ori	r24, 0x40	; 64
 352:	80 83       	st	Z, r24
 354:	03 c0       	rjmp	.+6      	; 0x35c <__vector_29+0x98>
	else{
		ADCResultFlag=1;
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <ADCResultFlag>
		//PORTC=lowByteADC;
		//PORTD=((highByteADC&0b00000011)<< 5); //0b00100000 if true //green green
	}
}
 35c:	ff 91       	pop	r31
 35e:	ef 91       	pop	r30
 360:	9f 91       	pop	r25
 362:	8f 91       	pop	r24
 364:	3f 91       	pop	r19
 366:	2f 91       	pop	r18
 368:	0f 90       	pop	r0
 36a:	0b be       	out	0x3b, r0	; 59
 36c:	0f 90       	pop	r0
 36e:	0f be       	out	0x3f, r0	; 63
 370:	0f 90       	pop	r0
 372:	1f 90       	pop	r1
 374:	18 95       	reti

00000376 <__vector_7>:
ISR(INT6_vect){
 376:	1f 92       	push	r1
 378:	0f 92       	push	r0
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	0f 92       	push	r0
 37e:	11 24       	eor	r1, r1
 380:	0b b6       	in	r0, 0x3b	; 59
 382:	0f 92       	push	r0
 384:	2f 93       	push	r18
 386:	3f 93       	push	r19
 388:	4f 93       	push	r20
 38a:	5f 93       	push	r21
 38c:	6f 93       	push	r22
 38e:	7f 93       	push	r23
 390:	8f 93       	push	r24
 392:	9f 93       	push	r25
 394:	af 93       	push	r26
 396:	bf 93       	push	r27
 398:	ef 93       	push	r30
 39a:	ff 93       	push	r31
	ADC_RESET=1;
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <ADC_RESET>
	mTimer2(15); //debounce period
 3a2:	8f e0       	ldi	r24, 0x0F	; 15
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	eb de       	rcall	.-554    	; 0x17e <mTimer2>
	while((PINE & 0b01000000)==0b01000000)mTimer2(25); //while switch is still pressed
 3a8:	66 9b       	sbis	0x0c, 6	; 12
 3aa:	05 c0       	rjmp	.+10     	; 0x3b6 <__vector_7+0x40>
 3ac:	89 e1       	ldi	r24, 0x19	; 25
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	e6 de       	rcall	.-564    	; 0x17e <mTimer2>
 3b2:	66 99       	sbic	0x0c, 6	; 12
 3b4:	fb cf       	rjmp	.-10     	; 0x3ac <__vector_7+0x36>
}
 3b6:	ff 91       	pop	r31
 3b8:	ef 91       	pop	r30
 3ba:	bf 91       	pop	r27
 3bc:	af 91       	pop	r26
 3be:	9f 91       	pop	r25
 3c0:	8f 91       	pop	r24
 3c2:	7f 91       	pop	r23
 3c4:	6f 91       	pop	r22
 3c6:	5f 91       	pop	r21
 3c8:	4f 91       	pop	r20
 3ca:	3f 91       	pop	r19
 3cc:	2f 91       	pop	r18
 3ce:	0f 90       	pop	r0
 3d0:	0b be       	out	0x3b, r0	; 59
 3d2:	0f 90       	pop	r0
 3d4:	0f be       	out	0x3f, r0	; 63
 3d6:	0f 90       	pop	r0
 3d8:	1f 90       	pop	r1
 3da:	18 95       	reti

000003dc <__fixunssfsi>:
 3dc:	70 d0       	rcall	.+224    	; 0x4be <__fp_splitA>
 3de:	88 f0       	brcs	.+34     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e0:	9f 57       	subi	r25, 0x7F	; 127
 3e2:	90 f0       	brcs	.+36     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3e4:	b9 2f       	mov	r27, r25
 3e6:	99 27       	eor	r25, r25
 3e8:	b7 51       	subi	r27, 0x17	; 23
 3ea:	a0 f0       	brcs	.+40     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3ec:	d1 f0       	breq	.+52     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	1a f0       	brmi	.+6      	; 0x3fe <__fixunssfsi+0x22>
 3f8:	ba 95       	dec	r27
 3fa:	c9 f7       	brne	.-14     	; 0x3ee <__fixunssfsi+0x12>
 3fc:	12 c0       	rjmp	.+36     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3fe:	b1 30       	cpi	r27, 0x01	; 1
 400:	81 f0       	breq	.+32     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 402:	77 d0       	rcall	.+238    	; 0x4f2 <__fp_zero>
 404:	b1 e0       	ldi	r27, 0x01	; 1
 406:	08 95       	ret
 408:	74 c0       	rjmp	.+232    	; 0x4f2 <__fp_zero>
 40a:	67 2f       	mov	r22, r23
 40c:	78 2f       	mov	r23, r24
 40e:	88 27       	eor	r24, r24
 410:	b8 5f       	subi	r27, 0xF8	; 248
 412:	39 f0       	breq	.+14     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 414:	b9 3f       	cpi	r27, 0xF9	; 249
 416:	cc f3       	brlt	.-14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 418:	86 95       	lsr	r24
 41a:	77 95       	ror	r23
 41c:	67 95       	ror	r22
 41e:	b3 95       	inc	r27
 420:	d9 f7       	brne	.-10     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 422:	3e f4       	brtc	.+14     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 424:	90 95       	com	r25
 426:	80 95       	com	r24
 428:	70 95       	com	r23
 42a:	61 95       	neg	r22
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8f 4f       	sbci	r24, 0xFF	; 255
 430:	9f 4f       	sbci	r25, 0xFF	; 255
 432:	08 95       	ret

00000434 <__floatunsisf>:
 434:	e8 94       	clt
 436:	09 c0       	rjmp	.+18     	; 0x44a <__floatsisf+0x12>

00000438 <__floatsisf>:
 438:	97 fb       	bst	r25, 7
 43a:	3e f4       	brtc	.+14     	; 0x44a <__floatsisf+0x12>
 43c:	90 95       	com	r25
 43e:	80 95       	com	r24
 440:	70 95       	com	r23
 442:	61 95       	neg	r22
 444:	7f 4f       	sbci	r23, 0xFF	; 255
 446:	8f 4f       	sbci	r24, 0xFF	; 255
 448:	9f 4f       	sbci	r25, 0xFF	; 255
 44a:	99 23       	and	r25, r25
 44c:	a9 f0       	breq	.+42     	; 0x478 <__floatsisf+0x40>
 44e:	f9 2f       	mov	r31, r25
 450:	96 e9       	ldi	r25, 0x96	; 150
 452:	bb 27       	eor	r27, r27
 454:	93 95       	inc	r25
 456:	f6 95       	lsr	r31
 458:	87 95       	ror	r24
 45a:	77 95       	ror	r23
 45c:	67 95       	ror	r22
 45e:	b7 95       	ror	r27
 460:	f1 11       	cpse	r31, r1
 462:	f8 cf       	rjmp	.-16     	; 0x454 <__floatsisf+0x1c>
 464:	fa f4       	brpl	.+62     	; 0x4a4 <__floatsisf+0x6c>
 466:	bb 0f       	add	r27, r27
 468:	11 f4       	brne	.+4      	; 0x46e <__floatsisf+0x36>
 46a:	60 ff       	sbrs	r22, 0
 46c:	1b c0       	rjmp	.+54     	; 0x4a4 <__floatsisf+0x6c>
 46e:	6f 5f       	subi	r22, 0xFF	; 255
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	16 c0       	rjmp	.+44     	; 0x4a4 <__floatsisf+0x6c>
 478:	88 23       	and	r24, r24
 47a:	11 f0       	breq	.+4      	; 0x480 <__floatsisf+0x48>
 47c:	96 e9       	ldi	r25, 0x96	; 150
 47e:	11 c0       	rjmp	.+34     	; 0x4a2 <__floatsisf+0x6a>
 480:	77 23       	and	r23, r23
 482:	21 f0       	breq	.+8      	; 0x48c <__floatsisf+0x54>
 484:	9e e8       	ldi	r25, 0x8E	; 142
 486:	87 2f       	mov	r24, r23
 488:	76 2f       	mov	r23, r22
 48a:	05 c0       	rjmp	.+10     	; 0x496 <__floatsisf+0x5e>
 48c:	66 23       	and	r22, r22
 48e:	71 f0       	breq	.+28     	; 0x4ac <__floatsisf+0x74>
 490:	96 e8       	ldi	r25, 0x86	; 134
 492:	86 2f       	mov	r24, r22
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	2a f0       	brmi	.+10     	; 0x4a4 <__floatsisf+0x6c>
 49a:	9a 95       	dec	r25
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	da f7       	brpl	.-10     	; 0x49a <__floatsisf+0x62>
 4a4:	88 0f       	add	r24, r24
 4a6:	96 95       	lsr	r25
 4a8:	87 95       	ror	r24
 4aa:	97 f9       	bld	r25, 7
 4ac:	08 95       	ret

000004ae <__fp_split3>:
 4ae:	57 fd       	sbrc	r21, 7
 4b0:	90 58       	subi	r25, 0x80	; 128
 4b2:	44 0f       	add	r20, r20
 4b4:	55 1f       	adc	r21, r21
 4b6:	59 f0       	breq	.+22     	; 0x4ce <__fp_splitA+0x10>
 4b8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <__fp_splitA+0x1a>
 4bc:	47 95       	ror	r20

000004be <__fp_splitA>:
 4be:	88 0f       	add	r24, r24
 4c0:	97 fb       	bst	r25, 7
 4c2:	99 1f       	adc	r25, r25
 4c4:	61 f0       	breq	.+24     	; 0x4de <__fp_splitA+0x20>
 4c6:	9f 3f       	cpi	r25, 0xFF	; 255
 4c8:	79 f0       	breq	.+30     	; 0x4e8 <__fp_splitA+0x2a>
 4ca:	87 95       	ror	r24
 4cc:	08 95       	ret
 4ce:	12 16       	cp	r1, r18
 4d0:	13 06       	cpc	r1, r19
 4d2:	14 06       	cpc	r1, r20
 4d4:	55 1f       	adc	r21, r21
 4d6:	f2 cf       	rjmp	.-28     	; 0x4bc <__fp_split3+0xe>
 4d8:	46 95       	lsr	r20
 4da:	f1 df       	rcall	.-30     	; 0x4be <__fp_splitA>
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <__fp_splitA+0x30>
 4de:	16 16       	cp	r1, r22
 4e0:	17 06       	cpc	r1, r23
 4e2:	18 06       	cpc	r1, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	f1 cf       	rjmp	.-30     	; 0x4ca <__fp_splitA+0xc>
 4e8:	86 95       	lsr	r24
 4ea:	71 05       	cpc	r23, r1
 4ec:	61 05       	cpc	r22, r1
 4ee:	08 94       	sec
 4f0:	08 95       	ret

000004f2 <__fp_zero>:
 4f2:	e8 94       	clt

000004f4 <__fp_szero>:
 4f4:	bb 27       	eor	r27, r27
 4f6:	66 27       	eor	r22, r22
 4f8:	77 27       	eor	r23, r23
 4fa:	cb 01       	movw	r24, r22
 4fc:	97 f9       	bld	r25, 7
 4fe:	08 95       	ret

00000500 <__mulsf3>:
 500:	0b d0       	rcall	.+22     	; 0x518 <__mulsf3x>
 502:	78 c0       	rjmp	.+240    	; 0x5f4 <__fp_round>
 504:	69 d0       	rcall	.+210    	; 0x5d8 <__fp_pscA>
 506:	28 f0       	brcs	.+10     	; 0x512 <__mulsf3+0x12>
 508:	6e d0       	rcall	.+220    	; 0x5e6 <__fp_pscB>
 50a:	18 f0       	brcs	.+6      	; 0x512 <__mulsf3+0x12>
 50c:	95 23       	and	r25, r21
 50e:	09 f0       	breq	.+2      	; 0x512 <__mulsf3+0x12>
 510:	5a c0       	rjmp	.+180    	; 0x5c6 <__fp_inf>
 512:	5f c0       	rjmp	.+190    	; 0x5d2 <__fp_nan>
 514:	11 24       	eor	r1, r1
 516:	ee cf       	rjmp	.-36     	; 0x4f4 <__fp_szero>

00000518 <__mulsf3x>:
 518:	ca df       	rcall	.-108    	; 0x4ae <__fp_split3>
 51a:	a0 f3       	brcs	.-24     	; 0x504 <__mulsf3+0x4>

0000051c <__mulsf3_pse>:
 51c:	95 9f       	mul	r25, r21
 51e:	d1 f3       	breq	.-12     	; 0x514 <__mulsf3+0x14>
 520:	95 0f       	add	r25, r21
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	55 1f       	adc	r21, r21
 526:	62 9f       	mul	r22, r18
 528:	f0 01       	movw	r30, r0
 52a:	72 9f       	mul	r23, r18
 52c:	bb 27       	eor	r27, r27
 52e:	f0 0d       	add	r31, r0
 530:	b1 1d       	adc	r27, r1
 532:	63 9f       	mul	r22, r19
 534:	aa 27       	eor	r26, r26
 536:	f0 0d       	add	r31, r0
 538:	b1 1d       	adc	r27, r1
 53a:	aa 1f       	adc	r26, r26
 53c:	64 9f       	mul	r22, r20
 53e:	66 27       	eor	r22, r22
 540:	b0 0d       	add	r27, r0
 542:	a1 1d       	adc	r26, r1
 544:	66 1f       	adc	r22, r22
 546:	82 9f       	mul	r24, r18
 548:	22 27       	eor	r18, r18
 54a:	b0 0d       	add	r27, r0
 54c:	a1 1d       	adc	r26, r1
 54e:	62 1f       	adc	r22, r18
 550:	73 9f       	mul	r23, r19
 552:	b0 0d       	add	r27, r0
 554:	a1 1d       	adc	r26, r1
 556:	62 1f       	adc	r22, r18
 558:	83 9f       	mul	r24, r19
 55a:	a0 0d       	add	r26, r0
 55c:	61 1d       	adc	r22, r1
 55e:	22 1f       	adc	r18, r18
 560:	74 9f       	mul	r23, r20
 562:	33 27       	eor	r19, r19
 564:	a0 0d       	add	r26, r0
 566:	61 1d       	adc	r22, r1
 568:	23 1f       	adc	r18, r19
 56a:	84 9f       	mul	r24, r20
 56c:	60 0d       	add	r22, r0
 56e:	21 1d       	adc	r18, r1
 570:	82 2f       	mov	r24, r18
 572:	76 2f       	mov	r23, r22
 574:	6a 2f       	mov	r22, r26
 576:	11 24       	eor	r1, r1
 578:	9f 57       	subi	r25, 0x7F	; 127
 57a:	50 40       	sbci	r21, 0x00	; 0
 57c:	8a f0       	brmi	.+34     	; 0x5a0 <__mulsf3_pse+0x84>
 57e:	e1 f0       	breq	.+56     	; 0x5b8 <__mulsf3_pse+0x9c>
 580:	88 23       	and	r24, r24
 582:	4a f0       	brmi	.+18     	; 0x596 <__mulsf3_pse+0x7a>
 584:	ee 0f       	add	r30, r30
 586:	ff 1f       	adc	r31, r31
 588:	bb 1f       	adc	r27, r27
 58a:	66 1f       	adc	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	88 1f       	adc	r24, r24
 590:	91 50       	subi	r25, 0x01	; 1
 592:	50 40       	sbci	r21, 0x00	; 0
 594:	a9 f7       	brne	.-22     	; 0x580 <__mulsf3_pse+0x64>
 596:	9e 3f       	cpi	r25, 0xFE	; 254
 598:	51 05       	cpc	r21, r1
 59a:	70 f0       	brcs	.+28     	; 0x5b8 <__mulsf3_pse+0x9c>
 59c:	14 c0       	rjmp	.+40     	; 0x5c6 <__fp_inf>
 59e:	aa cf       	rjmp	.-172    	; 0x4f4 <__fp_szero>
 5a0:	5f 3f       	cpi	r21, 0xFF	; 255
 5a2:	ec f3       	brlt	.-6      	; 0x59e <__mulsf3_pse+0x82>
 5a4:	98 3e       	cpi	r25, 0xE8	; 232
 5a6:	dc f3       	brlt	.-10     	; 0x59e <__mulsf3_pse+0x82>
 5a8:	86 95       	lsr	r24
 5aa:	77 95       	ror	r23
 5ac:	67 95       	ror	r22
 5ae:	b7 95       	ror	r27
 5b0:	f7 95       	ror	r31
 5b2:	e7 95       	ror	r30
 5b4:	9f 5f       	subi	r25, 0xFF	; 255
 5b6:	c1 f7       	brne	.-16     	; 0x5a8 <__mulsf3_pse+0x8c>
 5b8:	fe 2b       	or	r31, r30
 5ba:	88 0f       	add	r24, r24
 5bc:	91 1d       	adc	r25, r1
 5be:	96 95       	lsr	r25
 5c0:	87 95       	ror	r24
 5c2:	97 f9       	bld	r25, 7
 5c4:	08 95       	ret

000005c6 <__fp_inf>:
 5c6:	97 f9       	bld	r25, 7
 5c8:	9f 67       	ori	r25, 0x7F	; 127
 5ca:	80 e8       	ldi	r24, 0x80	; 128
 5cc:	70 e0       	ldi	r23, 0x00	; 0
 5ce:	60 e0       	ldi	r22, 0x00	; 0
 5d0:	08 95       	ret

000005d2 <__fp_nan>:
 5d2:	9f ef       	ldi	r25, 0xFF	; 255
 5d4:	80 ec       	ldi	r24, 0xC0	; 192
 5d6:	08 95       	ret

000005d8 <__fp_pscA>:
 5d8:	00 24       	eor	r0, r0
 5da:	0a 94       	dec	r0
 5dc:	16 16       	cp	r1, r22
 5de:	17 06       	cpc	r1, r23
 5e0:	18 06       	cpc	r1, r24
 5e2:	09 06       	cpc	r0, r25
 5e4:	08 95       	ret

000005e6 <__fp_pscB>:
 5e6:	00 24       	eor	r0, r0
 5e8:	0a 94       	dec	r0
 5ea:	12 16       	cp	r1, r18
 5ec:	13 06       	cpc	r1, r19
 5ee:	14 06       	cpc	r1, r20
 5f0:	05 06       	cpc	r0, r21
 5f2:	08 95       	ret

000005f4 <__fp_round>:
 5f4:	09 2e       	mov	r0, r25
 5f6:	03 94       	inc	r0
 5f8:	00 0c       	add	r0, r0
 5fa:	11 f4       	brne	.+4      	; 0x600 <__fp_round+0xc>
 5fc:	88 23       	and	r24, r24
 5fe:	52 f0       	brmi	.+20     	; 0x614 <__fp_round+0x20>
 600:	bb 0f       	add	r27, r27
 602:	40 f4       	brcc	.+16     	; 0x614 <__fp_round+0x20>
 604:	bf 2b       	or	r27, r31
 606:	11 f4       	brne	.+4      	; 0x60c <__fp_round+0x18>
 608:	60 ff       	sbrs	r22, 0
 60a:	04 c0       	rjmp	.+8      	; 0x614 <__fp_round+0x20>
 60c:	6f 5f       	subi	r22, 0xFF	; 255
 60e:	7f 4f       	sbci	r23, 0xFF	; 255
 610:	8f 4f       	sbci	r24, 0xFF	; 255
 612:	9f 4f       	sbci	r25, 0xFF	; 255
 614:	08 95       	ret

00000616 <_exit>:
 616:	f8 94       	cli

00000618 <__stop_program>:
 618:	ff cf       	rjmp	.-2      	; 0x618 <__stop_program>
