
REFLECTIVITIES.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000594  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800100  00800100  00000608  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000638  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000678  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fb4  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cab  00000000  00000000  000016b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000052f  00000000  00000000  0000235f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002890  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000680  00000000  00000000  00002a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000034a  00000000  00000000  00003094  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000033de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	59 c0       	rjmp	.+178    	; 0xb8 <__bad_interrupt>
   6:	00 00       	nop
   8:	57 c0       	rjmp	.+174    	; 0xb8 <__bad_interrupt>
   a:	00 00       	nop
   c:	00 c1       	rjmp	.+512    	; 0x20e <__vector_3>
   e:	00 00       	nop
  10:	53 c0       	rjmp	.+166    	; 0xb8 <__bad_interrupt>
  12:	00 00       	nop
  14:	51 c0       	rjmp	.+162    	; 0xb8 <__bad_interrupt>
  16:	00 00       	nop
  18:	4f c0       	rjmp	.+158    	; 0xb8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	69 c1       	rjmp	.+722    	; 0x2f0 <__vector_7>
  1e:	00 00       	nop
  20:	4b c0       	rjmp	.+150    	; 0xb8 <__bad_interrupt>
  22:	00 00       	nop
  24:	49 c0       	rjmp	.+146    	; 0xb8 <__bad_interrupt>
  26:	00 00       	nop
  28:	47 c0       	rjmp	.+142    	; 0xb8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	45 c0       	rjmp	.+138    	; 0xb8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	43 c0       	rjmp	.+134    	; 0xb8 <__bad_interrupt>
  32:	00 00       	nop
  34:	41 c0       	rjmp	.+130    	; 0xb8 <__bad_interrupt>
  36:	00 00       	nop
  38:	3f c0       	rjmp	.+126    	; 0xb8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3d c0       	rjmp	.+122    	; 0xb8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3b c0       	rjmp	.+118    	; 0xb8 <__bad_interrupt>
  42:	00 00       	nop
  44:	39 c0       	rjmp	.+114    	; 0xb8 <__bad_interrupt>
  46:	00 00       	nop
  48:	37 c0       	rjmp	.+110    	; 0xb8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	35 c0       	rjmp	.+106    	; 0xb8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	33 c0       	rjmp	.+102    	; 0xb8 <__bad_interrupt>
  52:	00 00       	nop
  54:	31 c0       	rjmp	.+98     	; 0xb8 <__bad_interrupt>
  56:	00 00       	nop
  58:	2f c0       	rjmp	.+94     	; 0xb8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2d c0       	rjmp	.+90     	; 0xb8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2b c0       	rjmp	.+86     	; 0xb8 <__bad_interrupt>
  62:	00 00       	nop
  64:	29 c0       	rjmp	.+82     	; 0xb8 <__bad_interrupt>
  66:	00 00       	nop
  68:	27 c0       	rjmp	.+78     	; 0xb8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	25 c0       	rjmp	.+74     	; 0xb8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	23 c0       	rjmp	.+70     	; 0xb8 <__bad_interrupt>
  72:	00 00       	nop
  74:	ed c0       	rjmp	.+474    	; 0x250 <__vector_29>
  76:	00 00       	nop
  78:	1f c0       	rjmp	.+62     	; 0xb8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1d c0       	rjmp	.+58     	; 0xb8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1b c0       	rjmp	.+54     	; 0xb8 <__bad_interrupt>
  82:	00 00       	nop
  84:	19 c0       	rjmp	.+50     	; 0xb8 <__bad_interrupt>
  86:	00 00       	nop
  88:	17 c0       	rjmp	.+46     	; 0xb8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	15 c0       	rjmp	.+42     	; 0xb8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	13 c0       	rjmp	.+38     	; 0xb8 <__bad_interrupt>
  92:	00 00       	nop
  94:	11 c0       	rjmp	.+34     	; 0xb8 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_clear_bss>:
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	01 c0       	rjmp	.+2      	; 0xae <.do_clear_bss_start>

000000ac <.do_clear_bss_loop>:
  ac:	1d 92       	st	X+, r1

000000ae <.do_clear_bss_start>:
  ae:	a1 32       	cpi	r26, 0x21	; 33
  b0:	b2 07       	cpc	r27, r18
  b2:	e1 f7       	brne	.-8      	; 0xac <.do_clear_bss_loop>
  b4:	82 d0       	rcall	.+260    	; 0x1ba <main>
  b6:	6c c2       	rjmp	.+1240   	; 0x590 <_exit>

000000b8 <__bad_interrupt>:
  b8:	a3 cf       	rjmp	.-186    	; 0x0 <__vectors>

000000ba <setupPWM>:
			TIFR3|=0x01; //reset overflow flag by writing a 1 to TOV2 bit
			i+=1;
			//equivalent; TIFR2 |= _BV(TOV2)
		}
	}
	TCCR3B&=0b11111000; //disable timer 2
  ba:	bc 01       	movw	r22, r24
  bc:	84 b5       	in	r24, 0x24	; 36
  be:	83 68       	ori	r24, 0x83	; 131
  c0:	84 bd       	out	0x24, r24	; 36
  c2:	85 b5       	in	r24, 0x25	; 37
  c4:	83 60       	ori	r24, 0x03	; 3
  c6:	85 bd       	out	0x25, r24	; 37
  c8:	07 2e       	mov	r0, r23
  ca:	00 0c       	add	r0, r0
  cc:	88 0b       	sbc	r24, r24
  ce:	99 0b       	sbc	r25, r25
  d0:	70 d1       	rcall	.+736    	; 0x3b2 <__floatsisf>
  d2:	23 e3       	ldi	r18, 0x33	; 51
  d4:	33 e3       	ldi	r19, 0x33	; 51
  d6:	43 e2       	ldi	r20, 0x23	; 35
  d8:	50 e4       	ldi	r21, 0x40	; 64
  da:	cf d1       	rcall	.+926    	; 0x47a <__mulsf3>
  dc:	3c d1       	rcall	.+632    	; 0x356 <__fixunssfsi>
  de:	67 bd       	out	0x27, r22	; 39
  e0:	85 b1       	in	r24, 0x05	; 5
  e2:	80 7f       	andi	r24, 0xF0	; 240
  e4:	85 b9       	out	0x05, r24	; 5
  e6:	08 95       	ret

000000e8 <setupISR>:
  e8:	ea 9a       	sbi	0x1d, 2	; 29
  ea:	e9 e6       	ldi	r30, 0x69	; 105
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 63       	ori	r24, 0x30	; 48
  f2:	80 83       	st	Z, r24
  f4:	08 95       	ret

000000f6 <setupADC>:
  f6:	ea e7       	ldi	r30, 0x7A	; 122
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	8d 68       	ori	r24, 0x8D	; 141
  fe:	80 83       	st	Z, r24
 100:	ec e7       	ldi	r30, 0x7C	; 124
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	81 64       	ori	r24, 0x41	; 65
 108:	80 83       	st	Z, r24
 10a:	80 81       	ld	r24, Z
 10c:	81 7e       	andi	r24, 0xE1	; 225
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <motorControl>:
 112:	26 2f       	mov	r18, r22
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <_edata>
 11a:	43 70       	andi	r20, 0x03	; 3
 11c:	50 e0       	ldi	r21, 0x00	; 0
 11e:	42 17       	cp	r20, r18
 120:	53 07       	cpc	r21, r19
 122:	81 f0       	breq	.+32     	; 0x144 <motorControl+0x32>
 124:	45 b1       	in	r20, 0x05	; 5
 126:	40 7f       	andi	r20, 0xF0	; 240
 128:	45 b9       	out	0x05, r20	; 5
 12a:	45 b1       	in	r20, 0x05	; 5
 12c:	20 95       	com	r18
 12e:	30 95       	com	r19
 130:	23 70       	andi	r18, 0x03	; 3
 132:	33 27       	eor	r19, r19
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	22 0f       	add	r18, r18
 13a:	33 1f       	adc	r19, r19
 13c:	24 2b       	or	r18, r20
 13e:	25 b9       	out	0x05, r18	; 5
 140:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 144:	bc 01       	movw	r22, r24
 146:	99 0f       	add	r25, r25
 148:	88 0b       	sbc	r24, r24
 14a:	99 0b       	sbc	r25, r25
 14c:	32 d1       	rcall	.+612    	; 0x3b2 <__floatsisf>
 14e:	23 e3       	ldi	r18, 0x33	; 51
 150:	33 e3       	ldi	r19, 0x33	; 51
 152:	43 e2       	ldi	r20, 0x23	; 35
 154:	50 e4       	ldi	r21, 0x40	; 64
 156:	91 d1       	rcall	.+802    	; 0x47a <__mulsf3>
 158:	fe d0       	rcall	.+508    	; 0x356 <__fixunssfsi>
 15a:	67 bd       	out	0x27, r22	; 39
 15c:	08 95       	ret

0000015e <initTimer1>:
 15e:	e1 e8       	ldi	r30, 0x81	; 129
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	88 60       	ori	r24, 0x08	; 8
 166:	80 83       	st	Z, r24
 168:	88 ee       	ldi	r24, 0xE8	; 232
 16a:	93 e0       	ldi	r25, 0x03	; 3
 16c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 170:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 174:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 178:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 17c:	08 95       	ret

0000017e <mTimer2>:
 17e:	ac 01       	movw	r20, r24
 180:	e1 eb       	ldi	r30, 0xB1	; 177
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	90 81       	ld	r25, Z
 186:	93 60       	ori	r25, 0x03	; 3
 188:	90 83       	st	Z, r25
 18a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 18e:	b8 99       	sbic	0x17, 0	; 23
 190:	b8 9a       	sbi	0x17, 0	; 23
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	05 c0       	rjmp	.+10     	; 0x1a2 <mTimer2+0x24>
 198:	b8 9b       	sbis	0x17, 0	; 23
 19a:	fe cf       	rjmp	.-4      	; 0x198 <mTimer2+0x1a>
 19c:	b8 9a       	sbi	0x17, 0	; 23
 19e:	2f 5f       	subi	r18, 0xFF	; 255
 1a0:	3f 4f       	sbci	r19, 0xFF	; 255
 1a2:	24 17       	cp	r18, r20
 1a4:	35 07       	cpc	r19, r21
 1a6:	1c f4       	brge	.+6      	; 0x1ae <mTimer2+0x30>
 1a8:	b8 9b       	sbis	0x17, 0	; 23
 1aa:	f6 cf       	rjmp	.-20     	; 0x198 <mTimer2+0x1a>
 1ac:	f7 cf       	rjmp	.-18     	; 0x19c <mTimer2+0x1e>
 1ae:	e1 eb       	ldi	r30, 0xB1	; 177
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	80 81       	ld	r24, Z
 1b4:	88 7f       	andi	r24, 0xF8	; 248
 1b6:	80 83       	st	Z, r24
 1b8:	08 95       	ret

000001ba <main>:
 1ba:	e1 e6       	ldi	r30, 0x61	; 97
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 e8       	ldi	r24, 0x80	; 128
 1c0:	80 83       	st	Z, r24
 1c2:	10 82       	st	Z, r1
 1c4:	f8 94       	cli
 1c6:	cb df       	rcall	.-106    	; 0x15e <initTimer1>
 1c8:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 1cc:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 1d0:	8e e1       	ldi	r24, 0x1E	; 30
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	72 df       	rcall	.-284    	; 0xba <setupPWM>
 1d6:	88 df       	rcall	.-240    	; 0xe8 <setupISR>
 1d8:	8e df       	rcall	.-228    	; 0xf6 <setupADC>
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	84 b9       	out	0x04, r24	; 4
 1de:	87 b9       	out	0x07, r24	; 7
 1e0:	80 ef       	ldi	r24, 0xF0	; 240
 1e2:	8a b9       	out	0x0a, r24	; 10
 1e4:	10 ba       	out	0x10, r1	; 16
 1e6:	78 94       	sei
 1e8:	85 b1       	in	r24, 0x05	; 5
 1ea:	80 7f       	andi	r24, 0xF0	; 240
 1ec:	85 b9       	out	0x05, r24	; 5
 1ee:	8a ea       	ldi	r24, 0xAA	; 170
 1f0:	88 b9       	out	0x08, r24	; 8
 1f2:	80 ed       	ldi	r24, 0xD0	; 208
 1f4:	97 e0       	ldi	r25, 0x07	; 7
 1f6:	c3 df       	rcall	.-122    	; 0x17e <mTimer2>
 1f8:	18 b8       	out	0x08, r1	; 8
 1fa:	80 ed       	ldi	r24, 0xD0	; 208
 1fc:	97 e0       	ldi	r25, 0x07	; 7
 1fe:	bf df       	rcall	.-130    	; 0x17e <mTimer2>
 200:	62 e0       	ldi	r22, 0x02	; 2
 202:	8e e1       	ldi	r24, 0x1E	; 30
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	85 df       	rcall	.-246    	; 0x112 <motorControl>
 208:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <ADC_RESET>
 20c:	ff cf       	rjmp	.-2      	; 0x20c <main+0x52>

0000020e <__vector_3>:
}
/**********INTERRUPT SERVICE ROUTINES**********/
/*sensor 3: 2nt Optical Reflective, Active HIGH starts AD conversion*/
ISR(INT2_vect){ //unused --ODA
 20e:	1f 92       	push	r1
 210:	0f 92       	push	r0
 212:	0f b6       	in	r0, 0x3f	; 63
 214:	0f 92       	push	r0
 216:	11 24       	eor	r1, r1
 218:	0b b6       	in	r0, 0x3b	; 59
 21a:	0f 92       	push	r0
 21c:	8f 93       	push	r24
 21e:	9f 93       	push	r25
 220:	ef 93       	push	r30
 222:	ff 93       	push	r31
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	lowADC=0xFFFF;
 224:	8f ef       	ldi	r24, 0xFF	; 255
 226:	9f ef       	ldi	r25, 0xFF	; 255
 228:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <lowADC+0x1>
 22c:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <lowADC>
	ADCSRA|= _BV(ADSC); //trigger ADC (i.e. begin ADC conversion)
 230:	ea e7       	ldi	r30, 0x7A	; 122
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	80 81       	ld	r24, Z
 236:	80 64       	ori	r24, 0x40	; 64
 238:	80 83       	st	Z, r24
}
 23a:	ff 91       	pop	r31
 23c:	ef 91       	pop	r30
 23e:	9f 91       	pop	r25
 240:	8f 91       	pop	r24
 242:	0f 90       	pop	r0
 244:	0b be       	out	0x3b, r0	; 59
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <__vector_29>:
ISR(ADC_vect){ //ADCResult is left-adjusted (i.e. the upper most byte is taken; 2 LSB' are discarded)
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	0b b6       	in	r0, 0x3b	; 59
 25c:	0f 92       	push	r0
 25e:	2f 93       	push	r18
 260:	3f 93       	push	r19
 262:	8f 93       	push	r24
 264:	9f 93       	push	r25
 266:	ef 93       	push	r30
 268:	ff 93       	push	r31
	if (lowADC>ADC){
 26a:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 26e:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 272:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <lowADC>
 276:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <lowADC+0x1>
 27a:	28 17       	cp	r18, r24
 27c:	39 07       	cpc	r19, r25
 27e:	a8 f4       	brcc	.+42     	; 0x2aa <__vector_29+0x5a>
		lowADC=ADC; //ADC is a combination of ADCH and ADCL
 280:	e8 e7       	ldi	r30, 0x78	; 120
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	80 81       	ld	r24, Z
 286:	91 81       	ldd	r25, Z+1	; 0x01
 288:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <lowADC+0x1>
 28c:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <lowADC>
		highByteADC=ADCH;
 290:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <highByteADC+0x1>
 29a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <highByteADC>
		lowByteADC=ADCL;
 29e:	80 81       	ld	r24, Z
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <lowByteADC+0x1>
 2a6:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <lowByteADC>
	}
	if ((PIND&0b00000100)==0b00000100) ADCSRA|= _BV(ADSC); //if there is still an object keep initializing ADC conversions
 2aa:	4a 9b       	sbis	0x09, 2	; 9
 2ac:	06 c0       	rjmp	.+12     	; 0x2ba <__vector_29+0x6a>
 2ae:	ea e7       	ldi	r30, 0x7A	; 122
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	80 64       	ori	r24, 0x40	; 64
 2b6:	80 83       	st	Z, r24
 2b8:	0e c0       	rjmp	.+28     	; 0x2d6 <__vector_29+0x86>
	else{
		PORTC=lowByteADC;
 2ba:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <lowByteADC>
 2be:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <lowByteADC+0x1>
 2c2:	88 b9       	out	0x08, r24	; 8
		PORTD=((highByteADC&0b00000011)<< 5); //0b00100000 if true //green green
 2c4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <highByteADC>
 2c8:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <highByteADC+0x1>
 2cc:	83 70       	andi	r24, 0x03	; 3
 2ce:	82 95       	swap	r24
 2d0:	88 0f       	add	r24, r24
 2d2:	80 7e       	andi	r24, 0xE0	; 224
 2d4:	8b b9       	out	0x0b, r24	; 11
	}
}
 2d6:	ff 91       	pop	r31
 2d8:	ef 91       	pop	r30
 2da:	9f 91       	pop	r25
 2dc:	8f 91       	pop	r24
 2de:	3f 91       	pop	r19
 2e0:	2f 91       	pop	r18
 2e2:	0f 90       	pop	r0
 2e4:	0b be       	out	0x3b, r0	; 59
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <__vector_7>:
ISR(INT6_vect){
 2f0:	1f 92       	push	r1
 2f2:	0f 92       	push	r0
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	0f 92       	push	r0
 2f8:	11 24       	eor	r1, r1
 2fa:	0b b6       	in	r0, 0x3b	; 59
 2fc:	0f 92       	push	r0
 2fe:	2f 93       	push	r18
 300:	3f 93       	push	r19
 302:	4f 93       	push	r20
 304:	5f 93       	push	r21
 306:	6f 93       	push	r22
 308:	7f 93       	push	r23
 30a:	8f 93       	push	r24
 30c:	9f 93       	push	r25
 30e:	af 93       	push	r26
 310:	bf 93       	push	r27
 312:	ef 93       	push	r30
 314:	ff 93       	push	r31
	ADC_RESET=1;
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ADC_RESET>
	mTimer2(15); //debounce period
 31c:	8f e0       	ldi	r24, 0x0F	; 15
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	2e df       	rcall	.-420    	; 0x17e <mTimer2>
	while((PINE & 0b01000000)==0b01000000)mTimer2(25); //while switch is still pressed
 322:	66 9b       	sbis	0x0c, 6	; 12
 324:	05 c0       	rjmp	.+10     	; 0x330 <__vector_7+0x40>
 326:	89 e1       	ldi	r24, 0x19	; 25
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	29 df       	rcall	.-430    	; 0x17e <mTimer2>
 32c:	66 99       	sbic	0x0c, 6	; 12
 32e:	fb cf       	rjmp	.-10     	; 0x326 <__vector_7+0x36>
}
 330:	ff 91       	pop	r31
 332:	ef 91       	pop	r30
 334:	bf 91       	pop	r27
 336:	af 91       	pop	r26
 338:	9f 91       	pop	r25
 33a:	8f 91       	pop	r24
 33c:	7f 91       	pop	r23
 33e:	6f 91       	pop	r22
 340:	5f 91       	pop	r21
 342:	4f 91       	pop	r20
 344:	3f 91       	pop	r19
 346:	2f 91       	pop	r18
 348:	0f 90       	pop	r0
 34a:	0b be       	out	0x3b, r0	; 59
 34c:	0f 90       	pop	r0
 34e:	0f be       	out	0x3f, r0	; 63
 350:	0f 90       	pop	r0
 352:	1f 90       	pop	r1
 354:	18 95       	reti

00000356 <__fixunssfsi>:
 356:	70 d0       	rcall	.+224    	; 0x438 <__fp_splitA>
 358:	88 f0       	brcs	.+34     	; 0x37c <__fixunssfsi+0x26>
 35a:	9f 57       	subi	r25, 0x7F	; 127
 35c:	90 f0       	brcs	.+36     	; 0x382 <__fixunssfsi+0x2c>
 35e:	b9 2f       	mov	r27, r25
 360:	99 27       	eor	r25, r25
 362:	b7 51       	subi	r27, 0x17	; 23
 364:	a0 f0       	brcs	.+40     	; 0x38e <__fixunssfsi+0x38>
 366:	d1 f0       	breq	.+52     	; 0x39c <__fixunssfsi+0x46>
 368:	66 0f       	add	r22, r22
 36a:	77 1f       	adc	r23, r23
 36c:	88 1f       	adc	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	1a f0       	brmi	.+6      	; 0x378 <__fixunssfsi+0x22>
 372:	ba 95       	dec	r27
 374:	c9 f7       	brne	.-14     	; 0x368 <__fixunssfsi+0x12>
 376:	12 c0       	rjmp	.+36     	; 0x39c <__fixunssfsi+0x46>
 378:	b1 30       	cpi	r27, 0x01	; 1
 37a:	81 f0       	breq	.+32     	; 0x39c <__fixunssfsi+0x46>
 37c:	77 d0       	rcall	.+238    	; 0x46c <__fp_zero>
 37e:	b1 e0       	ldi	r27, 0x01	; 1
 380:	08 95       	ret
 382:	74 c0       	rjmp	.+232    	; 0x46c <__fp_zero>
 384:	67 2f       	mov	r22, r23
 386:	78 2f       	mov	r23, r24
 388:	88 27       	eor	r24, r24
 38a:	b8 5f       	subi	r27, 0xF8	; 248
 38c:	39 f0       	breq	.+14     	; 0x39c <__fixunssfsi+0x46>
 38e:	b9 3f       	cpi	r27, 0xF9	; 249
 390:	cc f3       	brlt	.-14     	; 0x384 <__fixunssfsi+0x2e>
 392:	86 95       	lsr	r24
 394:	77 95       	ror	r23
 396:	67 95       	ror	r22
 398:	b3 95       	inc	r27
 39a:	d9 f7       	brne	.-10     	; 0x392 <__fixunssfsi+0x3c>
 39c:	3e f4       	brtc	.+14     	; 0x3ac <__fixunssfsi+0x56>
 39e:	90 95       	com	r25
 3a0:	80 95       	com	r24
 3a2:	70 95       	com	r23
 3a4:	61 95       	neg	r22
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <__floatunsisf>:
 3ae:	e8 94       	clt
 3b0:	09 c0       	rjmp	.+18     	; 0x3c4 <__floatsisf+0x12>

000003b2 <__floatsisf>:
 3b2:	97 fb       	bst	r25, 7
 3b4:	3e f4       	brtc	.+14     	; 0x3c4 <__floatsisf+0x12>
 3b6:	90 95       	com	r25
 3b8:	80 95       	com	r24
 3ba:	70 95       	com	r23
 3bc:	61 95       	neg	r22
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	8f 4f       	sbci	r24, 0xFF	; 255
 3c2:	9f 4f       	sbci	r25, 0xFF	; 255
 3c4:	99 23       	and	r25, r25
 3c6:	a9 f0       	breq	.+42     	; 0x3f2 <__floatsisf+0x40>
 3c8:	f9 2f       	mov	r31, r25
 3ca:	96 e9       	ldi	r25, 0x96	; 150
 3cc:	bb 27       	eor	r27, r27
 3ce:	93 95       	inc	r25
 3d0:	f6 95       	lsr	r31
 3d2:	87 95       	ror	r24
 3d4:	77 95       	ror	r23
 3d6:	67 95       	ror	r22
 3d8:	b7 95       	ror	r27
 3da:	f1 11       	cpse	r31, r1
 3dc:	f8 cf       	rjmp	.-16     	; 0x3ce <__floatsisf+0x1c>
 3de:	fa f4       	brpl	.+62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e0:	bb 0f       	add	r27, r27
 3e2:	11 f4       	brne	.+4      	; 0x3e8 <__floatsisf+0x36>
 3e4:	60 ff       	sbrs	r22, 0
 3e6:	1b c0       	rjmp	.+54     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e8:	6f 5f       	subi	r22, 0xFF	; 255
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	16 c0       	rjmp	.+44     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f2:	88 23       	and	r24, r24
 3f4:	11 f0       	breq	.+4      	; 0x3fa <__floatsisf+0x48>
 3f6:	96 e9       	ldi	r25, 0x96	; 150
 3f8:	11 c0       	rjmp	.+34     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fa:	77 23       	and	r23, r23
 3fc:	21 f0       	breq	.+8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fe:	9e e8       	ldi	r25, 0x8E	; 142
 400:	87 2f       	mov	r24, r23
 402:	76 2f       	mov	r23, r22
 404:	05 c0       	rjmp	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	66 23       	and	r22, r22
 408:	71 f0       	breq	.+28     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 40a:	96 e8       	ldi	r25, 0x86	; 134
 40c:	86 2f       	mov	r24, r22
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	60 e0       	ldi	r22, 0x00	; 0
 412:	2a f0       	brmi	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	9a 95       	dec	r25
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	da f7       	brpl	.-10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41e:	88 0f       	add	r24, r24
 420:	96 95       	lsr	r25
 422:	87 95       	ror	r24
 424:	97 f9       	bld	r25, 7
 426:	08 95       	ret

00000428 <__fp_split3>:
 428:	57 fd       	sbrc	r21, 7
 42a:	90 58       	subi	r25, 0x80	; 128
 42c:	44 0f       	add	r20, r20
 42e:	55 1f       	adc	r21, r21
 430:	59 f0       	breq	.+22     	; 0x448 <__fp_splitA+0x10>
 432:	5f 3f       	cpi	r21, 0xFF	; 255
 434:	71 f0       	breq	.+28     	; 0x452 <__fp_splitA+0x1a>
 436:	47 95       	ror	r20

00000438 <__fp_splitA>:
 438:	88 0f       	add	r24, r24
 43a:	97 fb       	bst	r25, 7
 43c:	99 1f       	adc	r25, r25
 43e:	61 f0       	breq	.+24     	; 0x458 <__fp_splitA+0x20>
 440:	9f 3f       	cpi	r25, 0xFF	; 255
 442:	79 f0       	breq	.+30     	; 0x462 <__fp_splitA+0x2a>
 444:	87 95       	ror	r24
 446:	08 95       	ret
 448:	12 16       	cp	r1, r18
 44a:	13 06       	cpc	r1, r19
 44c:	14 06       	cpc	r1, r20
 44e:	55 1f       	adc	r21, r21
 450:	f2 cf       	rjmp	.-28     	; 0x436 <__fp_split3+0xe>
 452:	46 95       	lsr	r20
 454:	f1 df       	rcall	.-30     	; 0x438 <__fp_splitA>
 456:	08 c0       	rjmp	.+16     	; 0x468 <__fp_splitA+0x30>
 458:	16 16       	cp	r1, r22
 45a:	17 06       	cpc	r1, r23
 45c:	18 06       	cpc	r1, r24
 45e:	99 1f       	adc	r25, r25
 460:	f1 cf       	rjmp	.-30     	; 0x444 <__fp_splitA+0xc>
 462:	86 95       	lsr	r24
 464:	71 05       	cpc	r23, r1
 466:	61 05       	cpc	r22, r1
 468:	08 94       	sec
 46a:	08 95       	ret

0000046c <__fp_zero>:
 46c:	e8 94       	clt

0000046e <__fp_szero>:
 46e:	bb 27       	eor	r27, r27
 470:	66 27       	eor	r22, r22
 472:	77 27       	eor	r23, r23
 474:	cb 01       	movw	r24, r22
 476:	97 f9       	bld	r25, 7
 478:	08 95       	ret

0000047a <__mulsf3>:
 47a:	0b d0       	rcall	.+22     	; 0x492 <__mulsf3x>
 47c:	78 c0       	rjmp	.+240    	; 0x56e <__fp_round>
 47e:	69 d0       	rcall	.+210    	; 0x552 <__fp_pscA>
 480:	28 f0       	brcs	.+10     	; 0x48c <__mulsf3+0x12>
 482:	6e d0       	rcall	.+220    	; 0x560 <__fp_pscB>
 484:	18 f0       	brcs	.+6      	; 0x48c <__mulsf3+0x12>
 486:	95 23       	and	r25, r21
 488:	09 f0       	breq	.+2      	; 0x48c <__mulsf3+0x12>
 48a:	5a c0       	rjmp	.+180    	; 0x540 <__fp_inf>
 48c:	5f c0       	rjmp	.+190    	; 0x54c <__fp_nan>
 48e:	11 24       	eor	r1, r1
 490:	ee cf       	rjmp	.-36     	; 0x46e <__fp_szero>

00000492 <__mulsf3x>:
 492:	ca df       	rcall	.-108    	; 0x428 <__fp_split3>
 494:	a0 f3       	brcs	.-24     	; 0x47e <__mulsf3+0x4>

00000496 <__mulsf3_pse>:
 496:	95 9f       	mul	r25, r21
 498:	d1 f3       	breq	.-12     	; 0x48e <__mulsf3+0x14>
 49a:	95 0f       	add	r25, r21
 49c:	50 e0       	ldi	r21, 0x00	; 0
 49e:	55 1f       	adc	r21, r21
 4a0:	62 9f       	mul	r22, r18
 4a2:	f0 01       	movw	r30, r0
 4a4:	72 9f       	mul	r23, r18
 4a6:	bb 27       	eor	r27, r27
 4a8:	f0 0d       	add	r31, r0
 4aa:	b1 1d       	adc	r27, r1
 4ac:	63 9f       	mul	r22, r19
 4ae:	aa 27       	eor	r26, r26
 4b0:	f0 0d       	add	r31, r0
 4b2:	b1 1d       	adc	r27, r1
 4b4:	aa 1f       	adc	r26, r26
 4b6:	64 9f       	mul	r22, r20
 4b8:	66 27       	eor	r22, r22
 4ba:	b0 0d       	add	r27, r0
 4bc:	a1 1d       	adc	r26, r1
 4be:	66 1f       	adc	r22, r22
 4c0:	82 9f       	mul	r24, r18
 4c2:	22 27       	eor	r18, r18
 4c4:	b0 0d       	add	r27, r0
 4c6:	a1 1d       	adc	r26, r1
 4c8:	62 1f       	adc	r22, r18
 4ca:	73 9f       	mul	r23, r19
 4cc:	b0 0d       	add	r27, r0
 4ce:	a1 1d       	adc	r26, r1
 4d0:	62 1f       	adc	r22, r18
 4d2:	83 9f       	mul	r24, r19
 4d4:	a0 0d       	add	r26, r0
 4d6:	61 1d       	adc	r22, r1
 4d8:	22 1f       	adc	r18, r18
 4da:	74 9f       	mul	r23, r20
 4dc:	33 27       	eor	r19, r19
 4de:	a0 0d       	add	r26, r0
 4e0:	61 1d       	adc	r22, r1
 4e2:	23 1f       	adc	r18, r19
 4e4:	84 9f       	mul	r24, r20
 4e6:	60 0d       	add	r22, r0
 4e8:	21 1d       	adc	r18, r1
 4ea:	82 2f       	mov	r24, r18
 4ec:	76 2f       	mov	r23, r22
 4ee:	6a 2f       	mov	r22, r26
 4f0:	11 24       	eor	r1, r1
 4f2:	9f 57       	subi	r25, 0x7F	; 127
 4f4:	50 40       	sbci	r21, 0x00	; 0
 4f6:	8a f0       	brmi	.+34     	; 0x51a <__mulsf3_pse+0x84>
 4f8:	e1 f0       	breq	.+56     	; 0x532 <__mulsf3_pse+0x9c>
 4fa:	88 23       	and	r24, r24
 4fc:	4a f0       	brmi	.+18     	; 0x510 <__mulsf3_pse+0x7a>
 4fe:	ee 0f       	add	r30, r30
 500:	ff 1f       	adc	r31, r31
 502:	bb 1f       	adc	r27, r27
 504:	66 1f       	adc	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	88 1f       	adc	r24, r24
 50a:	91 50       	subi	r25, 0x01	; 1
 50c:	50 40       	sbci	r21, 0x00	; 0
 50e:	a9 f7       	brne	.-22     	; 0x4fa <__mulsf3_pse+0x64>
 510:	9e 3f       	cpi	r25, 0xFE	; 254
 512:	51 05       	cpc	r21, r1
 514:	70 f0       	brcs	.+28     	; 0x532 <__mulsf3_pse+0x9c>
 516:	14 c0       	rjmp	.+40     	; 0x540 <__fp_inf>
 518:	aa cf       	rjmp	.-172    	; 0x46e <__fp_szero>
 51a:	5f 3f       	cpi	r21, 0xFF	; 255
 51c:	ec f3       	brlt	.-6      	; 0x518 <__mulsf3_pse+0x82>
 51e:	98 3e       	cpi	r25, 0xE8	; 232
 520:	dc f3       	brlt	.-10     	; 0x518 <__mulsf3_pse+0x82>
 522:	86 95       	lsr	r24
 524:	77 95       	ror	r23
 526:	67 95       	ror	r22
 528:	b7 95       	ror	r27
 52a:	f7 95       	ror	r31
 52c:	e7 95       	ror	r30
 52e:	9f 5f       	subi	r25, 0xFF	; 255
 530:	c1 f7       	brne	.-16     	; 0x522 <__mulsf3_pse+0x8c>
 532:	fe 2b       	or	r31, r30
 534:	88 0f       	add	r24, r24
 536:	91 1d       	adc	r25, r1
 538:	96 95       	lsr	r25
 53a:	87 95       	ror	r24
 53c:	97 f9       	bld	r25, 7
 53e:	08 95       	ret

00000540 <__fp_inf>:
 540:	97 f9       	bld	r25, 7
 542:	9f 67       	ori	r25, 0x7F	; 127
 544:	80 e8       	ldi	r24, 0x80	; 128
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	60 e0       	ldi	r22, 0x00	; 0
 54a:	08 95       	ret

0000054c <__fp_nan>:
 54c:	9f ef       	ldi	r25, 0xFF	; 255
 54e:	80 ec       	ldi	r24, 0xC0	; 192
 550:	08 95       	ret

00000552 <__fp_pscA>:
 552:	00 24       	eor	r0, r0
 554:	0a 94       	dec	r0
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	09 06       	cpc	r0, r25
 55e:	08 95       	ret

00000560 <__fp_pscB>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	12 16       	cp	r1, r18
 566:	13 06       	cpc	r1, r19
 568:	14 06       	cpc	r1, r20
 56a:	05 06       	cpc	r0, r21
 56c:	08 95       	ret

0000056e <__fp_round>:
 56e:	09 2e       	mov	r0, r25
 570:	03 94       	inc	r0
 572:	00 0c       	add	r0, r0
 574:	11 f4       	brne	.+4      	; 0x57a <__fp_round+0xc>
 576:	88 23       	and	r24, r24
 578:	52 f0       	brmi	.+20     	; 0x58e <__fp_round+0x20>
 57a:	bb 0f       	add	r27, r27
 57c:	40 f4       	brcc	.+16     	; 0x58e <__fp_round+0x20>
 57e:	bf 2b       	or	r27, r31
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0x18>
 582:	60 ff       	sbrs	r22, 0
 584:	04 c0       	rjmp	.+8      	; 0x58e <__fp_round+0x20>
 586:	6f 5f       	subi	r22, 0xFF	; 255
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	08 95       	ret

00000590 <_exit>:
 590:	f8 94       	cli

00000592 <__stop_program>:
 592:	ff cf       	rjmp	.-2      	; 0x592 <__stop_program>
