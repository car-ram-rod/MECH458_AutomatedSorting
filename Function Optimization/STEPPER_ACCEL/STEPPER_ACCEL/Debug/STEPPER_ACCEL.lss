
STEPPER_ACCEL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000055a  000005ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800108  00800108  000005f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000628  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000668  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001365  00000000  00000000  000006f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cfd  00000000  00000000  00001a5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000076e  00000000  00000000  0000275a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  00002ec8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d6  00000000  00000000  00003034  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000070f  00000000  00000000  0000370a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003e19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c2       	rjmp	.+1228   	; 0x4ea <__vector_7>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	ea e5       	ldi	r30, 0x5A	; 90
  ac:	f5 e0       	ldi	r31, 0x05	; 5
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 30       	cpi	r26, 0x08	; 8
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a8 e0       	ldi	r26, 0x08	; 8
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ac 30       	cpi	r26, 0x0C	; 12
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	59 d1       	rcall	.+690    	; 0x382 <main>
  d0:	42 c2       	rjmp	.+1156   	; 0x556 <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <initTimer1>:
			TIFR1 |= _BV(OCF1A);
			i++; //increment loop counter
			/*Timer resets automatically due to WGM settings*/
		} //if end
	}//while end
	TCCR1B &= 0b11111000; //shut off timer 1
  d4:	e1 e8       	ldi	r30, 0x81	; 129
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 60       	ori	r24, 0x08	; 8
  dc:	80 83       	st	Z, r24
  de:	88 ee       	ldi	r24, 0xE8	; 232
  e0:	93 e0       	ldi	r25, 0x03	; 3
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f2:	08 95       	ret

000000f4 <timer2Init>:
/*at a clock frequency of 8MHz this is a 1.024ms timer for each while loop cycle*/
/*e.g. (32/8MHz)x(0xFF=256)=0.001024s=1.024ms*/
void timer2Init(void){
	//sei(); enables all interrupts thus following is unneccessary 
	//TIMSK2 |= _BV(TOIE2); //enable Timer/Counter 2 Overflow interrupt; sets TOV2 bit in TIFR2 register upon overflow
	TCCR2A=0; //Mode 0:normal port operation; keeps counting no matter what; means you have to reset the TOV2 flag
  f4:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  f8:	08 95       	ret

000000fa <mTimer2>:
	//TOP=0xFF; Update is immediate
	//TCCR2B |= _BV(CS20) | _BV(CS21); //clock pre-scalar (clk/32); starts timer
}
void mTimer2(int count){
  fa:	ac 01       	movw	r20, r24
	int i=0;
	TCCR2B |= _BV(CS20) | _BV(CS21); //clock pre-scalar (clk/32)
  fc:	e1 eb       	ldi	r30, 0xB1	; 177
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	90 81       	ld	r25, Z
 102:	93 60       	ori	r25, 0x03	; 3
 104:	90 83       	st	Z, r25
	TCNT2=0x00; //set timer equal to zero
 106:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	if ((TIFR2 & 0x01) == 0x01)TIFR2|=0x01; //if TOV2 flag is set to 1, reset to 0 by setting bit to 1 (confused?)
 10a:	b8 99       	sbic	0x17, 0	; 23
 10c:	b8 9a       	sbi	0x17, 0	; 23
	//TIMSK2 |= _BV(TOIE2); //enable Timer/Counter 2 Overflow interrupt; sets TOV2 bit in TIFR2 register upon overflow
	TCCR2A=0; //Mode 0:normal port operation; keeps counting no matter what; means you have to reset the TOV2 flag
	//TOP=0xFF; Update is immediate
	//TCCR2B |= _BV(CS20) | _BV(CS21); //clock pre-scalar (clk/32); starts timer
}
void mTimer2(int count){
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	05 c0       	rjmp	.+10     	; 0x11e <mTimer2+0x24>
	int i=0;
	TCCR2B |= _BV(CS20) | _BV(CS21); //clock pre-scalar (clk/32)
	TCNT2=0x00; //set timer equal to zero
	if ((TIFR2 & 0x01) == 0x01)TIFR2|=0x01; //if TOV2 flag is set to 1, reset to 0 by setting bit to 1 (confused?)
	while (i<count){ //iterate through given count
		if ((TIFR2 & 0x01) == 0x01){ //if overflow has occurred in counter
 114:	b8 9b       	sbis	0x17, 0	; 23
 116:	fe cf       	rjmp	.-4      	; 0x114 <mTimer2+0x1a>
			TIFR2|=0x01; //reset overflow flag by writing a 1 to TOV2 bit
 118:	b8 9a       	sbi	0x17, 0	; 23
			i+=1;
 11a:	2f 5f       	subi	r18, 0xFF	; 255
 11c:	3f 4f       	sbci	r19, 0xFF	; 255
void mTimer2(int count){
	int i=0;
	TCCR2B |= _BV(CS20) | _BV(CS21); //clock pre-scalar (clk/32)
	TCNT2=0x00; //set timer equal to zero
	if ((TIFR2 & 0x01) == 0x01)TIFR2|=0x01; //if TOV2 flag is set to 1, reset to 0 by setting bit to 1 (confused?)
	while (i<count){ //iterate through given count
 11e:	24 17       	cp	r18, r20
 120:	35 07       	cpc	r19, r21
 122:	1c f4       	brge	.+6      	; 0x12a <mTimer2+0x30>
		if ((TIFR2 & 0x01) == 0x01){ //if overflow has occurred in counter
 124:	b8 9b       	sbis	0x17, 0	; 23
 126:	f6 cf       	rjmp	.-20     	; 0x114 <mTimer2+0x1a>
 128:	f7 cf       	rjmp	.-18     	; 0x118 <mTimer2+0x1e>
			TIFR2|=0x01; //reset overflow flag by writing a 1 to TOV2 bit
			i+=1;
			//equivalent; TIFR2 |= _BV(TOV2)
		}
	}
	TCCR2B&=0b11111000; //disable timer 2
 12a:	e1 eb       	ldi	r30, 0xB1	; 177
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	88 7f       	andi	r24, 0xF8	; 248
 132:	80 83       	st	Z, r24
 134:	08 95       	ret

00000136 <stepperControl>:
	if(((PINB & 0b00001100) >> 2) != d){ //if current direction doesn't match new direction
		PORTB &= 0b11110011; //stop motor
		PORTB |= 0b0011 | ((d & 0b11) << 2); //start motor in specified direction
	}
	dutyCycle = s*2.55;
	OCR0A = dutyCycle;//set duty cycle
 136:	8f 92       	push	r8
 138:	9f 92       	push	r9
 13a:	af 92       	push	r10
 13c:	bf 92       	push	r11
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	7b 01       	movw	r14, r22
 150:	5a 01       	movw	r10, r20
 152:	da 01       	movw	r26, r20
 154:	ed 91       	ld	r30, X+
 156:	fc 91       	ld	r31, X
 158:	9c 01       	movw	r18, r24
 15a:	99 23       	and	r25, r25
 15c:	24 f4       	brge	.+8      	; 0x166 <stepperControl+0x30>
 15e:	22 27       	eor	r18, r18
 160:	33 27       	eor	r19, r19
 162:	28 1b       	sub	r18, r24
 164:	39 0b       	sbc	r19, r25
 166:	49 01       	movw	r8, r18
 168:	20 31       	cpi	r18, 0x10	; 16
 16a:	31 05       	cpc	r19, r1
 16c:	38 f4       	brcc	.+14     	; 0x17c <stepperControl+0x46>
 16e:	36 95       	lsr	r19
 170:	27 95       	ror	r18
 172:	02 2f       	mov	r16, r18
 174:	3f e0       	ldi	r19, 0x0F	; 15
 176:	53 2f       	mov	r21, r19
 178:	52 1b       	sub	r21, r18
 17a:	02 c0       	rjmp	.+4      	; 0x180 <stepperControl+0x4a>
 17c:	08 e0       	ldi	r16, 0x08	; 8
 17e:	57 e0       	ldi	r21, 0x07	; 7
 180:	99 23       	and	r25, r25
 182:	24 f4       	brge	.+8      	; 0x18c <stepperControl+0x56>
 184:	cc 24       	eor	r12, r12
 186:	ca 94       	dec	r12
 188:	dc 2c       	mov	r13, r12
 18a:	03 c0       	rjmp	.+6      	; 0x192 <stepperControl+0x5c>
 18c:	cc 24       	eor	r12, r12
 18e:	c3 94       	inc	r12
 190:	d1 2c       	mov	r13, r1
 192:	ec 0d       	add	r30, r12
 194:	fd 1d       	adc	r31, r13
 196:	e4 30       	cpi	r30, 0x04	; 4
 198:	f1 05       	cpc	r31, r1
 19a:	39 f0       	breq	.+14     	; 0x1aa <stepperControl+0x74>
 19c:	ef 3f       	cpi	r30, 0xFF	; 255
 19e:	cf ef       	ldi	r28, 0xFF	; 255
 1a0:	fc 07       	cpc	r31, r28
 1a2:	29 f4       	brne	.+10     	; 0x1ae <stepperControl+0x78>
 1a4:	e3 e0       	ldi	r30, 0x03	; 3
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <stepperControl+0x78>
 1aa:	e0 e0       	ldi	r30, 0x00	; 0
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	a1 eb       	ldi	r26, 0xB1	; 177
 1b0:	b0 e0       	ldi	r27, 0x00	; 0
 1b2:	2c 91       	ld	r18, X
 1b4:	23 60       	ori	r18, 0x03	; 3
 1b6:	2c 93       	st	X, r18
 1b8:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 1bc:	b8 99       	sbic	0x17, 0	; 23
 1be:	b8 9a       	sbi	0x17, 0	; 23
 1c0:	df 01       	movw	r26, r30
 1c2:	aa 0f       	add	r26, r26
 1c4:	bb 1f       	adc	r27, r27
 1c6:	a0 50       	subi	r26, 0x00	; 0
 1c8:	bf 4f       	sbci	r27, 0xFF	; 255
 1ca:	2c 91       	ld	r18, X
 1cc:	22 b9       	out	0x02, r18	; 2
 1ce:	d2 e0       	ldi	r29, 0x02	; 2
 1d0:	8d 16       	cp	r8, r29
 1d2:	91 04       	cpc	r9, r1
 1d4:	e0 f1       	brcs	.+120    	; 0x24e <stepperControl+0x118>
 1d6:	4f e0       	ldi	r20, 0x0F	; 15
 1d8:	a2 e0       	ldi	r26, 0x02	; 2
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	10 e0       	ldi	r17, 0x00	; 0
 1de:	94 01       	movw	r18, r8
 1e0:	2a 1b       	sub	r18, r26
 1e2:	3b 0b       	sbc	r19, r27
 1e4:	02 17       	cp	r16, r18
 1e6:	13 07       	cpc	r17, r19
 1e8:	20 f4       	brcc	.+8      	; 0x1f2 <stepperControl+0xbc>
 1ea:	54 17       	cp	r21, r20
 1ec:	30 f4       	brcc	.+12     	; 0x1fa <stepperControl+0xc4>
 1ee:	41 50       	subi	r20, 0x01	; 1
 1f0:	07 c0       	rjmp	.+14     	; 0x200 <stepperControl+0xca>
 1f2:	4f 30       	cpi	r20, 0x0F	; 15
 1f4:	20 f4       	brcc	.+8      	; 0x1fe <stepperControl+0xc8>
 1f6:	4f 5f       	subi	r20, 0xFF	; 255
 1f8:	03 c0       	rjmp	.+6      	; 0x200 <stepperControl+0xca>
 1fa:	45 2f       	mov	r20, r21
 1fc:	01 c0       	rjmp	.+2      	; 0x200 <stepperControl+0xca>
 1fe:	4f e0       	ldi	r20, 0x0F	; 15
 200:	ec 0d       	add	r30, r12
 202:	fd 1d       	adc	r31, r13
 204:	e4 30       	cpi	r30, 0x04	; 4
 206:	f1 05       	cpc	r31, r1
 208:	39 f0       	breq	.+14     	; 0x218 <stepperControl+0xe2>
 20a:	ef 3f       	cpi	r30, 0xFF	; 255
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	f2 07       	cpc	r31, r18
 210:	29 f4       	brne	.+10     	; 0x21c <stepperControl+0xe6>
 212:	e3 e0       	ldi	r30, 0x03	; 3
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <stepperControl+0xe6>
 218:	e0 e0       	ldi	r30, 0x00	; 0
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	64 2f       	mov	r22, r20
 21e:	70 e0       	ldi	r23, 0x00	; 0
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	05 c0       	rjmp	.+10     	; 0x230 <stepperControl+0xfa>
 226:	b8 9b       	sbis	0x17, 0	; 23
 228:	03 c0       	rjmp	.+6      	; 0x230 <stepperControl+0xfa>
 22a:	b8 9a       	sbi	0x17, 0	; 23
 22c:	2f 5f       	subi	r18, 0xFF	; 255
 22e:	3f 4f       	sbci	r19, 0xFF	; 255
 230:	26 17       	cp	r18, r22
 232:	37 07       	cpc	r19, r23
 234:	c1 f7       	brne	.-16     	; 0x226 <stepperControl+0xf0>
 236:	9f 01       	movw	r18, r30
 238:	22 0f       	add	r18, r18
 23a:	33 1f       	adc	r19, r19
 23c:	20 50       	subi	r18, 0x00	; 0
 23e:	3f 4f       	sbci	r19, 0xFF	; 255
 240:	e9 01       	movw	r28, r18
 242:	28 81       	ld	r18, Y
 244:	22 b9       	out	0x02, r18	; 2
 246:	11 96       	adiw	r26, 0x01	; 1
 248:	8a 16       	cp	r8, r26
 24a:	9b 06       	cpc	r9, r27
 24c:	40 f6       	brcc	.-112    	; 0x1de <stepperControl+0xa8>
 24e:	a1 eb       	ldi	r26, 0xB1	; 177
 250:	b0 e0       	ldi	r27, 0x00	; 0
 252:	2c 91       	ld	r18, X
 254:	28 7f       	andi	r18, 0xF8	; 248
 256:	2c 93       	st	X, r18
 258:	d5 01       	movw	r26, r10
 25a:	ed 93       	st	X+, r30
 25c:	fc 93       	st	X, r31
 25e:	e7 01       	movw	r28, r14
 260:	28 81       	ld	r18, Y
 262:	39 81       	ldd	r19, Y+1	; 0x01
 264:	82 0f       	add	r24, r18
 266:	93 1f       	adc	r25, r19
 268:	68 ec       	ldi	r22, 0xC8	; 200
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	4d d1       	rcall	.+666    	; 0x508 <__divmodhi4>
 26e:	99 83       	std	Y+1, r25	; 0x01
 270:	88 83       	st	Y, r24
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	1f 91       	pop	r17
 278:	0f 91       	pop	r16
 27a:	ff 90       	pop	r15
 27c:	ef 90       	pop	r14
 27e:	df 90       	pop	r13
 280:	cf 90       	pop	r12
 282:	bf 90       	pop	r11
 284:	af 90       	pop	r10
 286:	9f 90       	pop	r9
 288:	8f 90       	pop	r8
 28a:	08 95       	ret

0000028c <stepperHome>:
 28c:	cf 92       	push	r12
 28e:	df 92       	push	r13
 290:	ef 92       	push	r14
 292:	ff 92       	push	r15
 294:	0f 93       	push	r16
 296:	1f 93       	push	r17
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	8c 01       	movw	r16, r24
 29e:	7b 01       	movw	r14, r22
 2a0:	12 b8       	out	0x02, r1	; 2
 2a2:	c0 e0       	ldi	r28, 0x00	; 0
 2a4:	d0 e0       	ldi	r29, 0x00	; 0
 2a6:	10 c0       	rjmp	.+32     	; 0x2c8 <stepperHome+0x3c>
 2a8:	fe 01       	movw	r30, r28
 2aa:	ee 0f       	add	r30, r30
 2ac:	ff 1f       	adc	r31, r31
 2ae:	e0 50       	subi	r30, 0x00	; 0
 2b0:	ff 4f       	sbci	r31, 0xFF	; 255
 2b2:	80 81       	ld	r24, Z
 2b4:	82 b9       	out	0x02, r24	; 2
 2b6:	8e e1       	ldi	r24, 0x1E	; 30
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	1f df       	rcall	.-450    	; 0xfa <mTimer2>
 2bc:	21 96       	adiw	r28, 0x01	; 1
 2be:	c4 30       	cpi	r28, 0x04	; 4
 2c0:	d1 05       	cpc	r29, r1
 2c2:	11 f4       	brne	.+4      	; 0x2c8 <stepperHome+0x3c>
 2c4:	c0 e0       	ldi	r28, 0x00	; 0
 2c6:	d0 e0       	ldi	r29, 0x00	; 0
 2c8:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <HallEffect>
 2cc:	88 23       	and	r24, r24
 2ce:	61 f3       	breq	.-40     	; 0x2a8 <stepperHome+0x1c>
 2d0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 2d4:	ee 98       	cbi	0x1d, 6	; 29
 2d6:	c4 30       	cpi	r28, 0x04	; 4
 2d8:	d1 05       	cpc	r29, r1
 2da:	d1 f1       	breq	.+116    	; 0x350 <stepperHome+0xc4>
 2dc:	cf 3f       	cpi	r28, 0xFF	; 255
 2de:	2f ef       	ldi	r18, 0xFF	; 255
 2e0:	d2 07       	cpc	r29, r18
 2e2:	69 f1       	breq	.+90     	; 0x33e <stepperHome+0xb2>
 2e4:	fe 01       	movw	r30, r28
 2e6:	ee 0f       	add	r30, r30
 2e8:	ff 1f       	adc	r31, r31
 2ea:	e0 50       	subi	r30, 0x00	; 0
 2ec:	ff 4f       	sbci	r31, 0xFF	; 255
 2ee:	80 81       	ld	r24, Z
 2f0:	82 b9       	out	0x02, r24	; 2
 2f2:	8e e1       	ldi	r24, 0x1E	; 30
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	01 df       	rcall	.-510    	; 0xfa <mTimer2>
 2f8:	21 96       	adiw	r28, 0x01	; 1
 2fa:	c4 30       	cpi	r28, 0x04	; 4
 2fc:	d1 05       	cpc	r29, r1
 2fe:	39 f0       	breq	.+14     	; 0x30e <stepperHome+0x82>
 300:	cf 3f       	cpi	r28, 0xFF	; 255
 302:	3f ef       	ldi	r19, 0xFF	; 255
 304:	d3 07       	cpc	r29, r19
 306:	29 f4       	brne	.+10     	; 0x312 <stepperHome+0x86>
 308:	c3 e0       	ldi	r28, 0x03	; 3
 30a:	d0 e0       	ldi	r29, 0x00	; 0
 30c:	02 c0       	rjmp	.+4      	; 0x312 <stepperHome+0x86>
 30e:	c0 e0       	ldi	r28, 0x00	; 0
 310:	d0 e0       	ldi	r29, 0x00	; 0
 312:	ce 01       	movw	r24, r28
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	fc 01       	movw	r30, r24
 31a:	e0 50       	subi	r30, 0x00	; 0
 31c:	ff 4f       	sbci	r31, 0xFF	; 255
 31e:	6f 01       	movw	r12, r30
 320:	80 81       	ld	r24, Z
 322:	82 b9       	out	0x02, r24	; 2
 324:	8e e1       	ldi	r24, 0x1E	; 30
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	e8 de       	rcall	.-560    	; 0xfa <mTimer2>
 32a:	f7 01       	movw	r30, r14
 32c:	d1 83       	std	Z+1, r29	; 0x01
 32e:	c0 83       	st	Z, r28
 330:	f6 01       	movw	r30, r12
 332:	80 81       	ld	r24, Z
 334:	82 b9       	out	0x02, r24	; 2
 336:	f8 01       	movw	r30, r16
 338:	11 82       	std	Z+1, r1	; 0x01
 33a:	10 82       	st	Z, r1
 33c:	12 c0       	rjmp	.+36     	; 0x362 <stepperHome+0xd6>
 33e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_start+0x6>
 342:	82 b9       	out	0x02, r24	; 2
 344:	8e e1       	ldi	r24, 0x1E	; 30
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	d8 de       	rcall	.-592    	; 0xfa <mTimer2>
 34a:	c0 e0       	ldi	r28, 0x00	; 0
 34c:	d0 e0       	ldi	r29, 0x00	; 0
 34e:	e1 cf       	rjmp	.-62     	; 0x312 <stepperHome+0x86>
 350:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 354:	82 b9       	out	0x02, r24	; 2
 356:	8e e1       	ldi	r24, 0x1E	; 30
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	cf de       	rcall	.-610    	; 0xfa <mTimer2>
 35c:	c1 e0       	ldi	r28, 0x01	; 1
 35e:	d0 e0       	ldi	r29, 0x00	; 0
 360:	d8 cf       	rjmp	.-80     	; 0x312 <stepperHome+0x86>
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	1f 91       	pop	r17
 368:	0f 91       	pop	r16
 36a:	ff 90       	pop	r15
 36c:	ef 90       	pop	r14
 36e:	df 90       	pop	r13
 370:	cf 90       	pop	r12
 372:	08 95       	ret

00000374 <setupISR>:
 374:	ee 9a       	sbi	0x1d, 6	; 29
 376:	ea e6       	ldi	r30, 0x6A	; 106
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	80 62       	ori	r24, 0x20	; 32
 37e:	80 83       	st	Z, r24
 380:	08 95       	ret

00000382 <main>:
 382:	cf 93       	push	r28
 384:	df 93       	push	r29
 386:	00 d0       	rcall	.+0      	; 0x388 <main+0x6>
 388:	00 d0       	rcall	.+0      	; 0x38a <main+0x8>
 38a:	cd b7       	in	r28, 0x3d	; 61
 38c:	de b7       	in	r29, 0x3e	; 62
 38e:	e1 e6       	ldi	r30, 0x61	; 97
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	80 e8       	ldi	r24, 0x80	; 128
 394:	80 83       	st	Z, r24
 396:	10 82       	st	Z, r1
 398:	1a 82       	std	Y+2, r1	; 0x02
 39a:	19 82       	std	Y+1, r1	; 0x01
 39c:	1c 82       	std	Y+4, r1	; 0x04
 39e:	1b 82       	std	Y+3, r1	; 0x03
 3a0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 3a4:	f8 94       	cli
 3a6:	e6 df       	rcall	.-52     	; 0x374 <setupISR>
 3a8:	8f ef       	ldi	r24, 0xFF	; 255
 3aa:	81 b9       	out	0x01, r24	; 1
 3ac:	87 b9       	out	0x07, r24	; 7
 3ae:	1d b8       	out	0x0d, r1	; 13
 3b0:	10 ba       	out	0x10, r1	; 16
 3b2:	90 de       	rcall	.-736    	; 0xd4 <initTimer1>
 3b4:	9f de       	rcall	.-706    	; 0xf4 <timer2Init>
 3b6:	78 94       	sei
 3b8:	88 ee       	ldi	r24, 0xE8	; 232
 3ba:	93 e0       	ldi	r25, 0x03	; 3
 3bc:	9e de       	rcall	.-708    	; 0xfa <mTimer2>
 3be:	80 ec       	ldi	r24, 0xC0	; 192
 3c0:	88 b9       	out	0x08, r24	; 8
 3c2:	88 ee       	ldi	r24, 0xE8	; 232
 3c4:	93 e0       	ldi	r25, 0x03	; 3
 3c6:	99 de       	rcall	.-718    	; 0xfa <mTimer2>
 3c8:	eb 81       	ldd	r30, Y+3	; 0x03
 3ca:	fc 81       	ldd	r31, Y+4	; 0x04
 3cc:	ee 0f       	add	r30, r30
 3ce:	ff 1f       	adc	r31, r31
 3d0:	e0 50       	subi	r30, 0x00	; 0
 3d2:	ff 4f       	sbci	r31, 0xFF	; 255
 3d4:	80 81       	ld	r24, Z
 3d6:	88 b9       	out	0x08, r24	; 8
 3d8:	88 ee       	ldi	r24, 0xE8	; 232
 3da:	93 e0       	ldi	r25, 0x03	; 3
 3dc:	8e de       	rcall	.-740    	; 0xfa <mTimer2>
 3de:	ee 24       	eor	r14, r14
 3e0:	e3 94       	inc	r14
 3e2:	f1 2c       	mov	r15, r1
 3e4:	ee 9a       	sbi	0x1d, 6	; 29
 3e6:	00 e0       	ldi	r16, 0x00	; 0
 3e8:	10 e0       	ldi	r17, 0x00	; 0
 3ea:	c7 01       	movw	r24, r14
 3ec:	00 2e       	mov	r0, r16
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <main+0x72>
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	0a 94       	dec	r0
 3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <main+0x6e>
 3f8:	88 b9       	out	0x08, r24	; 8
 3fa:	88 ec       	ldi	r24, 0xC8	; 200
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	7d de       	rcall	.-774    	; 0xfa <mTimer2>
 400:	0f 5f       	subi	r16, 0xFF	; 255
 402:	1f 4f       	sbci	r17, 0xFF	; 255
 404:	08 30       	cpi	r16, 0x08	; 8
 406:	11 05       	cpc	r17, r1
 408:	81 f7       	brne	.-32     	; 0x3ea <main+0x68>
 40a:	06 e0       	ldi	r16, 0x06	; 6
 40c:	10 e0       	ldi	r17, 0x00	; 0
 40e:	c7 01       	movw	r24, r14
 410:	00 2e       	mov	r0, r16
 412:	02 c0       	rjmp	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 414:	88 0f       	add	r24, r24
 416:	99 1f       	adc	r25, r25
 418:	0a 94       	dec	r0
 41a:	e2 f7       	brpl	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	88 b9       	out	0x08, r24	; 8
 41e:	88 ec       	ldi	r24, 0xC8	; 200
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	6b de       	rcall	.-810    	; 0xfa <mTimer2>
 424:	01 50       	subi	r16, 0x01	; 1
 426:	11 09       	sbc	r17, r1
 428:	90 f7       	brcc	.-28     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 42a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 42e:	be 01       	movw	r22, r28
 430:	6d 5f       	subi	r22, 0xFD	; 253
 432:	7f 4f       	sbci	r23, 0xFF	; 255
 434:	ce 01       	movw	r24, r28
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	29 df       	rcall	.-430    	; 0x28c <stepperHome>
 43a:	80 ea       	ldi	r24, 0xA0	; 160
 43c:	9f e0       	ldi	r25, 0x0F	; 15
 43e:	5d de       	rcall	.-838    	; 0xfa <mTimer2>
 440:	ae 01       	movw	r20, r28
 442:	4d 5f       	subi	r20, 0xFD	; 253
 444:	5f 4f       	sbci	r21, 0xFF	; 255
 446:	be 01       	movw	r22, r28
 448:	6f 5f       	subi	r22, 0xFF	; 255
 44a:	7f 4f       	sbci	r23, 0xFF	; 255
 44c:	81 e1       	ldi	r24, 0x11	; 17
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	72 de       	rcall	.-796    	; 0x136 <stepperControl>
 452:	80 ed       	ldi	r24, 0xD0	; 208
 454:	97 e0       	ldi	r25, 0x07	; 7
 456:	51 de       	rcall	.-862    	; 0xfa <mTimer2>
 458:	ae 01       	movw	r20, r28
 45a:	4d 5f       	subi	r20, 0xFD	; 253
 45c:	5f 4f       	sbci	r21, 0xFF	; 255
 45e:	be 01       	movw	r22, r28
 460:	6f 5f       	subi	r22, 0xFF	; 255
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	81 e2       	ldi	r24, 0x21	; 33
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	66 de       	rcall	.-820    	; 0x136 <stepperControl>
 46a:	80 ed       	ldi	r24, 0xD0	; 208
 46c:	97 e0       	ldi	r25, 0x07	; 7
 46e:	45 de       	rcall	.-886    	; 0xfa <mTimer2>
 470:	ae 01       	movw	r20, r28
 472:	4d 5f       	subi	r20, 0xFD	; 253
 474:	5f 4f       	sbci	r21, 0xFF	; 255
 476:	be 01       	movw	r22, r28
 478:	6f 5f       	subi	r22, 0xFF	; 255
 47a:	7f 4f       	sbci	r23, 0xFF	; 255
 47c:	84 e6       	ldi	r24, 0x64	; 100
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	5a de       	rcall	.-844    	; 0x136 <stepperControl>
 482:	80 ed       	ldi	r24, 0xD0	; 208
 484:	97 e0       	ldi	r25, 0x07	; 7
 486:	39 de       	rcall	.-910    	; 0xfa <mTimer2>
 488:	ae 01       	movw	r20, r28
 48a:	4d 5f       	subi	r20, 0xFD	; 253
 48c:	5f 4f       	sbci	r21, 0xFF	; 255
 48e:	be 01       	movw	r22, r28
 490:	6f 5f       	subi	r22, 0xFF	; 255
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	8c e9       	ldi	r24, 0x9C	; 156
 496:	9f ef       	ldi	r25, 0xFF	; 255
 498:	4e de       	rcall	.-868    	; 0x136 <stepperControl>
 49a:	80 ed       	ldi	r24, 0xD0	; 208
 49c:	97 e0       	ldi	r25, 0x07	; 7
 49e:	2d de       	rcall	.-934    	; 0xfa <mTimer2>
 4a0:	ae 01       	movw	r20, r28
 4a2:	4d 5f       	subi	r20, 0xFD	; 253
 4a4:	5f 4f       	sbci	r21, 0xFF	; 255
 4a6:	be 01       	movw	r22, r28
 4a8:	6f 5f       	subi	r22, 0xFF	; 255
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f ed       	ldi	r24, 0xDF	; 223
 4ae:	9f ef       	ldi	r25, 0xFF	; 255
 4b0:	42 de       	rcall	.-892    	; 0x136 <stepperControl>
 4b2:	80 ed       	ldi	r24, 0xD0	; 208
 4b4:	97 e0       	ldi	r25, 0x07	; 7
 4b6:	21 de       	rcall	.-958    	; 0xfa <mTimer2>
 4b8:	ae 01       	movw	r20, r28
 4ba:	4d 5f       	subi	r20, 0xFD	; 253
 4bc:	5f 4f       	sbci	r21, 0xFF	; 255
 4be:	be 01       	movw	r22, r28
 4c0:	6f 5f       	subi	r22, 0xFF	; 255
 4c2:	7f 4f       	sbci	r23, 0xFF	; 255
 4c4:	8f ee       	ldi	r24, 0xEF	; 239
 4c6:	9f ef       	ldi	r25, 0xFF	; 255
 4c8:	36 de       	rcall	.-916    	; 0x136 <stepperControl>
 4ca:	80 ed       	ldi	r24, 0xD0	; 208
 4cc:	97 e0       	ldi	r25, 0x07	; 7
 4ce:	15 de       	rcall	.-982    	; 0xfa <mTimer2>
 4d0:	ae 01       	movw	r20, r28
 4d2:	4d 5f       	subi	r20, 0xFD	; 253
 4d4:	5f 4f       	sbci	r21, 0xFF	; 255
 4d6:	be 01       	movw	r22, r28
 4d8:	6f 5f       	subi	r22, 0xFF	; 255
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8c e9       	ldi	r24, 0x9C	; 156
 4de:	9f ef       	ldi	r25, 0xFF	; 255
 4e0:	2a de       	rcall	.-940    	; 0x136 <stepperControl>
 4e2:	80 ed       	ldi	r24, 0xD0	; 208
 4e4:	97 e0       	ldi	r25, 0x07	; 7
 4e6:	09 de       	rcall	.-1006   	; 0xfa <mTimer2>
 4e8:	7d cf       	rjmp	.-262    	; 0x3e4 <main+0x62>

000004ea <__vector_7>:
ISR(INT2_vect){
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	ADCSRA |= _BV(ADSC);
}
*/
ISR(INT6_vect){ //Active low for hall effect sensor on PE4
 4ea:	1f 92       	push	r1
 4ec:	0f 92       	push	r0
 4ee:	0f b6       	in	r0, 0x3f	; 63
 4f0:	0f 92       	push	r0
 4f2:	11 24       	eor	r1, r1
 4f4:	8f 93       	push	r24
	HallEffect=0x01;
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <HallEffect>
}
 4fc:	8f 91       	pop	r24
 4fe:	0f 90       	pop	r0
 500:	0f be       	out	0x3f, r0	; 63
 502:	0f 90       	pop	r0
 504:	1f 90       	pop	r1
 506:	18 95       	reti

00000508 <__divmodhi4>:
 508:	97 fb       	bst	r25, 7
 50a:	07 2e       	mov	r0, r23
 50c:	16 f4       	brtc	.+4      	; 0x512 <__divmodhi4+0xa>
 50e:	00 94       	com	r0
 510:	06 d0       	rcall	.+12     	; 0x51e <__divmodhi4_neg1>
 512:	77 fd       	sbrc	r23, 7
 514:	08 d0       	rcall	.+16     	; 0x526 <__divmodhi4_neg2>
 516:	0b d0       	rcall	.+22     	; 0x52e <__udivmodhi4>
 518:	07 fc       	sbrc	r0, 7
 51a:	05 d0       	rcall	.+10     	; 0x526 <__divmodhi4_neg2>
 51c:	3e f4       	brtc	.+14     	; 0x52c <__divmodhi4_exit>

0000051e <__divmodhi4_neg1>:
 51e:	90 95       	com	r25
 520:	81 95       	neg	r24
 522:	9f 4f       	sbci	r25, 0xFF	; 255
 524:	08 95       	ret

00000526 <__divmodhi4_neg2>:
 526:	70 95       	com	r23
 528:	61 95       	neg	r22
 52a:	7f 4f       	sbci	r23, 0xFF	; 255

0000052c <__divmodhi4_exit>:
 52c:	08 95       	ret

0000052e <__udivmodhi4>:
 52e:	aa 1b       	sub	r26, r26
 530:	bb 1b       	sub	r27, r27
 532:	51 e1       	ldi	r21, 0x11	; 17
 534:	07 c0       	rjmp	.+14     	; 0x544 <__udivmodhi4_ep>

00000536 <__udivmodhi4_loop>:
 536:	aa 1f       	adc	r26, r26
 538:	bb 1f       	adc	r27, r27
 53a:	a6 17       	cp	r26, r22
 53c:	b7 07       	cpc	r27, r23
 53e:	10 f0       	brcs	.+4      	; 0x544 <__udivmodhi4_ep>
 540:	a6 1b       	sub	r26, r22
 542:	b7 0b       	sbc	r27, r23

00000544 <__udivmodhi4_ep>:
 544:	88 1f       	adc	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	5a 95       	dec	r21
 54a:	a9 f7       	brne	.-22     	; 0x536 <__udivmodhi4_loop>
 54c:	80 95       	com	r24
 54e:	90 95       	com	r25
 550:	bc 01       	movw	r22, r24
 552:	cd 01       	movw	r24, r26
 554:	08 95       	ret

00000556 <_exit>:
 556:	f8 94       	cli

00000558 <__stop_program>:
 558:	ff cf       	rjmp	.-2      	; 0x558 <__stop_program>
