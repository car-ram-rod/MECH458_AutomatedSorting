
STEPPER_ACCEL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000534  000005c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000534  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800108  00800108  000005d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000600  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001211  00000000  00000000  000006c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce3  00000000  00000000  000018d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000620  00000000  00000000  000025b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00002bd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c9  00000000  00000000  00002d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006af  00000000  00000000  00003405  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003ab4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	51 c2       	rjmp	.+1186   	; 0x4c0 <__vector_7>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e4 e3       	ldi	r30, 0x34	; 52
  ac:	f5 e0       	ldi	r31, 0x05	; 5
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 30       	cpi	r26, 0x08	; 8
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a8 e0       	ldi	r26, 0x08	; 8
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ac 30       	cpi	r26, 0x0C	; 12
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	60 d1       	rcall	.+704    	; 0x390 <main>
  d0:	2f c2       	rjmp	.+1118   	; 0x530 <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <initTimer1>:
#include "interrupt.h"
void initTimer1(void){ //initialize Timer 1 for CTC (Clear Timer on Compare)
	/*set Waveform Generation mode to Clear Timer*/
	/*set WGM bits to 0100*/
	/*note WGM is spread over two registers*/
	TCCR1B |= _BV(WGM12);
  d4:	e1 e8       	ldi	r30, 0x81	; 129
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 60       	ori	r24, 0x08	; 8
  dc:	80 83       	st	Z, r24
	/*set Output Compare Register for 1000 cycles (1ms)*/
	OCR1A = 0x03E8;
  de:	88 ee       	ldi	r24, 0xE8	; 232
  e0:	93 e0       	ldi	r25, 0x03	; 3
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	/*set the initial value of the Timer rCounter to 0x0000*/
	TCNT1 = 0x0000;
  ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	/*Enable the output compare interrupt enable*/
	TIMSK1=TIMSK1|0b00000010;
  f2:	ef e6       	ldi	r30, 0x6F	; 111
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	82 60       	ori	r24, 0x02	; 2
  fa:	80 83       	st	Z, r24
  fc:	08 95       	ret

000000fe <mTimer>:
	return;
}
void mTimer(int count){ // delay microsecond
  fe:	ac 01       	movw	r20, r24
	int i = 0; //initialize loop counter
	/*initialize timer 1; runs at CPU clock (1MHz)*/
	TCCR1B |= _BV(CS10);
 100:	e1 e8       	ldi	r30, 0x81	; 129
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	90 81       	ld	r25, Z
 106:	91 60       	ori	r25, 0x01	; 1
 108:	90 83       	st	Z, r25
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
 10a:	b1 9a       	sbi	0x16, 1	; 22
	/*Enable the output compare interrupt enable*/
	TIMSK1=TIMSK1|0b00000010;
	return;
}
void mTimer(int count){ // delay microsecond
	int i = 0; //initialize loop counter
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
	/*initialize timer 1; runs at CPU clock (1MHz)*/
	TCCR1B |= _BV(CS10);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
	while (i<count){
 110:	05 c0       	rjmp	.+10     	; 0x11c <mTimer+0x1e>
		if ((TIFR1 & 0x02) == 0x02){
 112:	b1 9b       	sbis	0x16, 1	; 22
 114:	fe cf       	rjmp	.-4      	; 0x112 <mTimer+0x14>
			//clear interrupt flag by WRITING a ONE to the bit
			TIFR1 |= _BV(OCF1A);
 116:	b1 9a       	sbi	0x16, 1	; 22
			i++; //increment loop counter
 118:	2f 5f       	subi	r18, 0xFF	; 255
 11a:	3f 4f       	sbci	r19, 0xFF	; 255
	int i = 0; //initialize loop counter
	/*initialize timer 1; runs at CPU clock (1MHz)*/
	TCCR1B |= _BV(CS10);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
	while (i<count){
 11c:	24 17       	cp	r18, r20
 11e:	35 07       	cpc	r19, r21
 120:	1c f4       	brge	.+6      	; 0x128 <mTimer+0x2a>
		if ((TIFR1 & 0x02) == 0x02){
 122:	b1 9b       	sbis	0x16, 1	; 22
 124:	f6 cf       	rjmp	.-20     	; 0x112 <mTimer+0x14>
 126:	f7 cf       	rjmp	.-18     	; 0x116 <mTimer+0x18>
			TIFR1 |= _BV(OCF1A);
			i++; //increment loop counter
			/*Timer resets automatically due to WGM settings*/
		} //if end
	}//while end
	TCCR1B &= 0b11111000; //shut off timer 1
 128:	e1 e8       	ldi	r30, 0x81	; 129
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	88 7f       	andi	r24, 0xF8	; 248
 130:	80 83       	st	Z, r24
 132:	08 95       	ret

00000134 <stepperControl>:
	if(((PINB & 0b00001100) >> 2) != d){ //if current direction doesn't match new direction
		PORTB &= 0b11110011; //stop motor
		PORTB |= 0b0011 | ((d & 0b11) << 2); //start motor in specified direction
	}
	dutyCycle = s*2.55;
	OCR0A = dutyCycle;//set duty cycle
 134:	2f 92       	push	r2
 136:	3f 92       	push	r3
 138:	4f 92       	push	r4
 13a:	5f 92       	push	r5
 13c:	6f 92       	push	r6
 13e:	7f 92       	push	r7
 140:	8f 92       	push	r8
 142:	9f 92       	push	r9
 144:	af 92       	push	r10
 146:	bf 92       	push	r11
 148:	cf 92       	push	r12
 14a:	df 92       	push	r13
 14c:	ef 92       	push	r14
 14e:	ff 92       	push	r15
 150:	0f 93       	push	r16
 152:	1f 93       	push	r17
 154:	cf 93       	push	r28
 156:	df 93       	push	r29
 158:	00 d0       	rcall	.+0      	; 0x15a <stepperControl+0x26>
 15a:	00 d0       	rcall	.+0      	; 0x15c <stepperControl+0x28>
 15c:	00 d0       	rcall	.+0      	; 0x15e <stepperControl+0x2a>
 15e:	cd b7       	in	r28, 0x3d	; 61
 160:	de b7       	in	r29, 0x3e	; 62
 162:	6c 01       	movw	r12, r24
 164:	7a 83       	std	Y+2, r23	; 0x02
 166:	69 83       	std	Y+1, r22	; 0x01
 168:	5c 83       	std	Y+4, r21	; 0x04
 16a:	4b 83       	std	Y+3, r20	; 0x03
 16c:	9e 83       	std	Y+6, r25	; 0x06
 16e:	8d 83       	std	Y+5, r24	; 0x05
 170:	99 23       	and	r25, r25
 172:	34 f4       	brge	.+12     	; 0x180 <stepperControl+0x4c>
 174:	22 27       	eor	r18, r18
 176:	33 27       	eor	r19, r19
 178:	28 1b       	sub	r18, r24
 17a:	39 0b       	sbc	r19, r25
 17c:	3e 83       	std	Y+6, r19	; 0x06
 17e:	2d 83       	std	Y+5, r18	; 0x05
 180:	4d 80       	ldd	r4, Y+5	; 0x05
 182:	5e 80       	ldd	r5, Y+6	; 0x06
 184:	eb 81       	ldd	r30, Y+3	; 0x03
 186:	fc 81       	ldd	r31, Y+4	; 0x04
 188:	80 81       	ld	r24, Z
 18a:	91 81       	ldd	r25, Z+1	; 0x01
 18c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 190:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 194:	82 17       	cp	r24, r18
 196:	93 07       	cpc	r25, r19
 198:	b9 f0       	breq	.+46     	; 0x1c8 <stepperControl+0x94>
 19a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__data_start+0x2>
 19e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__data_start+0x3>
 1a2:	82 17       	cp	r24, r18
 1a4:	93 07       	cpc	r25, r19
 1a6:	91 f0       	breq	.+36     	; 0x1cc <stepperControl+0x98>
 1a8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_start+0x4>
 1ac:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_start+0x5>
 1b0:	82 17       	cp	r24, r18
 1b2:	93 07       	cpc	r25, r19
 1b4:	69 f0       	breq	.+26     	; 0x1d0 <stepperControl+0x9c>
 1b6:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_start+0x6>
 1ba:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_start+0x7>
 1be:	82 17       	cp	r24, r18
 1c0:	93 07       	cpc	r25, r19
 1c2:	41 f4       	brne	.+16     	; 0x1d4 <stepperControl+0xa0>
 1c4:	83 e0       	ldi	r24, 0x03	; 3
 1c6:	07 c0       	rjmp	.+14     	; 0x1d6 <stepperControl+0xa2>
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <stepperControl+0xa2>
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	03 c0       	rjmp	.+6      	; 0x1d6 <stepperControl+0xa2>
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <stepperControl+0xa2>
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	2d 81       	ldd	r18, Y+5	; 0x05
 1d8:	3e 81       	ldd	r19, Y+6	; 0x06
 1da:	24 31       	cpi	r18, 0x14	; 20
 1dc:	31 05       	cpc	r19, r1
 1de:	38 f4       	brcc	.+14     	; 0x1ee <stepperControl+0xba>
 1e0:	36 95       	lsr	r19
 1e2:	27 95       	ror	r18
 1e4:	92 2f       	mov	r25, r18
 1e6:	34 e1       	ldi	r19, 0x14	; 20
 1e8:	23 2e       	mov	r2, r19
 1ea:	22 1a       	sub	r2, r18
 1ec:	05 c0       	rjmp	.+10     	; 0x1f8 <stepperControl+0xc4>
 1ee:	9a e0       	ldi	r25, 0x0A	; 10
 1f0:	0f 2e       	mov	r0, r31
 1f2:	fa e0       	ldi	r31, 0x0A	; 10
 1f4:	2f 2e       	mov	r2, r31
 1f6:	f0 2d       	mov	r31, r0
 1f8:	1c 14       	cp	r1, r12
 1fa:	1d 04       	cpc	r1, r13
 1fc:	24 f0       	brlt	.+8      	; 0x206 <stepperControl+0xd2>
 1fe:	0d 2d       	mov	r16, r13
 200:	00 0f       	add	r16, r16
 202:	00 0b       	sbc	r16, r16
 204:	01 c0       	rjmp	.+2      	; 0x208 <stepperControl+0xd4>
 206:	01 e0       	ldi	r16, 0x01	; 1
 208:	a0 2e       	mov	r10, r16
 20a:	b1 2c       	mov	r11, r1
 20c:	35 01       	movw	r6, r10
 20e:	68 0e       	add	r6, r24
 210:	71 1c       	adc	r7, r1
 212:	ed 81       	ldd	r30, Y+5	; 0x05
 214:	fe 81       	ldd	r31, Y+6	; 0x06
 216:	30 97       	sbiw	r30, 0x00	; 0
 218:	09 f4       	brne	.+2      	; 0x21c <stepperControl+0xe8>
 21a:	3e c0       	rjmp	.+124    	; 0x298 <stepperControl+0x164>
 21c:	31 97       	sbiw	r30, 0x01	; 1
 21e:	fe 83       	std	Y+6, r31	; 0x06
 220:	ed 83       	std	Y+5, r30	; 0x05
 222:	85 01       	movw	r16, r10
 224:	43 01       	movw	r8, r6
 226:	0f 2e       	mov	r0, r31
 228:	f4 e1       	ldi	r31, 0x14	; 20
 22a:	3f 2e       	mov	r3, r31
 22c:	f0 2d       	mov	r31, r0
 22e:	e9 2e       	mov	r14, r25
 230:	f1 2c       	mov	r15, r1
 232:	2d 81       	ldd	r18, Y+5	; 0x05
 234:	3e 81       	ldd	r19, Y+6	; 0x06
 236:	e2 16       	cp	r14, r18
 238:	f3 06       	cpc	r15, r19
 23a:	20 f4       	brcc	.+8      	; 0x244 <stepperControl+0x110>
 23c:	23 14       	cp	r2, r3
 23e:	38 f4       	brcc	.+14     	; 0x24e <stepperControl+0x11a>
 240:	3a 94       	dec	r3
 242:	0b c0       	rjmp	.+22     	; 0x25a <stepperControl+0x126>
 244:	33 e1       	ldi	r19, 0x13	; 19
 246:	33 15       	cp	r19, r3
 248:	20 f0       	brcs	.+8      	; 0x252 <stepperControl+0x11e>
 24a:	33 94       	inc	r3
 24c:	06 c0       	rjmp	.+12     	; 0x25a <stepperControl+0x126>
 24e:	32 2c       	mov	r3, r2
 250:	04 c0       	rjmp	.+8      	; 0x25a <stepperControl+0x126>
 252:	0f 2e       	mov	r0, r31
 254:	f4 e1       	ldi	r31, 0x14	; 20
 256:	3f 2e       	mov	r3, r31
 258:	f0 2d       	mov	r31, r0
 25a:	c4 01       	movw	r24, r8
 25c:	83 70       	andi	r24, 0x03	; 3
 25e:	90 78       	andi	r25, 0x80	; 128
 260:	99 23       	and	r25, r25
 262:	24 f4       	brge	.+8      	; 0x26c <stepperControl+0x138>
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	8c 6f       	ori	r24, 0xFC	; 252
 268:	9f 6f       	ori	r25, 0xFF	; 255
 26a:	01 96       	adiw	r24, 0x01	; 1
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	fc 01       	movw	r30, r24
 272:	e0 50       	subi	r30, 0x00	; 0
 274:	ff 4f       	sbci	r31, 0xFF	; 255
 276:	80 81       	ld	r24, Z
 278:	82 b9       	out	0x02, r24	; 2
 27a:	80 81       	ld	r24, Z
 27c:	88 b9       	out	0x08, r24	; 8
 27e:	83 2d       	mov	r24, r3
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	3d df       	rcall	.-390    	; 0xfe <mTimer>
 284:	8d 81       	ldd	r24, Y+5	; 0x05
 286:	9e 81       	ldd	r25, Y+6	; 0x06
 288:	01 97       	sbiw	r24, 0x01	; 1
 28a:	9e 83       	std	Y+6, r25	; 0x06
 28c:	8d 83       	std	Y+5, r24	; 0x05
 28e:	80 0e       	add	r8, r16
 290:	91 1e       	adc	r9, r17
 292:	01 96       	adiw	r24, 0x01	; 1
 294:	71 f6       	brne	.-100    	; 0x232 <stepperControl+0xfe>
 296:	02 c0       	rjmp	.+4      	; 0x29c <stepperControl+0x168>
 298:	41 2c       	mov	r4, r1
 29a:	51 2c       	mov	r5, r1
 29c:	92 01       	movw	r18, r4
 29e:	21 50       	subi	r18, 0x01	; 1
 2a0:	31 09       	sbc	r19, r1
 2a2:	2a 9d       	mul	r18, r10
 2a4:	c0 01       	movw	r24, r0
 2a6:	2b 9d       	mul	r18, r11
 2a8:	90 0d       	add	r25, r0
 2aa:	3a 9d       	mul	r19, r10
 2ac:	90 0d       	add	r25, r0
 2ae:	11 24       	eor	r1, r1
 2b0:	86 0d       	add	r24, r6
 2b2:	97 1d       	adc	r25, r7
 2b4:	83 70       	andi	r24, 0x03	; 3
 2b6:	90 78       	andi	r25, 0x80	; 128
 2b8:	99 23       	and	r25, r25
 2ba:	24 f4       	brge	.+8      	; 0x2c4 <stepperControl+0x190>
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	8c 6f       	ori	r24, 0xFC	; 252
 2c0:	9f 6f       	ori	r25, 0xFF	; 255
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	fc 01       	movw	r30, r24
 2ca:	e0 50       	subi	r30, 0x00	; 0
 2cc:	ff 4f       	sbci	r31, 0xFF	; 255
 2ce:	80 81       	ld	r24, Z
 2d0:	91 81       	ldd	r25, Z+1	; 0x01
 2d2:	eb 81       	ldd	r30, Y+3	; 0x03
 2d4:	fc 81       	ldd	r31, Y+4	; 0x04
 2d6:	91 83       	std	Z+1, r25	; 0x01
 2d8:	80 83       	st	Z, r24
 2da:	e9 81       	ldd	r30, Y+1	; 0x01
 2dc:	fa 81       	ldd	r31, Y+2	; 0x02
 2de:	80 81       	ld	r24, Z
 2e0:	91 81       	ldd	r25, Z+1	; 0x01
 2e2:	8c 0d       	add	r24, r12
 2e4:	9d 1d       	adc	r25, r13
 2e6:	68 ec       	ldi	r22, 0xC8	; 200
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	fb d0       	rcall	.+502    	; 0x4e2 <__divmodhi4>
 2ec:	91 83       	std	Z+1, r25	; 0x01
 2ee:	80 83       	st	Z, r24
 2f0:	82 b1       	in	r24, 0x02	; 2
 2f2:	8b 7d       	andi	r24, 0xDB	; 219
 2f4:	82 b9       	out	0x02, r24	; 2
 2f6:	26 96       	adiw	r28, 0x06	; 6
 2f8:	0f b6       	in	r0, 0x3f	; 63
 2fa:	f8 94       	cli
 2fc:	de bf       	out	0x3e, r29	; 62
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	cd bf       	out	0x3d, r28	; 61
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	1f 91       	pop	r17
 308:	0f 91       	pop	r16
 30a:	ff 90       	pop	r15
 30c:	ef 90       	pop	r14
 30e:	df 90       	pop	r13
 310:	cf 90       	pop	r12
 312:	bf 90       	pop	r11
 314:	af 90       	pop	r10
 316:	9f 90       	pop	r9
 318:	8f 90       	pop	r8
 31a:	7f 90       	pop	r7
 31c:	6f 90       	pop	r6
 31e:	5f 90       	pop	r5
 320:	4f 90       	pop	r4
 322:	3f 90       	pop	r3
 324:	2f 90       	pop	r2
 326:	08 95       	ret

00000328 <stepperHome>:
 328:	ef 92       	push	r14
 32a:	ff 92       	push	r15
 32c:	0f 93       	push	r16
 32e:	1f 93       	push	r17
 330:	cf 93       	push	r28
 332:	df 93       	push	r29
 334:	8c 01       	movw	r16, r24
 336:	eb 01       	movw	r28, r22
 338:	e1 2c       	mov	r14, r1
 33a:	f1 2c       	mov	r15, r1
 33c:	c7 01       	movw	r24, r14
 33e:	83 70       	andi	r24, 0x03	; 3
 340:	90 78       	andi	r25, 0x80	; 128
 342:	99 23       	and	r25, r25
 344:	24 f4       	brge	.+8      	; 0x34e <stepperHome+0x26>
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	8c 6f       	ori	r24, 0xFC	; 252
 34a:	9f 6f       	ori	r25, 0xFF	; 255
 34c:	01 96       	adiw	r24, 0x01	; 1
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	fc 01       	movw	r30, r24
 354:	e0 50       	subi	r30, 0x00	; 0
 356:	ff 4f       	sbci	r31, 0xFF	; 255
 358:	80 81       	ld	r24, Z
 35a:	88 b9       	out	0x08, r24	; 8
 35c:	88 e2       	ldi	r24, 0x28	; 40
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	ce de       	rcall	.-612    	; 0xfe <mTimer>
 362:	8f ef       	ldi	r24, 0xFF	; 255
 364:	e8 1a       	sub	r14, r24
 366:	f8 0a       	sbc	r15, r24
 368:	e5 e6       	ldi	r30, 0x65	; 101
 36a:	ee 16       	cp	r14, r30
 36c:	f1 04       	cpc	r15, r1
 36e:	31 f7       	brne	.-52     	; 0x33c <stepperHome+0x14>
 370:	f8 01       	movw	r30, r16
 372:	11 82       	std	Z+1, r1	; 0x01
 374:	10 82       	st	Z, r1
 376:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 37a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 37e:	99 83       	std	Y+1, r25	; 0x01
 380:	88 83       	st	Y, r24
 382:	df 91       	pop	r29
 384:	cf 91       	pop	r28
 386:	1f 91       	pop	r17
 388:	0f 91       	pop	r16
 38a:	ff 90       	pop	r15
 38c:	ef 90       	pop	r14
 38e:	08 95       	ret

00000390 <main>:
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	00 d0       	rcall	.+0      	; 0x396 <main+0x6>
 396:	00 d0       	rcall	.+0      	; 0x398 <main+0x8>
 398:	cd b7       	in	r28, 0x3d	; 61
 39a:	de b7       	in	r29, 0x3e	; 62
 39c:	1a 82       	std	Y+2, r1	; 0x02
 39e:	19 82       	std	Y+1, r1	; 0x01
 3a0:	8d e0       	ldi	r24, 0x0D	; 13
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	9c 83       	std	Y+4, r25	; 0x04
 3a6:	8b 83       	std	Y+3, r24	; 0x03
 3a8:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 3ac:	f8 94       	cli
 3ae:	8f ef       	ldi	r24, 0xFF	; 255
 3b0:	81 b9       	out	0x01, r24	; 1
 3b2:	87 b9       	out	0x07, r24	; 7
 3b4:	1d b8       	out	0x0d, r1	; 13
 3b6:	10 ba       	out	0x10, r1	; 16
 3b8:	8d de       	rcall	.-742    	; 0xd4 <initTimer1>
 3ba:	be 01       	movw	r22, r28
 3bc:	6d 5f       	subi	r22, 0xFD	; 253
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	ce 01       	movw	r24, r28
 3c2:	01 96       	adiw	r24, 0x01	; 1
 3c4:	b1 df       	rcall	.-158    	; 0x328 <stepperHome>
 3c6:	88 ee       	ldi	r24, 0xE8	; 232
 3c8:	93 e0       	ldi	r25, 0x03	; 3
 3ca:	99 de       	rcall	.-718    	; 0xfe <mTimer>
 3cc:	80 ec       	ldi	r24, 0xC0	; 192
 3ce:	88 b9       	out	0x08, r24	; 8
 3d0:	88 ee       	ldi	r24, 0xE8	; 232
 3d2:	93 e0       	ldi	r25, 0x03	; 3
 3d4:	94 de       	rcall	.-728    	; 0xfe <mTimer>
 3d6:	8b 81       	ldd	r24, Y+3	; 0x03
 3d8:	88 b9       	out	0x08, r24	; 8
 3da:	88 ee       	ldi	r24, 0xE8	; 232
 3dc:	93 e0       	ldi	r25, 0x03	; 3
 3de:	8f de       	rcall	.-738    	; 0xfe <mTimer>
 3e0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <HallEffect>
 3e4:	ee 24       	eor	r14, r14
 3e6:	e3 94       	inc	r14
 3e8:	f1 2c       	mov	r15, r1
 3ea:	00 e0       	ldi	r16, 0x00	; 0
 3ec:	10 e0       	ldi	r17, 0x00	; 0
 3ee:	c7 01       	movw	r24, r14
 3f0:	00 2e       	mov	r0, r16
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <main+0x68>
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	0a 94       	dec	r0
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <main+0x64>
 3fc:	88 b9       	out	0x08, r24	; 8
 3fe:	88 ec       	ldi	r24, 0xC8	; 200
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	7d de       	rcall	.-774    	; 0xfe <mTimer>
 404:	0f 5f       	subi	r16, 0xFF	; 255
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	08 30       	cpi	r16, 0x08	; 8
 40a:	11 05       	cpc	r17, r1
 40c:	81 f7       	brne	.-32     	; 0x3ee <main+0x5e>
 40e:	06 e0       	ldi	r16, 0x06	; 6
 410:	10 e0       	ldi	r17, 0x00	; 0
 412:	c7 01       	movw	r24, r14
 414:	00 2e       	mov	r0, r16
 416:	02 c0       	rjmp	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	88 0f       	add	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	0a 94       	dec	r0
 41e:	e2 f7       	brpl	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 420:	88 b9       	out	0x08, r24	; 8
 422:	88 ec       	ldi	r24, 0xC8	; 200
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	6b de       	rcall	.-810    	; 0xfe <mTimer>
 428:	01 50       	subi	r16, 0x01	; 1
 42a:	11 09       	sbc	r17, r1
 42c:	90 f7       	brcc	.-28     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 42e:	ae 01       	movw	r20, r28
 430:	4d 5f       	subi	r20, 0xFD	; 253
 432:	5f 4f       	sbci	r21, 0xFF	; 255
 434:	be 01       	movw	r22, r28
 436:	6f 5f       	subi	r22, 0xFF	; 255
 438:	7f 4f       	sbci	r23, 0xFF	; 255
 43a:	81 e1       	ldi	r24, 0x11	; 17
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	7a de       	rcall	.-780    	; 0x134 <stepperControl>
 440:	8c ed       	ldi	r24, 0xDC	; 220
 442:	95 e0       	ldi	r25, 0x05	; 5
 444:	5c de       	rcall	.-840    	; 0xfe <mTimer>
 446:	ae 01       	movw	r20, r28
 448:	4d 5f       	subi	r20, 0xFD	; 253
 44a:	5f 4f       	sbci	r21, 0xFF	; 255
 44c:	be 01       	movw	r22, r28
 44e:	6f 5f       	subi	r22, 0xFF	; 255
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	81 e2       	ldi	r24, 0x21	; 33
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	6e de       	rcall	.-804    	; 0x134 <stepperControl>
 458:	8c ed       	ldi	r24, 0xDC	; 220
 45a:	95 e0       	ldi	r25, 0x05	; 5
 45c:	50 de       	rcall	.-864    	; 0xfe <mTimer>
 45e:	ae 01       	movw	r20, r28
 460:	4d 5f       	subi	r20, 0xFD	; 253
 462:	5f 4f       	sbci	r21, 0xFF	; 255
 464:	be 01       	movw	r22, r28
 466:	6f 5f       	subi	r22, 0xFF	; 255
 468:	7f 4f       	sbci	r23, 0xFF	; 255
 46a:	84 e6       	ldi	r24, 0x64	; 100
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	62 de       	rcall	.-828    	; 0x134 <stepperControl>
 470:	8c ed       	ldi	r24, 0xDC	; 220
 472:	95 e0       	ldi	r25, 0x05	; 5
 474:	44 de       	rcall	.-888    	; 0xfe <mTimer>
 476:	ae 01       	movw	r20, r28
 478:	4d 5f       	subi	r20, 0xFD	; 253
 47a:	5f 4f       	sbci	r21, 0xFF	; 255
 47c:	be 01       	movw	r22, r28
 47e:	6f 5f       	subi	r22, 0xFF	; 255
 480:	7f 4f       	sbci	r23, 0xFF	; 255
 482:	8c e9       	ldi	r24, 0x9C	; 156
 484:	9f ef       	ldi	r25, 0xFF	; 255
 486:	56 de       	rcall	.-852    	; 0x134 <stepperControl>
 488:	8c ed       	ldi	r24, 0xDC	; 220
 48a:	95 e0       	ldi	r25, 0x05	; 5
 48c:	38 de       	rcall	.-912    	; 0xfe <mTimer>
 48e:	ae 01       	movw	r20, r28
 490:	4d 5f       	subi	r20, 0xFD	; 253
 492:	5f 4f       	sbci	r21, 0xFF	; 255
 494:	be 01       	movw	r22, r28
 496:	6f 5f       	subi	r22, 0xFF	; 255
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	8f ed       	ldi	r24, 0xDF	; 223
 49c:	9f ef       	ldi	r25, 0xFF	; 255
 49e:	4a de       	rcall	.-876    	; 0x134 <stepperControl>
 4a0:	8c ed       	ldi	r24, 0xDC	; 220
 4a2:	95 e0       	ldi	r25, 0x05	; 5
 4a4:	2c de       	rcall	.-936    	; 0xfe <mTimer>
 4a6:	ae 01       	movw	r20, r28
 4a8:	4d 5f       	subi	r20, 0xFD	; 253
 4aa:	5f 4f       	sbci	r21, 0xFF	; 255
 4ac:	be 01       	movw	r22, r28
 4ae:	6f 5f       	subi	r22, 0xFF	; 255
 4b0:	7f 4f       	sbci	r23, 0xFF	; 255
 4b2:	8f ee       	ldi	r24, 0xEF	; 239
 4b4:	9f ef       	ldi	r25, 0xFF	; 255
 4b6:	3e de       	rcall	.-900    	; 0x134 <stepperControl>
 4b8:	8c ed       	ldi	r24, 0xDC	; 220
 4ba:	95 e0       	ldi	r25, 0x05	; 5
 4bc:	20 de       	rcall	.-960    	; 0xfe <mTimer>
 4be:	95 cf       	rjmp	.-214    	; 0x3ea <main+0x5a>

000004c0 <__vector_7>:
ISR(INT2_vect){
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	ADCSRA |= _BV(ADSC);
}
*/
ISR(INT6_vect){ //Active low for hall effect sensor on PE4
 4c0:	1f 92       	push	r1
 4c2:	0f 92       	push	r0
 4c4:	0f b6       	in	r0, 0x3f	; 63
 4c6:	0f 92       	push	r0
 4c8:	11 24       	eor	r1, r1
 4ca:	8f 93       	push	r24
	HallEffect=0x01;
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <HallEffect>
	PORTC=0b01010101;
 4d2:	85 e5       	ldi	r24, 0x55	; 85
 4d4:	88 b9       	out	0x08, r24	; 8
}
 4d6:	8f 91       	pop	r24
 4d8:	0f 90       	pop	r0
 4da:	0f be       	out	0x3f, r0	; 63
 4dc:	0f 90       	pop	r0
 4de:	1f 90       	pop	r1
 4e0:	18 95       	reti

000004e2 <__divmodhi4>:
 4e2:	97 fb       	bst	r25, 7
 4e4:	07 2e       	mov	r0, r23
 4e6:	16 f4       	brtc	.+4      	; 0x4ec <__divmodhi4+0xa>
 4e8:	00 94       	com	r0
 4ea:	06 d0       	rcall	.+12     	; 0x4f8 <__divmodhi4_neg1>
 4ec:	77 fd       	sbrc	r23, 7
 4ee:	08 d0       	rcall	.+16     	; 0x500 <__divmodhi4_neg2>
 4f0:	0b d0       	rcall	.+22     	; 0x508 <__udivmodhi4>
 4f2:	07 fc       	sbrc	r0, 7
 4f4:	05 d0       	rcall	.+10     	; 0x500 <__divmodhi4_neg2>
 4f6:	3e f4       	brtc	.+14     	; 0x506 <__divmodhi4_exit>

000004f8 <__divmodhi4_neg1>:
 4f8:	90 95       	com	r25
 4fa:	81 95       	neg	r24
 4fc:	9f 4f       	sbci	r25, 0xFF	; 255
 4fe:	08 95       	ret

00000500 <__divmodhi4_neg2>:
 500:	70 95       	com	r23
 502:	61 95       	neg	r22
 504:	7f 4f       	sbci	r23, 0xFF	; 255

00000506 <__divmodhi4_exit>:
 506:	08 95       	ret

00000508 <__udivmodhi4>:
 508:	aa 1b       	sub	r26, r26
 50a:	bb 1b       	sub	r27, r27
 50c:	51 e1       	ldi	r21, 0x11	; 17
 50e:	07 c0       	rjmp	.+14     	; 0x51e <__udivmodhi4_ep>

00000510 <__udivmodhi4_loop>:
 510:	aa 1f       	adc	r26, r26
 512:	bb 1f       	adc	r27, r27
 514:	a6 17       	cp	r26, r22
 516:	b7 07       	cpc	r27, r23
 518:	10 f0       	brcs	.+4      	; 0x51e <__udivmodhi4_ep>
 51a:	a6 1b       	sub	r26, r22
 51c:	b7 0b       	sbc	r27, r23

0000051e <__udivmodhi4_ep>:
 51e:	88 1f       	adc	r24, r24
 520:	99 1f       	adc	r25, r25
 522:	5a 95       	dec	r21
 524:	a9 f7       	brne	.-22     	; 0x510 <__udivmodhi4_loop>
 526:	80 95       	com	r24
 528:	90 95       	com	r25
 52a:	bc 01       	movw	r22, r24
 52c:	cd 01       	movw	r24, r26
 52e:	08 95       	ret

00000530 <_exit>:
 530:	f8 94       	cli

00000532 <__stop_program>:
 532:	ff cf       	rjmp	.-2      	; 0x532 <__stop_program>
