
STEPPER_ACCEL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000004d0  00000564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800108  00800108  0000056c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000059c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011ce  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce3  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005de  00000000  00000000  0000250d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00002aec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b9  00000000  00000000  00002c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e5  00000000  00000000  00003301  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000038e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	21 c2       	rjmp	.+1090   	; 0x460 <__vector_7>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e0 ed       	ldi	r30, 0xD0	; 208
  ac:	f4 e0       	ldi	r31, 0x04	; 4
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 30       	cpi	r26, 0x08	; 8
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a8 e0       	ldi	r26, 0x08	; 8
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ae 30       	cpi	r26, 0x0E	; 14
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	42 d1       	rcall	.+644    	; 0x354 <main>
  d0:	fd c1       	rjmp	.+1018   	; 0x4cc <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <initTimer1>:
#include "interrupt.h"
void initTimer1(void){ //initialize Timer 1 for CTC (Clear Timer on Compare)
	/*set Waveform Generation mode to Clear Timer*/
	/*set WGM bits to 0100*/
	/*note WGM is spread over two registers*/
	TCCR1B |= _BV(WGM12);
  d4:	e1 e8       	ldi	r30, 0x81	; 129
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 60       	ori	r24, 0x08	; 8
  dc:	80 83       	st	Z, r24
	/*set Output Compare Register for 1000 cycles (1ms)*/
	OCR1A = 0x03E8;
  de:	88 ee       	ldi	r24, 0xE8	; 232
  e0:	93 e0       	ldi	r25, 0x03	; 3
  e2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	/*set the initial value of the Timer rCounter to 0x0000*/
	TCNT1 = 0x0000;
  ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f2:	08 95       	ret

000000f4 <mTimer>:
	/*Enable the output compare interrupt enable*/
	//TIMSK1=TIMSK1|0b00000010;
	return;
}
void mTimer(int count){ // delay microsecond
  f4:	ac 01       	movw	r20, r24
	int i = 0; //initialize loop counter
	/*initialize timer 1; runs at CPU clock (1MHz)*/
	TCCR1B |= _BV(CS10);
  f6:	e1 e8       	ldi	r30, 0x81	; 129
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	90 81       	ld	r25, Z
  fc:	91 60       	ori	r25, 0x01	; 1
  fe:	90 83       	st	Z, r25
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
 100:	b1 9a       	sbi	0x16, 1	; 22
	/*Enable the output compare interrupt enable*/
	//TIMSK1=TIMSK1|0b00000010;
	return;
}
void mTimer(int count){ // delay microsecond
	int i = 0; //initialize loop counter
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
	/*initialize timer 1; runs at CPU clock (1MHz)*/
	TCCR1B |= _BV(CS10);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
	while (i<count){
 106:	05 c0       	rjmp	.+10     	; 0x112 <mTimer+0x1e>
		if ((TIFR1 & 0x02) == 0x02){
 108:	b1 9b       	sbis	0x16, 1	; 22
 10a:	fe cf       	rjmp	.-4      	; 0x108 <mTimer+0x14>
			//clear interrupt flag by WRITING a ONE to the bit
			TIFR1 |= _BV(OCF1A);
 10c:	b1 9a       	sbi	0x16, 1	; 22
			i++; //increment loop counter
 10e:	2f 5f       	subi	r18, 0xFF	; 255
 110:	3f 4f       	sbci	r19, 0xFF	; 255
	int i = 0; //initialize loop counter
	/*initialize timer 1; runs at CPU clock (1MHz)*/
	TCCR1B |= _BV(CS10);
	/* Clear the timer interrupt flag and begin timer */
	TIFR1 |= _BV(OCF1A);
	while (i<count){
 112:	24 17       	cp	r18, r20
 114:	35 07       	cpc	r19, r21
 116:	1c f4       	brge	.+6      	; 0x11e <mTimer+0x2a>
		if ((TIFR1 & 0x02) == 0x02){
 118:	b1 9b       	sbis	0x16, 1	; 22
 11a:	f6 cf       	rjmp	.-20     	; 0x108 <mTimer+0x14>
 11c:	f7 cf       	rjmp	.-18     	; 0x10c <mTimer+0x18>
			TIFR1 |= _BV(OCF1A);
			i++; //increment loop counter
			/*Timer resets automatically due to WGM settings*/
		} //if end
	}//while end
	TCCR1B &= 0b11111000; //shut off timer 1
 11e:	e1 e8       	ldi	r30, 0x81	; 129
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	88 7f       	andi	r24, 0xF8	; 248
 126:	80 83       	st	Z, r24
 128:	08 95       	ret

0000012a <stepperControl>:
	if(((PINB & 0b00001100) >> 2) != d){ //if current direction doesn't match new direction
		PORTB &= 0b11110011; //stop motor
		PORTB |= 0b0011 | ((d & 0b11) << 2); //start motor in specified direction
	}
	dutyCycle = s*2.55;
	OCR0A = dutyCycle;//set duty cycle
 12a:	2f 92       	push	r2
 12c:	3f 92       	push	r3
 12e:	4f 92       	push	r4
 130:	5f 92       	push	r5
 132:	6f 92       	push	r6
 134:	7f 92       	push	r7
 136:	8f 92       	push	r8
 138:	9f 92       	push	r9
 13a:	af 92       	push	r10
 13c:	bf 92       	push	r11
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	00 d0       	rcall	.+0      	; 0x150 <stepperControl+0x26>
 150:	00 d0       	rcall	.+0      	; 0x152 <stepperControl+0x28>
 152:	cd b7       	in	r28, 0x3d	; 61
 154:	de b7       	in	r29, 0x3e	; 62
 156:	3c 01       	movw	r6, r24
 158:	7a 83       	std	Y+2, r23	; 0x02
 15a:	69 83       	std	Y+1, r22	; 0x01
 15c:	99 23       	and	r25, r25
 15e:	24 f4       	brge	.+8      	; 0x168 <stepperControl+0x3e>
 160:	88 27       	eor	r24, r24
 162:	99 27       	eor	r25, r25
 164:	86 19       	sub	r24, r6
 166:	97 09       	sbc	r25, r7
 168:	8c 01       	movw	r16, r24
 16a:	80 31       	cpi	r24, 0x10	; 16
 16c:	91 05       	cpc	r25, r1
 16e:	38 f4       	brcc	.+14     	; 0x17e <stepperControl+0x54>
 170:	96 95       	lsr	r25
 172:	87 95       	ror	r24
 174:	98 2f       	mov	r25, r24
 176:	24 e1       	ldi	r18, 0x14	; 20
 178:	22 2e       	mov	r2, r18
 17a:	28 1a       	sub	r2, r24
 17c:	05 c0       	rjmp	.+10     	; 0x188 <stepperControl+0x5e>
 17e:	98 e0       	ldi	r25, 0x08	; 8
 180:	0f 2e       	mov	r0, r31
 182:	fc e0       	ldi	r31, 0x0C	; 12
 184:	2f 2e       	mov	r2, r31
 186:	f0 2d       	mov	r31, r0
 188:	77 20       	and	r7, r7
 18a:	24 f4       	brge	.+8      	; 0x194 <stepperControl+0x6a>
 18c:	44 24       	eor	r4, r4
 18e:	4a 94       	dec	r4
 190:	54 2c       	mov	r5, r4
 192:	03 c0       	rjmp	.+6      	; 0x19a <stepperControl+0x70>
 194:	44 24       	eor	r4, r4
 196:	43 94       	inc	r4
 198:	51 2c       	mov	r5, r1
 19a:	01 15       	cp	r16, r1
 19c:	11 05       	cpc	r17, r1
 19e:	09 f4       	brne	.+2      	; 0x1a2 <stepperControl+0x78>
 1a0:	4b c0       	rjmp	.+150    	; 0x238 <stepperControl+0x10e>
 1a2:	52 01       	movw	r10, r4
 1a4:	42 01       	movw	r8, r4
 1a6:	0f 2e       	mov	r0, r31
 1a8:	f4 e1       	ldi	r31, 0x14	; 20
 1aa:	3f 2e       	mov	r3, r31
 1ac:	f0 2d       	mov	r31, r0
 1ae:	21 e0       	ldi	r18, 0x01	; 1
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	3c 83       	std	Y+4, r19	; 0x04
 1b4:	2b 83       	std	Y+3, r18	; 0x03
 1b6:	e9 2e       	mov	r14, r25
 1b8:	f1 2c       	mov	r15, r1
 1ba:	68 01       	movw	r12, r16
 1bc:	31 e0       	ldi	r19, 0x01	; 1
 1be:	c3 1a       	sub	r12, r19
 1c0:	d1 08       	sbc	r13, r1
 1c2:	c6 01       	movw	r24, r12
 1c4:	4b 81       	ldd	r20, Y+3	; 0x03
 1c6:	5c 81       	ldd	r21, Y+4	; 0x04
 1c8:	84 1b       	sub	r24, r20
 1ca:	95 0b       	sbc	r25, r21
 1cc:	e8 16       	cp	r14, r24
 1ce:	f9 06       	cpc	r15, r25
 1d0:	20 f4       	brcc	.+8      	; 0x1da <stepperControl+0xb0>
 1d2:	23 14       	cp	r2, r3
 1d4:	38 f4       	brcc	.+14     	; 0x1e4 <stepperControl+0xba>
 1d6:	3a 94       	dec	r3
 1d8:	0b c0       	rjmp	.+22     	; 0x1f0 <stepperControl+0xc6>
 1da:	53 e1       	ldi	r21, 0x13	; 19
 1dc:	53 15       	cp	r21, r3
 1de:	20 f0       	brcs	.+8      	; 0x1e8 <stepperControl+0xbe>
 1e0:	33 94       	inc	r3
 1e2:	06 c0       	rjmp	.+12     	; 0x1f0 <stepperControl+0xc6>
 1e4:	32 2c       	mov	r3, r2
 1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <stepperControl+0xc6>
 1e8:	0f 2e       	mov	r0, r31
 1ea:	f4 e1       	ldi	r31, 0x14	; 20
 1ec:	3f 2e       	mov	r3, r31
 1ee:	f0 2d       	mov	r31, r0
 1f0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepperIteration>
 1f4:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepperIteration+0x1>
 1f8:	88 0d       	add	r24, r8
 1fa:	99 1d       	adc	r25, r9
 1fc:	83 70       	andi	r24, 0x03	; 3
 1fe:	90 78       	andi	r25, 0x80	; 128
 200:	99 23       	and	r25, r25
 202:	24 f4       	brge	.+8      	; 0x20c <stepperControl+0xe2>
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	8c 6f       	ori	r24, 0xFC	; 252
 208:	9f 6f       	ori	r25, 0xFF	; 255
 20a:	01 96       	adiw	r24, 0x01	; 1
 20c:	fc 01       	movw	r30, r24
 20e:	ff 27       	eor	r31, r31
 210:	ee 0f       	add	r30, r30
 212:	ff 1f       	adc	r31, r31
 214:	e0 50       	subi	r30, 0x00	; 0
 216:	ff 4f       	sbci	r31, 0xFF	; 255
 218:	80 81       	ld	r24, Z
 21a:	82 b9       	out	0x02, r24	; 2
 21c:	83 2d       	mov	r24, r3
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	69 df       	rcall	.-302    	; 0xf4 <mTimer>
 222:	8b 81       	ldd	r24, Y+3	; 0x03
 224:	9c 81       	ldd	r25, Y+4	; 0x04
 226:	01 96       	adiw	r24, 0x01	; 1
 228:	9c 83       	std	Y+4, r25	; 0x04
 22a:	8b 83       	std	Y+3, r24	; 0x03
 22c:	8a 0c       	add	r8, r10
 22e:	9b 1c       	adc	r9, r11
 230:	08 17       	cp	r16, r24
 232:	19 07       	cpc	r17, r25
 234:	30 f6       	brcc	.-116    	; 0x1c2 <stepperControl+0x98>
 236:	04 c0       	rjmp	.+8      	; 0x240 <stepperControl+0x116>
 238:	e1 e0       	ldi	r30, 0x01	; 1
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	fc 83       	std	Y+4, r31	; 0x04
 23e:	eb 83       	std	Y+3, r30	; 0x03
 240:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepperIteration>
 244:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepperIteration+0x1>
 248:	2b 81       	ldd	r18, Y+3	; 0x03
 24a:	3c 81       	ldd	r19, Y+4	; 0x04
 24c:	21 50       	subi	r18, 0x01	; 1
 24e:	31 09       	sbc	r19, r1
 250:	a9 01       	movw	r20, r18
 252:	44 9d       	mul	r20, r4
 254:	90 01       	movw	r18, r0
 256:	45 9d       	mul	r20, r5
 258:	30 0d       	add	r19, r0
 25a:	54 9d       	mul	r21, r4
 25c:	30 0d       	add	r19, r0
 25e:	11 24       	eor	r1, r1
 260:	82 0f       	add	r24, r18
 262:	93 1f       	adc	r25, r19
 264:	83 70       	andi	r24, 0x03	; 3
 266:	90 78       	andi	r25, 0x80	; 128
 268:	99 23       	and	r25, r25
 26a:	24 f4       	brge	.+8      	; 0x274 <stepperControl+0x14a>
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	8c 6f       	ori	r24, 0xFC	; 252
 270:	9f 6f       	ori	r25, 0xFF	; 255
 272:	01 96       	adiw	r24, 0x01	; 1
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	fc 01       	movw	r30, r24
 27a:	e0 50       	subi	r30, 0x00	; 0
 27c:	ff 4f       	sbci	r31, 0xFF	; 255
 27e:	80 81       	ld	r24, Z
 280:	91 81       	ldd	r25, Z+1	; 0x01
 282:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <stepperIteration+0x1>
 286:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <stepperIteration>
 28a:	e9 81       	ldd	r30, Y+1	; 0x01
 28c:	fa 81       	ldd	r31, Y+2	; 0x02
 28e:	80 81       	ld	r24, Z
 290:	91 81       	ldd	r25, Z+1	; 0x01
 292:	86 0d       	add	r24, r6
 294:	97 1d       	adc	r25, r7
 296:	68 ec       	ldi	r22, 0xC8	; 200
 298:	70 e0       	ldi	r23, 0x00	; 0
 29a:	f1 d0       	rcall	.+482    	; 0x47e <__divmodhi4>
 29c:	91 83       	std	Z+1, r25	; 0x01
 29e:	80 83       	st	Z, r24
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	1f 91       	pop	r17
 2ae:	0f 91       	pop	r16
 2b0:	ff 90       	pop	r15
 2b2:	ef 90       	pop	r14
 2b4:	df 90       	pop	r13
 2b6:	cf 90       	pop	r12
 2b8:	bf 90       	pop	r11
 2ba:	af 90       	pop	r10
 2bc:	9f 90       	pop	r9
 2be:	8f 90       	pop	r8
 2c0:	7f 90       	pop	r7
 2c2:	6f 90       	pop	r6
 2c4:	5f 90       	pop	r5
 2c6:	4f 90       	pop	r4
 2c8:	3f 90       	pop	r3
 2ca:	2f 90       	pop	r2
 2cc:	08 95       	ret

000002ce <stepperHome>:
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	8c 01       	movw	r16, r24
 2d8:	12 b8       	out	0x02, r1	; 2
 2da:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <HallEffect>
 2de:	81 11       	cpse	r24, r1
 2e0:	1b c0       	rjmp	.+54     	; 0x318 <stepperHome+0x4a>
 2e2:	c0 e0       	ldi	r28, 0x00	; 0
 2e4:	d0 e0       	ldi	r29, 0x00	; 0
 2e6:	ce 01       	movw	r24, r28
 2e8:	83 70       	andi	r24, 0x03	; 3
 2ea:	90 78       	andi	r25, 0x80	; 128
 2ec:	99 23       	and	r25, r25
 2ee:	24 f4       	brge	.+8      	; 0x2f8 <stepperHome+0x2a>
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	8c 6f       	ori	r24, 0xFC	; 252
 2f4:	9f 6f       	ori	r25, 0xFF	; 255
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	88 0f       	add	r24, r24
 2fa:	99 1f       	adc	r25, r25
 2fc:	fc 01       	movw	r30, r24
 2fe:	e0 50       	subi	r30, 0x00	; 0
 300:	ff 4f       	sbci	r31, 0xFF	; 255
 302:	80 81       	ld	r24, Z
 304:	82 b9       	out	0x02, r24	; 2
 306:	8e e1       	ldi	r24, 0x1E	; 30
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	f4 de       	rcall	.-536    	; 0xf4 <mTimer>
 30c:	21 96       	adiw	r28, 0x01	; 1
 30e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <HallEffect>
 312:	88 23       	and	r24, r24
 314:	41 f3       	breq	.-48     	; 0x2e6 <stepperHome+0x18>
 316:	02 c0       	rjmp	.+4      	; 0x31c <stepperHome+0x4e>
 318:	c0 e0       	ldi	r28, 0x00	; 0
 31a:	d0 e0       	ldi	r29, 0x00	; 0
 31c:	21 97       	sbiw	r28, 0x01	; 1
 31e:	c3 70       	andi	r28, 0x03	; 3
 320:	d0 78       	andi	r29, 0x80	; 128
 322:	dd 23       	and	r29, r29
 324:	24 f4       	brge	.+8      	; 0x32e <stepperHome+0x60>
 326:	21 97       	sbiw	r28, 0x01	; 1
 328:	cc 6f       	ori	r28, 0xFC	; 252
 32a:	df 6f       	ori	r29, 0xFF	; 255
 32c:	21 96       	adiw	r28, 0x01	; 1
 32e:	d0 93 0a 01 	sts	0x010A, r29	; 0x80010a <stepperIteration+0x1>
 332:	c0 93 09 01 	sts	0x0109, r28	; 0x800109 <stepperIteration>
 336:	f8 01       	movw	r30, r16
 338:	11 82       	std	Z+1, r1	; 0x01
 33a:	10 82       	st	Z, r1
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	1f 91       	pop	r17
 342:	0f 91       	pop	r16
 344:	08 95       	ret

00000346 <setupISR>:
 346:	ee 9a       	sbi	0x1d, 6	; 29
 348:	ea e6       	ldi	r30, 0x6A	; 106
 34a:	f0 e0       	ldi	r31, 0x00	; 0
 34c:	80 81       	ld	r24, Z
 34e:	80 62       	ori	r24, 0x20	; 32
 350:	80 83       	st	Z, r24
 352:	08 95       	ret

00000354 <main>:
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	00 d0       	rcall	.+0      	; 0x35a <main+0x6>
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62
 35e:	1a 82       	std	Y+2, r1	; 0x02
 360:	19 82       	std	Y+1, r1	; 0x01
 362:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <HallEffect>
 366:	f8 94       	cli
 368:	ee df       	rcall	.-36     	; 0x346 <setupISR>
 36a:	8f ef       	ldi	r24, 0xFF	; 255
 36c:	81 b9       	out	0x01, r24	; 1
 36e:	87 b9       	out	0x07, r24	; 7
 370:	1d b8       	out	0x0d, r1	; 13
 372:	10 ba       	out	0x10, r1	; 16
 374:	af de       	rcall	.-674    	; 0xd4 <initTimer1>
 376:	78 94       	sei
 378:	88 ee       	ldi	r24, 0xE8	; 232
 37a:	93 e0       	ldi	r25, 0x03	; 3
 37c:	bb de       	rcall	.-650    	; 0xf4 <mTimer>
 37e:	80 ec       	ldi	r24, 0xC0	; 192
 380:	88 b9       	out	0x08, r24	; 8
 382:	88 ee       	ldi	r24, 0xE8	; 232
 384:	93 e0       	ldi	r25, 0x03	; 3
 386:	b6 de       	rcall	.-660    	; 0xf4 <mTimer>
 388:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepperIteration>
 38c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepperIteration+0x1>
 390:	88 b9       	out	0x08, r24	; 8
 392:	88 ee       	ldi	r24, 0xE8	; 232
 394:	93 e0       	ldi	r25, 0x03	; 3
 396:	ae de       	rcall	.-676    	; 0xf4 <mTimer>
 398:	ee 24       	eor	r14, r14
 39a:	e3 94       	inc	r14
 39c:	f1 2c       	mov	r15, r1
 39e:	00 e0       	ldi	r16, 0x00	; 0
 3a0:	10 e0       	ldi	r17, 0x00	; 0
 3a2:	c7 01       	movw	r24, r14
 3a4:	00 2e       	mov	r0, r16
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <main+0x58>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	0a 94       	dec	r0
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <main+0x54>
 3b0:	88 b9       	out	0x08, r24	; 8
 3b2:	88 ec       	ldi	r24, 0xC8	; 200
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	9e de       	rcall	.-708    	; 0xf4 <mTimer>
 3b8:	0f 5f       	subi	r16, 0xFF	; 255
 3ba:	1f 4f       	sbci	r17, 0xFF	; 255
 3bc:	08 30       	cpi	r16, 0x08	; 8
 3be:	11 05       	cpc	r17, r1
 3c0:	81 f7       	brne	.-32     	; 0x3a2 <main+0x4e>
 3c2:	06 e0       	ldi	r16, 0x06	; 6
 3c4:	10 e0       	ldi	r17, 0x00	; 0
 3c6:	c7 01       	movw	r24, r14
 3c8:	00 2e       	mov	r0, r16
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <main+0x7c>
 3cc:	88 0f       	add	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	0a 94       	dec	r0
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <main+0x78>
 3d4:	88 b9       	out	0x08, r24	; 8
 3d6:	88 ec       	ldi	r24, 0xC8	; 200
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	8c de       	rcall	.-744    	; 0xf4 <mTimer>
 3dc:	01 50       	subi	r16, 0x01	; 1
 3de:	11 09       	sbc	r17, r1
 3e0:	90 f7       	brcc	.-28     	; 0x3c6 <main+0x72>
 3e2:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <HallEffect>
 3e6:	ce 01       	movw	r24, r28
 3e8:	01 96       	adiw	r24, 0x01	; 1
 3ea:	71 df       	rcall	.-286    	; 0x2ce <stepperHome>
 3ec:	80 ed       	ldi	r24, 0xD0	; 208
 3ee:	97 e0       	ldi	r25, 0x07	; 7
 3f0:	81 de       	rcall	.-766    	; 0xf4 <mTimer>
 3f2:	be 01       	movw	r22, r28
 3f4:	6f 5f       	subi	r22, 0xFF	; 255
 3f6:	7f 4f       	sbci	r23, 0xFF	; 255
 3f8:	81 e1       	ldi	r24, 0x11	; 17
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	96 de       	rcall	.-724    	; 0x12a <stepperControl>
 3fe:	84 ef       	ldi	r24, 0xF4	; 244
 400:	91 e0       	ldi	r25, 0x01	; 1
 402:	78 de       	rcall	.-784    	; 0xf4 <mTimer>
 404:	be 01       	movw	r22, r28
 406:	6f 5f       	subi	r22, 0xFF	; 255
 408:	7f 4f       	sbci	r23, 0xFF	; 255
 40a:	81 e2       	ldi	r24, 0x21	; 33
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	8d de       	rcall	.-742    	; 0x12a <stepperControl>
 410:	84 ef       	ldi	r24, 0xF4	; 244
 412:	91 e0       	ldi	r25, 0x01	; 1
 414:	6f de       	rcall	.-802    	; 0xf4 <mTimer>
 416:	be 01       	movw	r22, r28
 418:	6f 5f       	subi	r22, 0xFF	; 255
 41a:	7f 4f       	sbci	r23, 0xFF	; 255
 41c:	84 e6       	ldi	r24, 0x64	; 100
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	84 de       	rcall	.-760    	; 0x12a <stepperControl>
 422:	84 ef       	ldi	r24, 0xF4	; 244
 424:	91 e0       	ldi	r25, 0x01	; 1
 426:	66 de       	rcall	.-820    	; 0xf4 <mTimer>
 428:	be 01       	movw	r22, r28
 42a:	6f 5f       	subi	r22, 0xFF	; 255
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8c e9       	ldi	r24, 0x9C	; 156
 430:	9f ef       	ldi	r25, 0xFF	; 255
 432:	7b de       	rcall	.-778    	; 0x12a <stepperControl>
 434:	84 ef       	ldi	r24, 0xF4	; 244
 436:	91 e0       	ldi	r25, 0x01	; 1
 438:	5d de       	rcall	.-838    	; 0xf4 <mTimer>
 43a:	be 01       	movw	r22, r28
 43c:	6f 5f       	subi	r22, 0xFF	; 255
 43e:	7f 4f       	sbci	r23, 0xFF	; 255
 440:	8e ec       	ldi	r24, 0xCE	; 206
 442:	9f ef       	ldi	r25, 0xFF	; 255
 444:	72 de       	rcall	.-796    	; 0x12a <stepperControl>
 446:	84 ef       	ldi	r24, 0xF4	; 244
 448:	91 e0       	ldi	r25, 0x01	; 1
 44a:	54 de       	rcall	.-856    	; 0xf4 <mTimer>
 44c:	be 01       	movw	r22, r28
 44e:	6f 5f       	subi	r22, 0xFF	; 255
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	8c e9       	ldi	r24, 0x9C	; 156
 454:	9f ef       	ldi	r25, 0xFF	; 255
 456:	69 de       	rcall	.-814    	; 0x12a <stepperControl>
 458:	84 ef       	ldi	r24, 0xF4	; 244
 45a:	91 e0       	ldi	r25, 0x01	; 1
 45c:	4b de       	rcall	.-874    	; 0xf4 <mTimer>
 45e:	9f cf       	rjmp	.-194    	; 0x39e <main+0x4a>

00000460 <__vector_7>:
ISR(INT2_vect){
	//when there is a rising edge on PD2, ADC is triggered which is currently ADC1 (PF1)
	ADCSRA |= _BV(ADSC);
}
*/
ISR(INT6_vect){ //Active low for hall effect sensor on PE4
 460:	1f 92       	push	r1
 462:	0f 92       	push	r0
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	0f 92       	push	r0
 468:	11 24       	eor	r1, r1
 46a:	8f 93       	push	r24
	HallEffect=0x01;
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <HallEffect>
}
 472:	8f 91       	pop	r24
 474:	0f 90       	pop	r0
 476:	0f be       	out	0x3f, r0	; 63
 478:	0f 90       	pop	r0
 47a:	1f 90       	pop	r1
 47c:	18 95       	reti

0000047e <__divmodhi4>:
 47e:	97 fb       	bst	r25, 7
 480:	07 2e       	mov	r0, r23
 482:	16 f4       	brtc	.+4      	; 0x488 <__divmodhi4+0xa>
 484:	00 94       	com	r0
 486:	06 d0       	rcall	.+12     	; 0x494 <__divmodhi4_neg1>
 488:	77 fd       	sbrc	r23, 7
 48a:	08 d0       	rcall	.+16     	; 0x49c <__divmodhi4_neg2>
 48c:	0b d0       	rcall	.+22     	; 0x4a4 <__udivmodhi4>
 48e:	07 fc       	sbrc	r0, 7
 490:	05 d0       	rcall	.+10     	; 0x49c <__divmodhi4_neg2>
 492:	3e f4       	brtc	.+14     	; 0x4a2 <__divmodhi4_exit>

00000494 <__divmodhi4_neg1>:
 494:	90 95       	com	r25
 496:	81 95       	neg	r24
 498:	9f 4f       	sbci	r25, 0xFF	; 255
 49a:	08 95       	ret

0000049c <__divmodhi4_neg2>:
 49c:	70 95       	com	r23
 49e:	61 95       	neg	r22
 4a0:	7f 4f       	sbci	r23, 0xFF	; 255

000004a2 <__divmodhi4_exit>:
 4a2:	08 95       	ret

000004a4 <__udivmodhi4>:
 4a4:	aa 1b       	sub	r26, r26
 4a6:	bb 1b       	sub	r27, r27
 4a8:	51 e1       	ldi	r21, 0x11	; 17
 4aa:	07 c0       	rjmp	.+14     	; 0x4ba <__udivmodhi4_ep>

000004ac <__udivmodhi4_loop>:
 4ac:	aa 1f       	adc	r26, r26
 4ae:	bb 1f       	adc	r27, r27
 4b0:	a6 17       	cp	r26, r22
 4b2:	b7 07       	cpc	r27, r23
 4b4:	10 f0       	brcs	.+4      	; 0x4ba <__udivmodhi4_ep>
 4b6:	a6 1b       	sub	r26, r22
 4b8:	b7 0b       	sbc	r27, r23

000004ba <__udivmodhi4_ep>:
 4ba:	88 1f       	adc	r24, r24
 4bc:	99 1f       	adc	r25, r25
 4be:	5a 95       	dec	r21
 4c0:	a9 f7       	brne	.-22     	; 0x4ac <__udivmodhi4_loop>
 4c2:	80 95       	com	r24
 4c4:	90 95       	com	r25
 4c6:	bc 01       	movw	r22, r24
 4c8:	cd 01       	movw	r24, r26
 4ca:	08 95       	ret

000004cc <_exit>:
 4cc:	f8 94       	cli

000004ce <__stop_program>:
 4ce:	ff cf       	rjmp	.-2      	; 0x4ce <__stop_program>
